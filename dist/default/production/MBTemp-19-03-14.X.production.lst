

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 13 19:51:07 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249                           
   250                           	psect	idataBANK3
   251  19CB                     __pidataBANK3:	
   252                           
   253                           ;initializer for _fator
   254  19CB  34D9               	retlw	217
   255  19CC  3403               	retlw	3
   256                           
   257                           ;initializer for _modoLeitura
   258  19CD  3408               	retlw	8
   259  000B                     _INTCONbits	set	11
   260  0013                     _SSPBUF	set	19
   261  0019                     _TXREG	set	25
   262  000C                     _PIR1	set	12
   263  0001                     _TMR0	set	1
   264  001A                     _RCREG	set	26
   265  000B                     _INTCON	set	11
   266  0018                     _RCSTA	set	24
   267  0014                     _SSPCON	set	20
   268  0014                     _SSPCONbits	set	20
   269  0008                     _PORTDbits	set	8
   270  0009                     _PORTE	set	9
   271  0008                     _PORTD	set	8
   272  0007                     _PORTC	set	7
   273  0006                     _PORTB	set	6
   274  0005                     _PORTA	set	5
   275  001E                     _RP1	set	30
   276  001D                     _RP0	set	29
   277  0065                     _RCIF	set	101
   278  005A                     _TMR0IF	set	90
   279  005F                     _GIE	set	95
   280  005E                     _PEIE	set	94
   281  005D                     _TMR0IE	set	93
   282  0043                     _RD3	set	67
   283  0088                     _TRISDbits	set	136
   284  008C                     _PIE1	set	140
   285  0098                     _TXSTA	set	152
   286  0099                     _SPBRG	set	153
   287  009A                     _SPBRGH	set	154
   288  0094                     _SSPSTAT	set	148
   289  0089                     _TRISE	set	137
   290  0088                     _TRISD	set	136
   291  0087                     _TRISC	set	135
   292  0086                     _TRISB	set	134
   293  0085                     _TRISA	set	133
   294  04A0                     _BF	set	1184
   295  04C1                     _TRMT	set	1217
   296  040A                     _PS2	set	1034
   297  0409                     _PS1	set	1033
   298  0408                     _PS0	set	1032
   299  040B                     _PSA	set	1035
   300  040D                     _T0CS	set	1037
   301  0465                     _RCIE	set	1125
   302  010C                     _EEDAT	set	268
   303  010D                     _EEADR	set	269
   304  018D                     _EECON2	set	397
   305  0187                     _BAUDCTL	set	391
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSEL	set	392
   308  0C61                     _WR	set	3169
   309  0C62                     _WREN	set	3170
   310  0C60                     _RD	set	3168
   311  0C67                     _EEPGD	set	3175
   312                           
   313                           ; #config settings
   314  0000                     
   315                           	psect	cinit
   316  0015                     start_initialization:	
   317  0015                     __initialization:	
   318                           
   319                           ; Initialize objects allocated to BANK3
   320  0015  1683               	bsf	3,5	;RP0=1, select bank3
   321  0016  1703               	bsf	3,6	;RP1=1, select bank3
   322  0017  160A  158A  21CB  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   323  001C  00E1               	movwf	__pdataBANK3& (0+127)
   324  001D  160A  158A  21CC  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   325  0022  00E2               	movwf	(__pdataBANK3+1)& (0+127)
   326  0023  160A  158A  21CD  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
   327  0028  00E3               	movwf	(__pdataBANK3+2)& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK3
   330  0029  1783               	bsf	3,7	;select IRP bank2
   331  002A  3090               	movlw	low __pbssBANK3
   332  002B  0084               	movwf	4
   333  002C  30C9               	movlw	low (__pbssBANK3+57)
   334  002D  120A  158A  2001  120A  118A  	fcall	clear_ram0
   335                           
   336                           ; Clear objects allocated to BANK2
   337  0032  3010               	movlw	low __pbssBANK2
   338  0033  0084               	movwf	4
   339  0034  3048               	movlw	low (__pbssBANK2+56)
   340  0035  120A  158A  2001   	fcall	clear_ram0
   341                           
   342                           ; Clear objects allocated to BANK0
   343  0038  1283               	bcf	3,5	;RP0=0, select bank0
   344  0039  1303               	bcf	3,6	;RP1=0, select bank0
   345  003A  01E0               	clrf	__pbssBANK0& (0+127)
   346  003B  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   347  003C  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   348  003D                     end_of_initialization:	
   349                           ;End of C runtime variable initialization code
   350                           
   351  003D                     __end_of__initialization:	
   352  003D  0183               	clrf	3
   353  003E  160A  118A  2B96   	ljmp	_main	;jump to C main() function
   354                           
   355                           	psect	bssBANK0
   356  0060                     __pbssBANK0:	
   357  0060                     _recebidos:	
   358  0060                     	ds	1
   359  0061                     _cSum:	
   360  0061                     	ds	1
   361  0062                     _idPlaca:	
   362  0062                     	ds	1
   363                           
   364                           	psect	bssBANK3
   365  0190                     __pbssBANK3:	
   366  0190                     _temp:	
   367  0190                     	ds	24
   368  01A8                     _valorAD:	
   369  01A8                     	ds	16
   370  01B8                     _media2:	
   371  01B8                     	ds	4
   372  01BC                     _b:	
   373  01BC                     	ds	3
   374  01BF                     _k:	
   375  01BF                     	ds	3
   376  01C2                     _lerADpuro:	
   377  01C2                     	ds	1
   378  01C3                     _fator2:	
   379  01C3                     	ds	1
   380  01C4                     _fator1:	
   381  01C4                     	ds	1
   382  01C5                     _b2:	
   383  01C5                     	ds	1
   384  01C6                     _b1:	
   385  01C6                     	ds	1
   386  01C7                     _k2:	
   387  01C7                     	ds	1
   388  01C8                     _k1:	
   389  01C8                     	ds	1
   390                           
   391                           	psect	dataBANK3
   392  01E1                     __pdataBANK3:	
   393  01E1                     _fator:	
   394  01E1                     	ds	2
   395  01E3                     _modoLeitura:	
   396  01E3                     	ds	1
   397                           
   398                           	psect	bssBANK2
   399  0110                     __pbssBANK2:	
   400  0110                     _erros:	
   401  0110                     	ds	16
   402  0120                     _serial:	
   403  0120                     	ds	40
   404                           
   405                           	psect	clrtext
   406  0801                     clear_ram0:	
   407                           ;	Called with FSR containing the base address, and
   408                           ;	W with the last address+1
   409                           
   410  0801  0064               	clrwdt	;clear the watchdog before getting into this loop
   411  0802                     clrloop0:	
   412  0802  0180               	clrf	0	;clear RAM location pointed to by FSR
   413  0803  0A84               	incf	4,f	;increment pointer
   414  0804  0604               	xorwf	4,w	;XOR with final address
   415  0805  1903               	btfsc	3,2	;have we reached the end yet?
   416  0806  3400               	retlw	0	;all done for this memory range, return
   417  0807  0604               	xorwf	4,w	;XOR again to restore value
   418  0808  2802               	goto	clrloop0	;do the next byte
   419                           
   420                           	psect	cstackBANK3
   421  01C9                     __pcstackBANK3:	
   422  01C9                     main@channel:	
   423                           
   424                           ; 2 bytes @ 0x0
   425  01C9                     	ds	2
   426  01CB                     main@difTemp:	
   427                           
   428                           ; 3 bytes @ 0x2
   429  01CB                     	ds	3
   430  01CE                     _main$962:	
   431                           
   432                           ; 3 bytes @ 0x5
   433  01CE                     	ds	3
   434  01D1                     _main$963:	
   435                           
   436                           ; 3 bytes @ 0x8
   437  01D1                     	ds	3
   438  01D4                     main@sum:	
   439                           
   440                           ; 4 bytes @ 0xB
   441  01D4                     	ds	4
   442  01D8                     main@t:	
   443                           
   444                           ; 3 bytes @ 0xF
   445  01D8                     	ds	3
   446  01DB                     main@j:	
   447                           
   448                           ; 2 bytes @ 0x12
   449  01DB                     	ds	2
   450  01DD                     main@p:	
   451                           
   452                           ; 2 bytes @ 0x14
   453  01DD                     	ds	2
   454  01DF                     main@i:	
   455                           
   456                           ; 2 bytes @ 0x16
   457  01DF                     	ds	2
   458                           
   459                           	psect	cstackBANK1
   460  00A0                     __pcstackBANK1:	
   461  00A0                     ??_getEEPROM:	
   462  00A0                     ?_escreveLT:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  00A0                     ?___bmul:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  00A0                     ?_SelectChannel:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  00A0                     ?_ad:	
   472                           ; 2 bytes @ 0x0
   473                           
   474  00A0                     ?___ftpack:	
   475                           ; 2 bytes @ 0x0
   476                           
   477  00A0                     ?___ftneg:	
   478                           ; 3 bytes @ 0x0
   479                           
   480  00A0                     escreveLT@data:	
   481                           ; 3 bytes @ 0x0
   482                           
   483  00A0                     ___bmul@multiplicand:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  00A0                     SelectChannel@ch:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  00A0                     ___ftpack@arg:	
   490                           ; 2 bytes @ 0x0
   491                           
   492  00A0                     ___ftneg@f1:	
   493                           ; 3 bytes @ 0x0
   494                           
   495                           
   496                           ; 3 bytes @ 0x0
   497  00A0                     	ds	1
   498  00A1                     ??_escreveLT:	
   499  00A1                     ??___bmul:	
   500                           ; 1 bytes @ 0x1
   501                           
   502  00A1                     getEEPROM@c:	
   503                           ; 1 bytes @ 0x1
   504                           
   505                           
   506                           ; 1 bytes @ 0x1
   507  00A1                     	ds	1
   508  00A2                     ??_SelectChannel:	
   509  00A2                     ??_ad:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  00A2                     getEEPROM@aux:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  00A2                     ___bmul@product:	
   516                           ; 1 bytes @ 0x2
   517                           
   518                           
   519                           ; 1 bytes @ 0x2
   520  00A2                     	ds	1
   521  00A3                     ?_setEEPROM:	
   522  00A3                     ??___ftneg:	
   523                           ; 1 bytes @ 0x3
   524                           
   525  00A3                     setEEPROM@valor:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  00A3                     escreveLT@regAddr:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  00A3                     ___bmul@multiplier:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  00A3                     ___ftpack@exp:	
   535                           ; 1 bytes @ 0x3
   536                           
   537                           
   538                           ; 1 bytes @ 0x3
   539  00A3                     	ds	1
   540  00A4                     ??_setEEPROM:	
   541  00A4                     setEEPROM@addr:	
   542                           ; 1 bytes @ 0x4
   543                           
   544  00A4                     escreveLT@chipAddr:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  00A4                     ___ftpack@sign:	
   548                           ; 1 bytes @ 0x4
   549                           
   550                           
   551                           ; 1 bytes @ 0x4
   552  00A4                     	ds	1
   553  00A5                     ??_compara:	
   554  00A5                     ??___ftpack:	
   555                           ; 1 bytes @ 0x5
   556                           
   557  00A5                     escreveLT@i:	
   558                           ; 1 bytes @ 0x5
   559                           
   560                           
   561                           ; 2 bytes @ 0x5
   562  00A5                     	ds	1
   563  00A6                     ad@_AD:	
   564                           
   565                           ; 2 bytes @ 0x6
   566  00A6                     	ds	1
   567  00A7                     escreveLT@j:	
   568                           
   569                           ; 2 bytes @ 0x7
   570  00A7                     	ds	1
   571  00A8                     ?___awtoft:	
   572  00A8                     ad@_AD0:	
   573                           ; 3 bytes @ 0x8
   574                           
   575  00A8                     ___awtoft@c:	
   576                           ; 2 bytes @ 0x8
   577                           
   578                           
   579                           ; 2 bytes @ 0x8
   580  00A8                     	ds	1
   581  00A9                     ??_initLT:	
   582  00A9                     compara@comparar:	
   583                           ; 1 bytes @ 0x9
   584                           
   585                           
   586                           ; 2 bytes @ 0x9
   587  00A9                     	ds	1
   588  00AA                     ??_inicializar:	
   589  00AA                     inicializar@i:	
   590                           ; 1 bytes @ 0xA
   591                           
   592  00AA                     ad@_AD1:	
   593                           ; 2 bytes @ 0xA
   594                           
   595                           
   596                           ; 2 bytes @ 0xA
   597  00AA                     	ds	1
   598  00AB                     ??___awtoft:	
   599  00AB                     compara@comp:	
   600                           ; 1 bytes @ 0xB
   601                           
   602                           
   603                           ; 2 bytes @ 0xB
   604  00AB                     	ds	2
   605  00AD                     ___awtoft@sign:	
   606                           
   607                           ; 1 bytes @ 0xD
   608  00AD                     	ds	1
   609  00AE                     ?___ftadd:	
   610  00AE                     ___ftadd@f1:	
   611                           ; 3 bytes @ 0xE
   612                           
   613                           
   614                           ; 3 bytes @ 0xE
   615  00AE                     	ds	3
   616  00B1                     ___ftadd@f2:	
   617                           
   618                           ; 3 bytes @ 0x11
   619  00B1                     	ds	3
   620  00B4                     ??___ftadd:	
   621                           
   622                           ; 1 bytes @ 0x14
   623  00B4                     	ds	4
   624  00B8                     ___ftadd@sign:	
   625                           
   626                           ; 1 bytes @ 0x18
   627  00B8                     	ds	1
   628  00B9                     ___ftadd@exp2:	
   629                           
   630                           ; 1 bytes @ 0x19
   631  00B9                     	ds	1
   632  00BA                     ___ftadd@exp1:	
   633                           
   634                           ; 1 bytes @ 0x1A
   635  00BA                     	ds	1
   636  00BB                     ?___ftdiv:	
   637  00BB                     ___ftdiv@f2:	
   638                           ; 3 bytes @ 0x1B
   639                           
   640                           
   641                           ; 3 bytes @ 0x1B
   642  00BB                     	ds	3
   643  00BE                     ___ftdiv@f1:	
   644                           
   645                           ; 3 bytes @ 0x1E
   646  00BE                     	ds	3
   647  00C1                     ??___ftdiv:	
   648                           
   649                           ; 1 bytes @ 0x21
   650  00C1                     	ds	4
   651  00C5                     ___ftdiv@cntr:	
   652                           
   653                           ; 1 bytes @ 0x25
   654  00C5                     	ds	1
   655  00C6                     ___ftdiv@f3:	
   656                           
   657                           ; 3 bytes @ 0x26
   658  00C6                     	ds	3
   659  00C9                     ___ftdiv@exp:	
   660                           
   661                           ; 1 bytes @ 0x29
   662  00C9                     	ds	1
   663  00CA                     ___ftdiv@sign:	
   664                           
   665                           ; 1 bytes @ 0x2A
   666  00CA                     	ds	1
   667  00CB                     ?___ftsub:	
   668  00CB                     ___ftsub@f2:	
   669                           ; 3 bytes @ 0x2B
   670                           
   671                           
   672                           ; 3 bytes @ 0x2B
   673  00CB                     	ds	3
   674  00CE                     ___ftsub@f1:	
   675                           
   676                           ; 3 bytes @ 0x2E
   677  00CE                     	ds	3
   678  00D1                     ?___ftge:	
   679  00D1                     ??___ftsub:	
   680                           ; 1 bit 
   681                           
   682  00D1                     ?___ftmul:	
   683                           ; 1 bytes @ 0x31
   684                           
   685  00D1                     ___ftge@ff1:	
   686                           ; 3 bytes @ 0x31
   687                           
   688  00D1                     ___ftmul@f1:	
   689                           ; 3 bytes @ 0x31
   690                           
   691                           
   692                           ; 3 bytes @ 0x31
   693  00D1                     	ds	3
   694  00D4                     ___ftge@ff2:	
   695  00D4                     ___ftmul@f2:	
   696                           ; 3 bytes @ 0x34
   697                           
   698                           
   699                           ; 3 bytes @ 0x34
   700  00D4                     	ds	3
   701  00D7                     ??___ftge:	
   702  00D7                     ??___ftmul:	
   703                           ; 1 bytes @ 0x37
   704                           
   705  00D7                     ?_fabs:	
   706                           ; 1 bytes @ 0x37
   707                           
   708  00D7                     fabs@d:	
   709                           ; 3 bytes @ 0x37
   710                           
   711                           
   712                           ; 3 bytes @ 0x37
   713  00D7                     	ds	3
   714  00DA                     ??_fabs:	
   715                           
   716                           ; 1 bytes @ 0x3A
   717  00DA                     	ds	1
   718  00DB                     ___ftmul@exp:	
   719                           
   720                           ; 1 bytes @ 0x3B
   721  00DB                     	ds	1
   722  00DC                     ___ftmul@f3_as_product:	
   723                           
   724                           ; 3 bytes @ 0x3C
   725  00DC                     	ds	3
   726  00DF                     ___ftmul@cntr:	
   727                           
   728                           ; 1 bytes @ 0x3F
   729  00DF                     	ds	1
   730  00E0                     ___ftmul@sign:	
   731                           
   732                           ; 1 bytes @ 0x40
   733  00E0                     	ds	1
   734  00E1                     ??_main:	
   735                           
   736                           ; 1 bytes @ 0x41
   737  00E1                     	ds	8
   738                           
   739                           	psect	cstackCOMMON
   740  0070                     __pcstackCOMMON:	
   741  0070                     ?_inicializar:	
   742  0070                     ?_compara:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_getEEPROM:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_initLT:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_enviar:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_main:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_erro:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_erro:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_ok:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_interruption:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_escreve_alpha:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_escreve_k:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_escreve_b:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?i1_getEEPROM:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ??i1_getEEPROM:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?i1___bmul:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?___awdiv:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?i1___ftpack:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     i1___bmul@multiplicand:	
   794                           ; 3 bytes @ 0x0
   795                           
   796  0070                     enviar@n:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ___awdiv@divisor:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0070                     i1___ftpack@arg:	
   803                           ; 2 bytes @ 0x0
   804                           
   805                           
   806                           ; 3 bytes @ 0x0
   807  0070                     	ds	1
   808  0071                     ??i1___bmul:	
   809  0071                     erro@e:	
   810                           ; 1 bytes @ 0x1
   811                           
   812  0071                     i1getEEPROM@c:	
   813                           ; 1 bytes @ 0x1
   814                           
   815                           
   816                           ; 1 bytes @ 0x1
   817  0071                     	ds	1
   818  0072                     ??_enviar:	
   819  0072                     ??_ok:	
   820                           ; 1 bytes @ 0x2
   821                           
   822  0072                     i1getEEPROM@aux:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0072                     i1___bmul@multiplier:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0072                     ___awdiv@dividend:	
   829                           ; 1 bytes @ 0x2
   830                           
   831                           
   832                           ; 2 bytes @ 0x2
   833  0072                     	ds	1
   834  0073                     i1___ftpack@exp:	
   835  0073                     i1___bmul@product:	
   836                           ; 1 bytes @ 0x3
   837                           
   838                           
   839                           ; 1 bytes @ 0x3
   840  0073                     	ds	1
   841  0074                     ??___awdiv:	
   842  0074                     ?i1_setEEPROM:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0074                     enviar@envia:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0074                     i1setEEPROM@valor:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0074                     i1___ftpack@sign:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856  0074                     	ds	1
   857  0075                     ??i1_setEEPROM:	
   858  0075                     ??i1___ftpack:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0075                     enviar@cs:	
   862                           ; 1 bytes @ 0x5
   863                           
   864  0075                     ___awdiv@counter:	
   865                           ; 1 bytes @ 0x5
   866                           
   867  0075                     i1setEEPROM@addr:	
   868                           ; 1 bytes @ 0x5
   869                           
   870                           
   871                           ; 1 bytes @ 0x5
   872  0075                     	ds	1
   873  0076                     ??_escreve_alpha:	
   874  0076                     ___awdiv@sign:	
   875                           ; 1 bytes @ 0x6
   876                           
   877  0076                     enviar@i:	
   878                           ; 1 bytes @ 0x6
   879                           
   880                           
   881                           ; 2 bytes @ 0x6
   882  0076                     	ds	1
   883  0077                     ___awdiv@quotient:	
   884                           
   885                           ; 2 bytes @ 0x7
   886  0077                     	ds	1
   887  0078                     ?i1___awtoft:	
   888  0078                     ?i1___ftmul:	
   889                           ; 3 bytes @ 0x8
   890                           
   891  0078                     escreve_alpha@novo_fator:	
   892                           ; 3 bytes @ 0x8
   893                           
   894  0078                     i1___awtoft@c:	
   895                           ; 2 bytes @ 0x8
   896                           
   897  0078                     i1___ftmul@f1:	
   898                           ; 2 bytes @ 0x8
   899                           
   900                           
   901                           ; 3 bytes @ 0x8
   902  0078                     	ds	1
   903  0079                     ?_le_alpha:	
   904  0079                     ?_le_k:	
   905                           ; 1 bytes @ 0x9
   906                           
   907  0079                     ?_le_b:	
   908                           ; 1 bytes @ 0x9
   909                           
   910  0079                     le_alpha@n:	
   911                           ; 1 bytes @ 0x9
   912                           
   913  0079                     le_k@n:	
   914                           ; 2 bytes @ 0x9
   915                           
   916  0079                     le_b@n:	
   917                           ; 2 bytes @ 0x9
   918                           
   919                           
   920                           ; 2 bytes @ 0x9
   921  0079                     	ds	1
   922  007A                     escreve_alpha@p:	
   923                           
   924                           ; 1 bytes @ 0xA
   925  007A                     	ds	1
   926  007B                     ??_le_alpha:	
   927  007B                     ??_le_k:	
   928                           ; 1 bytes @ 0xB
   929                           
   930  007B                     ??_le_b:	
   931                           ; 1 bytes @ 0xB
   932                           
   933  007B                     ??i1___awtoft:	
   934                           ; 1 bytes @ 0xB
   935                           
   936  007B                     escreve_alpha@w_alpha:	
   937                           ; 1 bytes @ 0xB
   938                           
   939  007B                     i1___ftmul@f2:	
   940                           ; 2 bytes @ 0xB
   941                           
   942                           
   943                           ; 3 bytes @ 0xB
   944  007B                     	ds	2
   945  007D                     le_alpha@p:	
   946  007D                     le_k@p:	
   947                           ; 1 bytes @ 0xD
   948                           
   949  007D                     le_b@p:	
   950                           ; 1 bytes @ 0xD
   951                           
   952  007D                     i1___awtoft@sign:	
   953                           ; 1 bytes @ 0xD
   954                           
   955                           
   956                           ; 1 bytes @ 0xD
   957  007D                     	ds	1
   958                           
   959                           	psect	cstackBANK0
   960  0020                     __pcstackBANK0:	
   961  0020                     ??i1___ftmul:	
   962  0020                     ?i1___ftdiv:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0020                     i1___ftdiv@f2:	
   966                           ; 3 bytes @ 0x0
   967                           
   968                           
   969                           ; 3 bytes @ 0x0
   970  0020                     	ds	3
   971  0023                     i1___ftdiv@f1:	
   972                           
   973                           ; 3 bytes @ 0x3
   974  0023                     	ds	1
   975  0024                     i1___ftmul@exp:	
   976                           
   977                           ; 1 bytes @ 0x4
   978  0024                     	ds	1
   979  0025                     i1___ftmul@f3_as_product:	
   980                           
   981                           ; 3 bytes @ 0x5
   982  0025                     	ds	1
   983  0026                     ??i1___ftdiv:	
   984                           
   985                           ; 1 bytes @ 0x6
   986  0026                     	ds	2
   987  0028                     i1___ftmul@cntr:	
   988                           
   989                           ; 1 bytes @ 0x8
   990  0028                     	ds	1
   991  0029                     i1___ftmul@sign:	
   992                           
   993                           ; 1 bytes @ 0x9
   994  0029                     	ds	1
   995  002A                     ?___fttol:	
   996  002A                     i1___ftdiv@cntr:	
   997                           ; 4 bytes @ 0xA
   998                           
   999  002A                     ___fttol@f1:	
  1000                           ; 1 bytes @ 0xA
  1001                           
  1002                           
  1003                           ; 3 bytes @ 0xA
  1004  002A                     	ds	1
  1005  002B                     i1___ftdiv@f3:	
  1006                           
  1007                           ; 3 bytes @ 0xB
  1008  002B                     	ds	3
  1009  002E                     ??___fttol:	
  1010  002E                     i1___ftdiv@exp:	
  1011                           ; 1 bytes @ 0xE
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0xE
  1015  002E                     	ds	1
  1016  002F                     i1___ftdiv@sign:	
  1017                           
  1018                           ; 1 bytes @ 0xF
  1019  002F                     	ds	1
  1020  0030                     ??_escreve_k:	
  1021  0030                     ??_escreve_b:	
  1022                           ; 1 bytes @ 0x10
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x10
  1026  0030                     	ds	2
  1027  0032                     escreve_k@p:	
  1028  0032                     escreve_b@p:	
  1029                           ; 1 bytes @ 0x12
  1030                           
  1031  0032                     ___fttol@sign1:	
  1032                           ; 1 bytes @ 0x12
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x12
  1036  0032                     	ds	1
  1037  0033                     escreve_k@write_k:	
  1038  0033                     escreve_b@write_b:	
  1039                           ; 2 bytes @ 0x13
  1040                           
  1041  0033                     ___fttol@lval:	
  1042                           ; 2 bytes @ 0x13
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x13
  1046  0033                     	ds	4
  1047  0037                     ___fttol@exp1:	
  1048                           
  1049                           ; 1 bytes @ 0x17
  1050  0037                     	ds	1
  1051  0038                     ?_le_temp:	
  1052  0038                     le_temp@temp_index:	
  1053                           ; 1 bytes @ 0x18
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0x18
  1057  0038                     	ds	2
  1058  003A                     ??_le_temp:	
  1059                           
  1060                           ; 1 bytes @ 0x1A
  1061  003A                     	ds	1
  1062  003B                     le_temp@valor:	
  1063                           
  1064                           ; 2 bytes @ 0x1B
  1065  003B                     	ds	2
  1066  003D                     le_temp@p:	
  1067                           
  1068                           ; 1 bytes @ 0x1D
  1069  003D                     	ds	1
  1070  003E                     ?_protocolo:	
  1071                           
  1072                           ; 2 bytes @ 0x1E
  1073  003E                     	ds	2
  1074  0040                     ??_protocolo:	
  1075                           
  1076                           ; 1 bytes @ 0x20
  1077  0040                     	ds	4
  1078  0044                     _protocolo$363:	
  1079                           
  1080                           ; 2 bytes @ 0x24
  1081  0044                     	ds	2
  1082  0046                     _protocolo$364:	
  1083                           
  1084                           ; 2 bytes @ 0x26
  1085  0046                     	ds	2
  1086  0048                     protocolo@comando:	
  1087                           
  1088                           ; 1 bytes @ 0x28
  1089  0048                     	ds	1
  1090  0049                     protocolo@id_376:	
  1091                           
  1092                           ; 1 bytes @ 0x29
  1093  0049                     	ds	1
  1094  004A                     protocolo@i_371:	
  1095                           
  1096                           ; 2 bytes @ 0x2A
  1097  004A                     	ds	2
  1098  004C                     protocolo@i_360:	
  1099                           
  1100                           ; 2 bytes @ 0x2C
  1101  004C                     	ds	2
  1102  004E                     protocolo@id:	
  1103                           
  1104                           ; 1 bytes @ 0x2E
  1105  004E                     	ds	1
  1106  004F                     protocolo@id_370:	
  1107                           
  1108                           ; 1 bytes @ 0x2F
  1109  004F                     	ds	1
  1110  0050                     protocolo@i_362:	
  1111                           
  1112                           ; 2 bytes @ 0x30
  1113  0050                     	ds	2
  1114  0052                     protocolo@cmd:	
  1115                           
  1116                           ; 1 bytes @ 0x32
  1117  0052                     	ds	1
  1118  0053                     protocolo@tamanho:	
  1119                           
  1120                           ; 2 bytes @ 0x33
  1121  0053                     	ds	2
  1122  0055                     protocolo@tam:	
  1123                           
  1124                           ; 1 bytes @ 0x35
  1125  0055                     	ds	1
  1126  0056                     protocolo@id_365:	
  1127                           
  1128                           ; 1 bytes @ 0x36
  1129  0056                     	ds	1
  1130  0057                     protocolo@id_372:	
  1131                           
  1132                           ; 1 bytes @ 0x37
  1133  0057                     	ds	1
  1134  0058                     protocolo@payload:	
  1135                           
  1136                           ; 1 bytes @ 0x38
  1137  0058                     	ds	1
  1138  0059                     ??_interruption:	
  1139                           
  1140                           ; 1 bytes @ 0x39
  1141  0059                     	ds	6
  1142  005F                     interruption@uByte:	
  1143                           
  1144                           ; 1 bytes @ 0x3F
  1145  005F                     	ds	1
  1146                           
  1147                           	psect	maintext
  1148  1396                     __pmaintext:	
  1149 ;;
  1150 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1151 ;;
  1152 ;; *************** function _main *****************
  1153 ;; Defined at:
  1154 ;;		line 94 in file "main_sync.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  sum             4   11[BANK3 ] unsigned long 
  1159 ;;  t               3   15[BANK3 ] float 
  1160 ;;  difTemp         3    2[BANK3 ] float 
  1161 ;;  t2              3    0        float 
  1162 ;;  ti              3    0        float 
  1163 ;;  i               2   22[BANK3 ] int 
  1164 ;;  p               2   20[BANK3 ] int 
  1165 ;;  j               2   18[BANK3 ] int 
  1166 ;;  channel         2    0[BANK3 ] int 
  1167 ;;  valorAntigo     2    0        int 
  1168 ;;  valorNovo       2    0        int 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : B00/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0      24       0
  1180 ;;      Temps:          0       0       8       0       0
  1181 ;;      Totals:         0       0       8      24       0
  1182 ;;Total ram usage:       32 bytes
  1183 ;; Hardware stack levels required when called:    8
  1184 ;; This function calls:
  1185 ;;		_SelectChannel
  1186 ;;		___awtoft
  1187 ;;		___bmul
  1188 ;;		___ftadd
  1189 ;;		___ftdiv
  1190 ;;		___ftge
  1191 ;;		___ftmul
  1192 ;;		___ftsub
  1193 ;;		_ad
  1194 ;;		_compara
  1195 ;;		_fabs
  1196 ;;		_getEEPROM
  1197 ;;		_inicializar
  1198 ;; This function is called by:
  1199 ;;		Startup code after reset
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _main
  1205  1396                     _main:	
  1206                           
  1207                           ;main_sync.c: 96: int i, j, p, channel = 8;
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1211  1396  3008               	movlw	8
  1212  1397  1683               	bsf	3,5	;RP0=1, select bank3
  1213  1398  1703               	bsf	3,6	;RP1=1, select bank3
  1214  1399  00C9               	movwf	main@channel^(0+384)
  1215  139A  3000               	movlw	0
  1216  139B  00CA               	movwf	(main@channel^(0+384)+1)
  1217                           
  1218                           ;main_sync.c: 99: float t, ti, t2;;main_sync.c: 100: float difTemp = 1;
  1219  139C  3000               	movlw	0
  1220  139D  00CB               	movwf	main@difTemp^(0+384)
  1221  139E  3080               	movlw	128
  1222  139F  00CC               	movwf	(main@difTemp+1)^(0+384)
  1223  13A0  303F               	movlw	63
  1224  13A1  00CD               	movwf	(main@difTemp+2)^(0+384)
  1225                           
  1226                           ;main_sync.c: 102: inicializar();
  1227  13A2  160A  158A  2539  160A  118A  	fcall	_inicializar
  1228                           
  1229                           ;main_sync.c: 103: compara();
  1230  13A7  120A  158A  218F  160A  118A  	fcall	_compara
  1231                           
  1232                           ;main_sync.c: 105: k1 = getEEPROM(0);
  1233  13AC  3000               	movlw	0
  1234  13AD  160A  158A  220F  160A  118A  	fcall	_getEEPROM
  1235  13B2  1683               	bsf	3,5	;RP0=1, select bank1
  1236  13B3  1303               	bcf	3,6	;RP1=0, select bank1
  1237  13B4  00E1               	movwf	??_main^(0+128)
  1238  13B5  0861               	movf	??_main^(0+128),w
  1239  13B6  1683               	bsf	3,5	;RP0=1, select bank3
  1240  13B7  1703               	bsf	3,6	;RP1=1, select bank3
  1241  13B8  00C8               	movwf	_k1^(0+384)
  1242                           
  1243                           ;main_sync.c: 106: k2 = getEEPROM(1);
  1244  13B9  3001               	movlw	1
  1245  13BA  160A  158A  220F  160A  118A  	fcall	_getEEPROM
  1246  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  1247  13C0  1303               	bcf	3,6	;RP1=0, select bank1
  1248  13C1  00E1               	movwf	??_main^(0+128)
  1249  13C2  0861               	movf	??_main^(0+128),w
  1250  13C3  1683               	bsf	3,5	;RP0=1, select bank3
  1251  13C4  1703               	bsf	3,6	;RP1=1, select bank3
  1252  13C5  00C7               	movwf	_k2^(0+384)
  1253                           
  1254                           ;main_sync.c: 107: b1 = getEEPROM(2);
  1255  13C6  3002               	movlw	2
  1256  13C7  160A  158A  220F  160A  118A  	fcall	_getEEPROM
  1257  13CC  1683               	bsf	3,5	;RP0=1, select bank1
  1258  13CD  1303               	bcf	3,6	;RP1=0, select bank1
  1259  13CE  00E1               	movwf	??_main^(0+128)
  1260  13CF  0861               	movf	??_main^(0+128),w
  1261  13D0  1683               	bsf	3,5	;RP0=1, select bank3
  1262  13D1  1703               	bsf	3,6	;RP1=1, select bank3
  1263  13D2  00C6               	movwf	_b1^(0+384)
  1264                           
  1265                           ;main_sync.c: 108: b2 = getEEPROM(3);
  1266  13D3  3003               	movlw	3
  1267  13D4  160A  158A  220F  160A  118A  	fcall	_getEEPROM
  1268  13D9  1683               	bsf	3,5	;RP0=1, select bank1
  1269  13DA  1303               	bcf	3,6	;RP1=0, select bank1
  1270  13DB  00E1               	movwf	??_main^(0+128)
  1271  13DC  0861               	movf	??_main^(0+128),w
  1272  13DD  1683               	bsf	3,5	;RP0=1, select bank3
  1273  13DE  1703               	bsf	3,6	;RP1=1, select bank3
  1274  13DF  00C5               	movwf	_b2^(0+384)
  1275                           
  1276                           ;main_sync.c: 109: fator1 = getEEPROM(4);
  1277  13E0  3004               	movlw	4
  1278  13E1  160A  158A  220F  160A  118A  	fcall	_getEEPROM
  1279  13E6  1683               	bsf	3,5	;RP0=1, select bank1
  1280  13E7  1303               	bcf	3,6	;RP1=0, select bank1
  1281  13E8  00E1               	movwf	??_main^(0+128)
  1282  13E9  0861               	movf	??_main^(0+128),w
  1283  13EA  1683               	bsf	3,5	;RP0=1, select bank3
  1284  13EB  1703               	bsf	3,6	;RP1=1, select bank3
  1285  13EC  00C4               	movwf	_fator1^(0+384)
  1286                           
  1287                           ;main_sync.c: 110: fator2 = getEEPROM(5);
  1288  13ED  3005               	movlw	5
  1289  13EE  160A  158A  220F  160A  118A  	fcall	_getEEPROM
  1290  13F3  1683               	bsf	3,5	;RP0=1, select bank1
  1291  13F4  1303               	bcf	3,6	;RP1=0, select bank1
  1292  13F5  00E1               	movwf	??_main^(0+128)
  1293  13F6  0861               	movf	??_main^(0+128),w
  1294  13F7  1683               	bsf	3,5	;RP0=1, select bank3
  1295  13F8  1703               	bsf	3,6	;RP1=1, select bank3
  1296  13F9  00C3               	movwf	_fator2^(0+384)
  1297                           
  1298                           ;main_sync.c: 112: k = ((k1 << 8) + k2)/100.0;
  1299  13FA  3000               	movlw	0
  1300  13FB  1683               	bsf	3,5	;RP0=1, select bank1
  1301  13FC  1303               	bcf	3,6	;RP1=0, select bank1
  1302  13FD  00BB               	movwf	___ftdiv@f2^(0+128)
  1303  13FE  30C8               	movlw	200
  1304  13FF  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
  1305  1400  3042               	movlw	66
  1306  1401  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
  1307  1402  1683               	bsf	3,5	;RP0=1, select bank3
  1308  1403  1703               	bsf	3,6	;RP1=1, select bank3
  1309  1404  0848               	movf	_k1^(0+384),w
  1310  1405  1683               	bsf	3,5	;RP0=1, select bank1
  1311  1406  1303               	bcf	3,6	;RP1=0, select bank1
  1312  1407  00E1               	movwf	??_main^(0+128)
  1313  1408  01E2               	clrf	(??_main^(0+128)+1)
  1314  1409  0861               	movf	??_main^(0+128),w
  1315  140A  00E2               	movwf	(??_main^(0+128)+1)
  1316  140B  01E1               	clrf	??_main^(0+128)
  1317  140C  1683               	bsf	3,5	;RP0=1, select bank3
  1318  140D  1703               	bsf	3,6	;RP1=1, select bank3
  1319  140E  0847               	movf	_k2^(0+384),w
  1320  140F  1683               	bsf	3,5	;RP0=1, select bank1
  1321  1410  1303               	bcf	3,6	;RP1=0, select bank1
  1322  1411  0761               	addwf	??_main^(0+128),w
  1323  1412  00A8               	movwf	___awtoft@c^(0+128)
  1324  1413  3000               	movlw	0
  1325  1414  1803               	skipnc
  1326  1415  3001               	movlw	1
  1327  1416  0762               	addwf	(??_main+1)^(0+128),w
  1328  1417  00A9               	movwf	(___awtoft@c+1)^(0+128)
  1329  1418  160A  158A  2290  160A  118A  	fcall	___awtoft
  1330  141D  1683               	bsf	3,5	;RP0=1, select bank1
  1331  141E  1303               	bcf	3,6	;RP1=0, select bank1
  1332  141F  0828               	movf	?___awtoft^(0+128),w
  1333  1420  00BE               	movwf	___ftdiv@f1^(0+128)
  1334  1421  0829               	movf	(?___awtoft+1)^(0+128),w
  1335  1422  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
  1336  1423  082A               	movf	(?___awtoft+2)^(0+128),w
  1337  1424  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
  1338  1425  160A  118A  213A  160A  118A  	fcall	___ftdiv
  1339  142A  1683               	bsf	3,5	;RP0=1, select bank1
  1340  142B  1303               	bcf	3,6	;RP1=0, select bank1
  1341  142C  083B               	movf	?___ftdiv^(0+128),w
  1342  142D  1683               	bsf	3,5	;RP0=1, select bank3
  1343  142E  1703               	bsf	3,6	;RP1=1, select bank3
  1344  142F  00BF               	movwf	_k^(0+384)
  1345  1430  1683               	bsf	3,5	;RP0=1, select bank1
  1346  1431  1303               	bcf	3,6	;RP1=0, select bank1
  1347  1432  083C               	movf	(?___ftdiv+1)^(0+128),w
  1348  1433  1683               	bsf	3,5	;RP0=1, select bank3
  1349  1434  1703               	bsf	3,6	;RP1=1, select bank3
  1350  1435  00C0               	movwf	(_k+1)^(0+384)
  1351  1436  1683               	bsf	3,5	;RP0=1, select bank1
  1352  1437  1303               	bcf	3,6	;RP1=0, select bank1
  1353  1438  083D               	movf	(?___ftdiv+2)^(0+128),w
  1354  1439  1683               	bsf	3,5	;RP0=1, select bank3
  1355  143A  1703               	bsf	3,6	;RP1=1, select bank3
  1356  143B  00C1               	movwf	(_k+2)^(0+384)
  1357                           
  1358                           ;main_sync.c: 113: b = ((b1 << 8) + b2)/100.0;
  1359  143C  3000               	movlw	0
  1360  143D  1683               	bsf	3,5	;RP0=1, select bank1
  1361  143E  1303               	bcf	3,6	;RP1=0, select bank1
  1362  143F  00BB               	movwf	___ftdiv@f2^(0+128)
  1363  1440  30C8               	movlw	200
  1364  1441  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
  1365  1442  3042               	movlw	66
  1366  1443  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
  1367  1444  1683               	bsf	3,5	;RP0=1, select bank3
  1368  1445  1703               	bsf	3,6	;RP1=1, select bank3
  1369  1446  0846               	movf	_b1^(0+384),w
  1370  1447  1683               	bsf	3,5	;RP0=1, select bank1
  1371  1448  1303               	bcf	3,6	;RP1=0, select bank1
  1372  1449  00E1               	movwf	??_main^(0+128)
  1373  144A  01E2               	clrf	(??_main^(0+128)+1)
  1374  144B  0861               	movf	??_main^(0+128),w
  1375  144C  00E2               	movwf	(??_main^(0+128)+1)
  1376  144D  01E1               	clrf	??_main^(0+128)
  1377  144E  1683               	bsf	3,5	;RP0=1, select bank3
  1378  144F  1703               	bsf	3,6	;RP1=1, select bank3
  1379  1450  0845               	movf	_b2^(0+384),w
  1380  1451  1683               	bsf	3,5	;RP0=1, select bank1
  1381  1452  1303               	bcf	3,6	;RP1=0, select bank1
  1382  1453  0761               	addwf	??_main^(0+128),w
  1383  1454  00A8               	movwf	___awtoft@c^(0+128)
  1384  1455  3000               	movlw	0
  1385  1456  1803               	skipnc
  1386  1457  3001               	movlw	1
  1387  1458  0762               	addwf	(??_main+1)^(0+128),w
  1388  1459  00A9               	movwf	(___awtoft@c+1)^(0+128)
  1389  145A  160A  158A  2290  160A  118A  	fcall	___awtoft
  1390  145F  1683               	bsf	3,5	;RP0=1, select bank1
  1391  1460  1303               	bcf	3,6	;RP1=0, select bank1
  1392  1461  0828               	movf	?___awtoft^(0+128),w
  1393  1462  00BE               	movwf	___ftdiv@f1^(0+128)
  1394  1463  0829               	movf	(?___awtoft+1)^(0+128),w
  1395  1464  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
  1396  1465  082A               	movf	(?___awtoft+2)^(0+128),w
  1397  1466  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
  1398  1467  160A  118A  213A  160A  118A  	fcall	___ftdiv
  1399  146C  1683               	bsf	3,5	;RP0=1, select bank1
  1400  146D  1303               	bcf	3,6	;RP1=0, select bank1
  1401  146E  083B               	movf	?___ftdiv^(0+128),w
  1402  146F  1683               	bsf	3,5	;RP0=1, select bank3
  1403  1470  1703               	bsf	3,6	;RP1=1, select bank3
  1404  1471  00BC               	movwf	_b^(0+384)
  1405  1472  1683               	bsf	3,5	;RP0=1, select bank1
  1406  1473  1303               	bcf	3,6	;RP1=0, select bank1
  1407  1474  083C               	movf	(?___ftdiv+1)^(0+128),w
  1408  1475  1683               	bsf	3,5	;RP0=1, select bank3
  1409  1476  1703               	bsf	3,6	;RP1=1, select bank3
  1410  1477  00BD               	movwf	(_b+1)^(0+384)
  1411  1478  1683               	bsf	3,5	;RP0=1, select bank1
  1412  1479  1303               	bcf	3,6	;RP1=0, select bank1
  1413  147A  083D               	movf	(?___ftdiv+2)^(0+128),w
  1414  147B  1683               	bsf	3,5	;RP0=1, select bank3
  1415  147C  1703               	bsf	3,6	;RP1=1, select bank3
  1416  147D  00BE               	movwf	(_b+2)^(0+384)
  1417                           
  1418                           ;main_sync.c: 114: fator = (fator1 << 8) + fator2;
  1419  147E  0844               	movf	_fator1^(0+384),w
  1420  147F  1683               	bsf	3,5	;RP0=1, select bank1
  1421  1480  1303               	bcf	3,6	;RP1=0, select bank1
  1422  1481  00E1               	movwf	??_main^(0+128)
  1423  1482  01E2               	clrf	(??_main^(0+128)+1)
  1424  1483  0861               	movf	??_main^(0+128),w
  1425  1484  00E2               	movwf	(??_main^(0+128)+1)
  1426  1485  01E1               	clrf	??_main^(0+128)
  1427  1486  1683               	bsf	3,5	;RP0=1, select bank3
  1428  1487  1703               	bsf	3,6	;RP1=1, select bank3
  1429  1488  0843               	movf	_fator2^(0+384),w
  1430  1489  1683               	bsf	3,5	;RP0=1, select bank1
  1431  148A  1303               	bcf	3,6	;RP1=0, select bank1
  1432  148B  0761               	addwf	??_main^(0+128),w
  1433  148C  1683               	bsf	3,5	;RP0=1, select bank3
  1434  148D  1703               	bsf	3,6	;RP1=1, select bank3
  1435  148E  00E1               	movwf	_fator^(0+384)
  1436  148F  3000               	movlw	0
  1437  1490  1803               	skipnc
  1438  1491  3001               	movlw	1
  1439  1492  1683               	bsf	3,5	;RP0=1, select bank1
  1440  1493  1303               	bcf	3,6	;RP1=0, select bank1
  1441  1494  0762               	addwf	(??_main+1)^(0+128),w
  1442  1495  1683               	bsf	3,5	;RP0=1, select bank3
  1443  1496  1703               	bsf	3,6	;RP1=1, select bank3
  1444  1497  00E2               	movwf	(_fator+1)^(0+384)
  1445                           
  1446                           ;main_sync.c: 116: idPlaca = (~PORTA) & 0x1F;
  1447  1498  1283               	bcf	3,5	;RP0=0, select bank0
  1448  1499  1303               	bcf	3,6	;RP1=0, select bank0
  1449  149A  0905               	comf	5,w	;volatile
  1450  149B  391F               	andlw	31
  1451  149C  1683               	bsf	3,5	;RP0=1, select bank1
  1452  149D  1303               	bcf	3,6	;RP1=0, select bank1
  1453  149E  00E1               	movwf	??_main^(0+128)
  1454  149F  0861               	movf	??_main^(0+128),w
  1455  14A0  1283               	bcf	3,5	;RP0=0, select bank0
  1456  14A1  1303               	bcf	3,6	;RP1=0, select bank0
  1457  14A2  00E2               	movwf	_idPlaca
  1458                           
  1459                           ;main_sync.c: 117: for (i = 0; i < 8; i++)
  1460  14A3  1683               	bsf	3,5	;RP0=1, select bank3
  1461  14A4  1703               	bsf	3,6	;RP1=1, select bank3
  1462  14A5  01DF               	clrf	main@i^(0+384)
  1463  14A6  01E0               	clrf	(main@i+1)^(0+384)
  1464  14A7                     l4248:	
  1465                           
  1466                           ;main_sync.c: 118: {;main_sync.c: 119: PORTB = SelectChannel(i);
  1467  14A7  1683               	bsf	3,5	;RP0=1, select bank3
  1468  14A8  1703               	bsf	3,6	;RP1=1, select bank3
  1469  14A9  0860               	movf	(main@i+1)^(0+384),w
  1470  14AA  1683               	bsf	3,5	;RP0=1, select bank1
  1471  14AB  1303               	bcf	3,6	;RP1=0, select bank1
  1472  14AC  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
  1473  14AD  1683               	bsf	3,5	;RP0=1, select bank3
  1474  14AE  1703               	bsf	3,6	;RP1=1, select bank3
  1475  14AF  085F               	movf	main@i^(0+384),w
  1476  14B0  1683               	bsf	3,5	;RP0=1, select bank1
  1477  14B1  1303               	bcf	3,6	;RP1=0, select bank1
  1478  14B2  00A0               	movwf	SelectChannel@ch^(0+128)
  1479  14B3  160A  158A  244E  160A  118A  	fcall	_SelectChannel
  1480  14B8  1683               	bsf	3,5	;RP0=1, select bank1
  1481  14B9  1303               	bcf	3,6	;RP1=0, select bank1
  1482  14BA  0820               	movf	?_SelectChannel^(0+128),w
  1483  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  1484  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  1485  14BD  0086               	movwf	6	;volatile
  1486                           
  1487                           ;main_sync.c: 121: for(p = 0; p < 10000; ++p);
  1488  14BE  1683               	bsf	3,5	;RP0=1, select bank3
  1489  14BF  1703               	bsf	3,6	;RP1=1, select bank3
  1490  14C0  01DD               	clrf	main@p^(0+384)
  1491  14C1  01DE               	clrf	(main@p+1)^(0+384)
  1492  14C2                     l4256:	
  1493  14C2  3001               	movlw	1
  1494  14C3  1683               	bsf	3,5	;RP0=1, select bank3
  1495  14C4  1703               	bsf	3,6	;RP1=1, select bank3
  1496  14C5  07DD               	addwf	main@p^(0+384),f
  1497  14C6  1803               	skipnc
  1498  14C7  0ADE               	incf	(main@p+1)^(0+384),f
  1499  14C8  3000               	movlw	0
  1500  14C9  07DE               	addwf	(main@p+1)^(0+384),f
  1501  14CA  085E               	movf	(main@p+1)^(0+384),w
  1502  14CB  3A80               	xorlw	128
  1503  14CC  00FF               	movwf	127
  1504  14CD  30A7               	movlw	167
  1505  14CE  027F               	subwf	127,w
  1506  14CF  1D03               	skipz
  1507  14D0  2CD3               	goto	u4995
  1508  14D1  3010               	movlw	16
  1509  14D2  025D               	subwf	main@p^(0+384),w
  1510  14D3                     u4995:	
  1511  14D3  1C03               	skipc
  1512  14D4  2CC2               	goto	l4256
  1513                           
  1514                           ;main_sync.c: 123: valorAD[i] = ad();
  1515  14D5  160A  158A  23D0  160A  118A  	fcall	_ad
  1516  14DA  1683               	bsf	3,5	;RP0=1, select bank3
  1517  14DB  1703               	bsf	3,6	;RP1=1, select bank3
  1518  14DC  085F               	movf	main@i^(0+384),w
  1519  14DD  1683               	bsf	3,5	;RP0=1, select bank1
  1520  14DE  1303               	bcf	3,6	;RP1=0, select bank1
  1521  14DF  00E1               	movwf	??_main^(0+128)
  1522  14E0  0761               	addwf	??_main^(0+128),w
  1523  14E1  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
  1524  14E2  0084               	movwf	4
  1525  14E3  0820               	movf	?_ad^(0+128),w
  1526  14E4  1783               	bsf	3,7	;select IRP bank3
  1527  14E5  0080               	movwf	0
  1528  14E6  0A84               	incf	4,f
  1529  14E7  0821               	movf	(?_ad+1)^(0+128),w
  1530  14E8  0080               	movwf	0
  1531                           
  1532                           ;main_sync.c: 124: PORTB = SelectChannel(i) + 1;
  1533  14E9  1683               	bsf	3,5	;RP0=1, select bank3
  1534  14EA  1703               	bsf	3,6	;RP1=1, select bank3
  1535  14EB  0860               	movf	(main@i+1)^(0+384),w
  1536  14EC  1683               	bsf	3,5	;RP0=1, select bank1
  1537  14ED  1303               	bcf	3,6	;RP1=0, select bank1
  1538  14EE  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
  1539  14EF  1683               	bsf	3,5	;RP0=1, select bank3
  1540  14F0  1703               	bsf	3,6	;RP1=1, select bank3
  1541  14F1  085F               	movf	main@i^(0+384),w
  1542  14F2  1683               	bsf	3,5	;RP0=1, select bank1
  1543  14F3  1303               	bcf	3,6	;RP1=0, select bank1
  1544  14F4  00A0               	movwf	SelectChannel@ch^(0+128)
  1545  14F5  160A  158A  244E  160A  118A  	fcall	_SelectChannel
  1546  14FA  1683               	bsf	3,5	;RP0=1, select bank1
  1547  14FB  1303               	bcf	3,6	;RP1=0, select bank1
  1548  14FC  0820               	movf	?_SelectChannel^(0+128),w
  1549  14FD  3E01               	addlw	1
  1550  14FE  1283               	bcf	3,5	;RP0=0, select bank0
  1551  14FF  1303               	bcf	3,6	;RP1=0, select bank0
  1552  1500  0086               	movwf	6	;volatile
  1553                           
  1554                           ;main_sync.c: 125: temp[i] = ((float)(valorAD[i]) / k) - b;
  1555  1501  1683               	bsf	3,5	;RP0=1, select bank3
  1556  1502  1703               	bsf	3,6	;RP1=1, select bank3
  1557  1503  083C               	movf	_b^(0+384),w
  1558  1504  1683               	bsf	3,5	;RP0=1, select bank1
  1559  1505  1303               	bcf	3,6	;RP1=0, select bank1
  1560  1506  00CB               	movwf	___ftsub@f2^(0+128)
  1561  1507  1683               	bsf	3,5	;RP0=1, select bank3
  1562  1508  1703               	bsf	3,6	;RP1=1, select bank3
  1563  1509  083D               	movf	(_b+1)^(0+384),w
  1564  150A  1683               	bsf	3,5	;RP0=1, select bank1
  1565  150B  1303               	bcf	3,6	;RP1=0, select bank1
  1566  150C  00CC               	movwf	(___ftsub@f2+1)^(0+128)
  1567  150D  1683               	bsf	3,5	;RP0=1, select bank3
  1568  150E  1703               	bsf	3,6	;RP1=1, select bank3
  1569  150F  083E               	movf	(_b+2)^(0+384),w
  1570  1510  1683               	bsf	3,5	;RP0=1, select bank1
  1571  1511  1303               	bcf	3,6	;RP1=0, select bank1
  1572  1512  00CD               	movwf	(___ftsub@f2+2)^(0+128)
  1573  1513  1683               	bsf	3,5	;RP0=1, select bank3
  1574  1514  1703               	bsf	3,6	;RP1=1, select bank3
  1575  1515  083F               	movf	_k^(0+384),w
  1576  1516  1683               	bsf	3,5	;RP0=1, select bank1
  1577  1517  1303               	bcf	3,6	;RP1=0, select bank1
  1578  1518  00BB               	movwf	___ftdiv@f2^(0+128)
  1579  1519  1683               	bsf	3,5	;RP0=1, select bank3
  1580  151A  1703               	bsf	3,6	;RP1=1, select bank3
  1581  151B  0840               	movf	(_k+1)^(0+384),w
  1582  151C  1683               	bsf	3,5	;RP0=1, select bank1
  1583  151D  1303               	bcf	3,6	;RP1=0, select bank1
  1584  151E  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
  1585  151F  1683               	bsf	3,5	;RP0=1, select bank3
  1586  1520  1703               	bsf	3,6	;RP1=1, select bank3
  1587  1521  0841               	movf	(_k+2)^(0+384),w
  1588  1522  1683               	bsf	3,5	;RP0=1, select bank1
  1589  1523  1303               	bcf	3,6	;RP1=0, select bank1
  1590  1524  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
  1591  1525  1683               	bsf	3,5	;RP0=1, select bank3
  1592  1526  1703               	bsf	3,6	;RP1=1, select bank3
  1593  1527  085F               	movf	main@i^(0+384),w
  1594  1528  1683               	bsf	3,5	;RP0=1, select bank1
  1595  1529  1303               	bcf	3,6	;RP1=0, select bank1
  1596  152A  00E1               	movwf	??_main^(0+128)
  1597  152B  0761               	addwf	??_main^(0+128),w
  1598  152C  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
  1599  152D  0084               	movwf	4
  1600  152E  1783               	bsf	3,7	;select IRP bank3
  1601  152F  0800               	movf	0,w
  1602  1530  00A8               	movwf	___awtoft@c^(0+128)
  1603  1531  0A84               	incf	4,f
  1604  1532  0800               	movf	0,w
  1605  1533  00A9               	movwf	(___awtoft@c+1)^(0+128)
  1606  1534  160A  158A  2290  160A  118A  	fcall	___awtoft
  1607  1539  1683               	bsf	3,5	;RP0=1, select bank1
  1608  153A  1303               	bcf	3,6	;RP1=0, select bank1
  1609  153B  0828               	movf	?___awtoft^(0+128),w
  1610  153C  00BE               	movwf	___ftdiv@f1^(0+128)
  1611  153D  0829               	movf	(?___awtoft+1)^(0+128),w
  1612  153E  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
  1613  153F  082A               	movf	(?___awtoft+2)^(0+128),w
  1614  1540  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
  1615  1541  160A  118A  213A  160A  118A  	fcall	___ftdiv
  1616  1546  1683               	bsf	3,5	;RP0=1, select bank1
  1617  1547  1303               	bcf	3,6	;RP1=0, select bank1
  1618  1548  083B               	movf	?___ftdiv^(0+128),w
  1619  1549  00CE               	movwf	___ftsub@f1^(0+128)
  1620  154A  083C               	movf	(?___ftdiv+1)^(0+128),w
  1621  154B  00CF               	movwf	(___ftsub@f1+1)^(0+128)
  1622  154C  083D               	movf	(?___ftdiv+2)^(0+128),w
  1623  154D  00D0               	movwf	(___ftsub@f1+2)^(0+128)
  1624  154E  160A  158A  224D  160A  118A  	fcall	___ftsub
  1625  1553  1683               	bsf	3,5	;RP0=1, select bank1
  1626  1554  1303               	bcf	3,6	;RP1=0, select bank1
  1627  1555  084B               	movf	?___ftsub^(0+128),w
  1628  1556  00E2               	movwf	(??_main+1)^(0+128)
  1629  1557  084C               	movf	(?___ftsub+1)^(0+128),w
  1630  1558  00E3               	movwf	((??_main+1)^(0+128)+1)
  1631  1559  084D               	movf	(?___ftsub+2)^(0+128),w
  1632  155A  00E4               	movwf	((??_main+1)^(0+128)+2)
  1633  155B  3003               	movlw	3
  1634  155C  00E5               	movwf	(??_main+4)^(0+128)
  1635  155D  0865               	movf	(??_main+4)^(0+128),w
  1636  155E  00A0               	movwf	___bmul@multiplicand^(0+128)
  1637  155F  1683               	bsf	3,5	;RP0=1, select bank3
  1638  1560  1703               	bsf	3,6	;RP1=1, select bank3
  1639  1561  085F               	movf	main@i^(0+384),w
  1640  1562  160A  118A  2000  160A  118A  	fcall	___bmul
  1641  1567  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
  1642  1568  0084               	movwf	4
  1643  1569  1683               	bsf	3,5	;RP0=1, select bank1
  1644  156A  1303               	bcf	3,6	;RP1=0, select bank1
  1645  156B  0862               	movf	(??_main+1)^(0+128),w
  1646  156C  1783               	bsf	3,7	;select IRP bank3
  1647  156D  0080               	movwf	0
  1648  156E  0A84               	incf	4,f
  1649  156F  0863               	movf	(??_main+2)^(0+128),w
  1650  1570  0080               	movwf	0
  1651  1571  0A84               	incf	4,f
  1652  1572  0864               	movf	(??_main+3)^(0+128),w
  1653  1573  0080               	movwf	0
  1654  1574  3001               	movlw	1
  1655  1575  1683               	bsf	3,5	;RP0=1, select bank3
  1656  1576  1703               	bsf	3,6	;RP1=1, select bank3
  1657  1577  07DF               	addwf	main@i^(0+384),f
  1658  1578  1803               	skipnc
  1659  1579  0AE0               	incf	(main@i+1)^(0+384),f
  1660  157A  3000               	movlw	0
  1661  157B  07E0               	addwf	(main@i+1)^(0+384),f
  1662  157C  0860               	movf	(main@i+1)^(0+384),w
  1663  157D  3A80               	xorlw	128
  1664  157E  00FF               	movwf	127
  1665  157F  3080               	movlw	128
  1666  1580  027F               	subwf	127,w
  1667  1581  1D03               	skipz
  1668  1582  2D85               	goto	u5005
  1669  1583  3008               	movlw	8
  1670  1584  025F               	subwf	main@i^(0+384),w
  1671  1585                     u5005:	
  1672  1585  1803               	btfsc	3,0
  1673  1586  2FFD               	goto	L13
  1674  1587  2CA7               	goto	l4248
  1675  1588                     l4268:	
  1676                           
  1677                           ;main_sync.c: 132: for (i = 0; i <= 7; ++i){
  1678  1588  01DF               	clrf	main@i^(0+384)
  1679  1589  01E0               	clrf	(main@i+1)^(0+384)
  1680  158A                     l4274:	
  1681                           
  1682                           ;main_sync.c: 135: PORTB = SelectChannel(i);
  1683  158A  1683               	bsf	3,5	;RP0=1, select bank3
  1684  158B  1703               	bsf	3,6	;RP1=1, select bank3
  1685  158C  0860               	movf	(main@i+1)^(0+384),w
  1686  158D  1683               	bsf	3,5	;RP0=1, select bank1
  1687  158E  1303               	bcf	3,6	;RP1=0, select bank1
  1688  158F  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
  1689  1590  1683               	bsf	3,5	;RP0=1, select bank3
  1690  1591  1703               	bsf	3,6	;RP1=1, select bank3
  1691  1592  085F               	movf	main@i^(0+384),w
  1692  1593  1683               	bsf	3,5	;RP0=1, select bank1
  1693  1594  1303               	bcf	3,6	;RP1=0, select bank1
  1694  1595  00A0               	movwf	SelectChannel@ch^(0+128)
  1695  1596  160A  158A  244E  160A  118A  	fcall	_SelectChannel
  1696  159B  1683               	bsf	3,5	;RP0=1, select bank1
  1697  159C  1303               	bcf	3,6	;RP1=0, select bank1
  1698  159D  0820               	movf	?_SelectChannel^(0+128),w
  1699  159E  1283               	bcf	3,5	;RP0=0, select bank0
  1700  159F  1303               	bcf	3,6	;RP1=0, select bank0
  1701  15A0  0086               	movwf	6	;volatile
  1702                           
  1703                           ;main_sync.c: 136: for(p = 1; p < 6980; p++);
  1704  15A1  3001               	movlw	1
  1705  15A2  1683               	bsf	3,5	;RP0=1, select bank3
  1706  15A3  1703               	bsf	3,6	;RP1=1, select bank3
  1707  15A4  00DD               	movwf	main@p^(0+384)
  1708  15A5  3000               	movlw	0
  1709  15A6  00DE               	movwf	(main@p^(0+384)+1)
  1710  15A7                     l4282:	
  1711  15A7  3001               	movlw	1
  1712  15A8  1683               	bsf	3,5	;RP0=1, select bank3
  1713  15A9  1703               	bsf	3,6	;RP1=1, select bank3
  1714  15AA  07DD               	addwf	main@p^(0+384),f
  1715  15AB  1803               	skipnc
  1716  15AC  0ADE               	incf	(main@p+1)^(0+384),f
  1717  15AD  3000               	movlw	0
  1718  15AE  07DE               	addwf	(main@p+1)^(0+384),f
  1719  15AF  085E               	movf	(main@p+1)^(0+384),w
  1720  15B0  3A80               	xorlw	128
  1721  15B1  00FF               	movwf	127
  1722  15B2  309B               	movlw	155
  1723  15B3  027F               	subwf	127,w
  1724  15B4  1D03               	skipz
  1725  15B5  2DB8               	goto	u5025
  1726  15B6  3044               	movlw	68
  1727  15B7  025D               	subwf	main@p^(0+384),w
  1728  15B8                     u5025:	
  1729  15B8  1C03               	skipc
  1730  15B9  2DA7               	goto	l4282
  1731                           
  1732                           ;main_sync.c: 137: j = ad();
  1733  15BA  160A  158A  23D0  160A  118A  	fcall	_ad
  1734  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1735  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1736  15C1  0821               	movf	(?_ad+1)^(0+128),w
  1737  15C2  1683               	bsf	3,5	;RP0=1, select bank3
  1738  15C3  1703               	bsf	3,6	;RP1=1, select bank3
  1739  15C4  00DC               	movwf	(main@j+1)^(0+384)
  1740  15C5  1683               	bsf	3,5	;RP0=1, select bank1
  1741  15C6  1303               	bcf	3,6	;RP1=0, select bank1
  1742  15C7  0820               	movf	?_ad^(0+128),w
  1743  15C8  1683               	bsf	3,5	;RP0=1, select bank3
  1744  15C9  1703               	bsf	3,6	;RP1=1, select bank3
  1745  15CA  00DB               	movwf	main@j^(0+384)
  1746                           
  1747                           ;main_sync.c: 139: PORTB = SelectChannel(i) + 8;
  1748  15CB  0860               	movf	(main@i+1)^(0+384),w
  1749  15CC  1683               	bsf	3,5	;RP0=1, select bank1
  1750  15CD  1303               	bcf	3,6	;RP1=0, select bank1
  1751  15CE  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
  1752  15CF  1683               	bsf	3,5	;RP0=1, select bank3
  1753  15D0  1703               	bsf	3,6	;RP1=1, select bank3
  1754  15D1  085F               	movf	main@i^(0+384),w
  1755  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  1756  15D3  1303               	bcf	3,6	;RP1=0, select bank1
  1757  15D4  00A0               	movwf	SelectChannel@ch^(0+128)
  1758  15D5  160A  158A  244E  160A  118A  	fcall	_SelectChannel
  1759  15DA  1683               	bsf	3,5	;RP0=1, select bank1
  1760  15DB  1303               	bcf	3,6	;RP1=0, select bank1
  1761  15DC  0820               	movf	?_SelectChannel^(0+128),w
  1762  15DD  3E08               	addlw	8
  1763  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1764  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1765  15E0  0086               	movwf	6	;volatile
  1766                           
  1767                           ;main_sync.c: 140: for(p = 1; p < 6980; p++);
  1768  15E1  3001               	movlw	1
  1769  15E2  1683               	bsf	3,5	;RP0=1, select bank3
  1770  15E3  1703               	bsf	3,6	;RP1=1, select bank3
  1771  15E4  00DD               	movwf	main@p^(0+384)
  1772  15E5  3000               	movlw	0
  1773  15E6  00DE               	movwf	(main@p^(0+384)+1)
  1774  15E7                     l4296:	
  1775  15E7  3001               	movlw	1
  1776  15E8  1683               	bsf	3,5	;RP0=1, select bank3
  1777  15E9  1703               	bsf	3,6	;RP1=1, select bank3
  1778  15EA  07DD               	addwf	main@p^(0+384),f
  1779  15EB  1803               	skipnc
  1780  15EC  0ADE               	incf	(main@p+1)^(0+384),f
  1781  15ED  3000               	movlw	0
  1782  15EE  07DE               	addwf	(main@p+1)^(0+384),f
  1783  15EF  085E               	movf	(main@p+1)^(0+384),w
  1784  15F0  3A80               	xorlw	128
  1785  15F1  00FF               	movwf	127
  1786  15F2  309B               	movlw	155
  1787  15F3  027F               	subwf	127,w
  1788  15F4  1D03               	skipz
  1789  15F5  2DF8               	goto	u5035
  1790  15F6  3044               	movlw	68
  1791  15F7  025D               	subwf	main@p^(0+384),w
  1792  15F8                     u5035:	
  1793  15F8  1C03               	skipc
  1794  15F9  2DE7               	goto	l4296
  1795                           
  1796                           ;main_sync.c: 142: valorAD[i] = j - ad();
  1797  15FA  160A  158A  23D0  160A  118A  	fcall	_ad
  1798  15FF  1683               	bsf	3,5	;RP0=1, select bank1
  1799  1600  1303               	bcf	3,6	;RP1=0, select bank1
  1800  1601  0820               	movf	?_ad^(0+128),w
  1801  1602  1683               	bsf	3,5	;RP0=1, select bank3
  1802  1603  1703               	bsf	3,6	;RP1=1, select bank3
  1803  1604  025B               	subwf	main@j^(0+384),w
  1804  1605  1683               	bsf	3,5	;RP0=1, select bank1
  1805  1606  1303               	bcf	3,6	;RP1=0, select bank1
  1806  1607  00E1               	movwf	??_main^(0+128)
  1807  1608  0821               	movf	(?_ad+1)^(0+128),w
  1808  1609  1C03               	skipc
  1809  160A  0A21               	incf	(?_ad+1)^(0+128),w
  1810  160B  1683               	bsf	3,5	;RP0=1, select bank3
  1811  160C  1703               	bsf	3,6	;RP1=1, select bank3
  1812  160D  025C               	subwf	(main@j+1)^(0+384),w
  1813  160E  1683               	bsf	3,5	;RP0=1, select bank1
  1814  160F  1303               	bcf	3,6	;RP1=0, select bank1
  1815  1610  00E2               	movwf	(??_main+1)^(0+128)
  1816  1611  1683               	bsf	3,5	;RP0=1, select bank3
  1817  1612  1703               	bsf	3,6	;RP1=1, select bank3
  1818  1613  085F               	movf	main@i^(0+384),w
  1819  1614  1683               	bsf	3,5	;RP0=1, select bank1
  1820  1615  1303               	bcf	3,6	;RP1=0, select bank1
  1821  1616  00E3               	movwf	(??_main+2)^(0+128)
  1822  1617  0763               	addwf	(??_main+2)^(0+128),w
  1823  1618  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
  1824  1619  0084               	movwf	4
  1825  161A  0861               	movf	??_main^(0+128),w
  1826  161B  1783               	bsf	3,7	;select IRP bank3
  1827  161C  0080               	movwf	0
  1828  161D  0A84               	incf	4,f
  1829  161E  0862               	movf	(??_main+1)^(0+128),w
  1830  161F  0080               	movwf	0
  1831                           
  1832                           ;main_sync.c: 144: t = ((float)(valorAD[i])/ k) - b;
  1833  1620  1683               	bsf	3,5	;RP0=1, select bank3
  1834  1621  1703               	bsf	3,6	;RP1=1, select bank3
  1835  1622  083C               	movf	_b^(0+384),w
  1836  1623  1683               	bsf	3,5	;RP0=1, select bank1
  1837  1624  1303               	bcf	3,6	;RP1=0, select bank1
  1838  1625  00CB               	movwf	___ftsub@f2^(0+128)
  1839  1626  1683               	bsf	3,5	;RP0=1, select bank3
  1840  1627  1703               	bsf	3,6	;RP1=1, select bank3
  1841  1628  083D               	movf	(_b+1)^(0+384),w
  1842  1629  1683               	bsf	3,5	;RP0=1, select bank1
  1843  162A  1303               	bcf	3,6	;RP1=0, select bank1
  1844  162B  00CC               	movwf	(___ftsub@f2+1)^(0+128)
  1845  162C  1683               	bsf	3,5	;RP0=1, select bank3
  1846  162D  1703               	bsf	3,6	;RP1=1, select bank3
  1847  162E  083E               	movf	(_b+2)^(0+384),w
  1848  162F  1683               	bsf	3,5	;RP0=1, select bank1
  1849  1630  1303               	bcf	3,6	;RP1=0, select bank1
  1850  1631  00CD               	movwf	(___ftsub@f2+2)^(0+128)
  1851  1632  1683               	bsf	3,5	;RP0=1, select bank3
  1852  1633  1703               	bsf	3,6	;RP1=1, select bank3
  1853  1634  083F               	movf	_k^(0+384),w
  1854  1635  1683               	bsf	3,5	;RP0=1, select bank1
  1855  1636  1303               	bcf	3,6	;RP1=0, select bank1
  1856  1637  00BB               	movwf	___ftdiv@f2^(0+128)
  1857  1638  1683               	bsf	3,5	;RP0=1, select bank3
  1858  1639  1703               	bsf	3,6	;RP1=1, select bank3
  1859  163A  0840               	movf	(_k+1)^(0+384),w
  1860  163B  1683               	bsf	3,5	;RP0=1, select bank1
  1861  163C  1303               	bcf	3,6	;RP1=0, select bank1
  1862  163D  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
  1863  163E  1683               	bsf	3,5	;RP0=1, select bank3
  1864  163F  1703               	bsf	3,6	;RP1=1, select bank3
  1865  1640  0841               	movf	(_k+2)^(0+384),w
  1866  1641  1683               	bsf	3,5	;RP0=1, select bank1
  1867  1642  1303               	bcf	3,6	;RP1=0, select bank1
  1868  1643  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
  1869  1644  1683               	bsf	3,5	;RP0=1, select bank3
  1870  1645  1703               	bsf	3,6	;RP1=1, select bank3
  1871  1646  085F               	movf	main@i^(0+384),w
  1872  1647  1683               	bsf	3,5	;RP0=1, select bank1
  1873  1648  1303               	bcf	3,6	;RP1=0, select bank1
  1874  1649  00E1               	movwf	??_main^(0+128)
  1875  164A  0761               	addwf	??_main^(0+128),w
  1876  164B  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
  1877  164C  0084               	movwf	4
  1878  164D  0800               	movf	0,w
  1879  164E  00A8               	movwf	___awtoft@c^(0+128)
  1880  164F  0A84               	incf	4,f
  1881  1650  0800               	movf	0,w
  1882  1651  00A9               	movwf	(___awtoft@c+1)^(0+128)
  1883  1652  160A  158A  2290  160A  118A  	fcall	___awtoft
  1884  1657  1683               	bsf	3,5	;RP0=1, select bank1
  1885  1658  1303               	bcf	3,6	;RP1=0, select bank1
  1886  1659  0828               	movf	?___awtoft^(0+128),w
  1887  165A  00BE               	movwf	___ftdiv@f1^(0+128)
  1888  165B  0829               	movf	(?___awtoft+1)^(0+128),w
  1889  165C  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
  1890  165D  082A               	movf	(?___awtoft+2)^(0+128),w
  1891  165E  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
  1892  165F  160A  118A  213A  160A  118A  	fcall	___ftdiv
  1893  1664  1683               	bsf	3,5	;RP0=1, select bank1
  1894  1665  1303               	bcf	3,6	;RP1=0, select bank1
  1895  1666  083B               	movf	?___ftdiv^(0+128),w
  1896  1667  00CE               	movwf	___ftsub@f1^(0+128)
  1897  1668  083C               	movf	(?___ftdiv+1)^(0+128),w
  1898  1669  00CF               	movwf	(___ftsub@f1+1)^(0+128)
  1899  166A  083D               	movf	(?___ftdiv+2)^(0+128),w
  1900  166B  00D0               	movwf	(___ftsub@f1+2)^(0+128)
  1901  166C  160A  158A  224D  160A  118A  	fcall	___ftsub
  1902  1671  1683               	bsf	3,5	;RP0=1, select bank1
  1903  1672  1303               	bcf	3,6	;RP1=0, select bank1
  1904  1673  084B               	movf	?___ftsub^(0+128),w
  1905  1674  1683               	bsf	3,5	;RP0=1, select bank3
  1906  1675  1703               	bsf	3,6	;RP1=1, select bank3
  1907  1676  00D8               	movwf	main@t^(0+384)
  1908  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1909  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1910  1679  084C               	movf	(?___ftsub+1)^(0+128),w
  1911  167A  1683               	bsf	3,5	;RP0=1, select bank3
  1912  167B  1703               	bsf	3,6	;RP1=1, select bank3
  1913  167C  00D9               	movwf	(main@t+1)^(0+384)
  1914  167D  1683               	bsf	3,5	;RP0=1, select bank1
  1915  167E  1303               	bcf	3,6	;RP1=0, select bank1
  1916  167F  084D               	movf	(?___ftsub+2)^(0+128),w
  1917  1680  1683               	bsf	3,5	;RP0=1, select bank3
  1918  1681  1703               	bsf	3,6	;RP1=1, select bank3
  1919  1682  00DA               	movwf	(main@t+2)^(0+384)
  1920                           
  1921                           ;main_sync.c: 148: if((fabs(temp[i] - t) <= difTemp) || fator == 0){
  1922  1683  0858               	movf	main@t^(0+384),w
  1923  1684  1683               	bsf	3,5	;RP0=1, select bank1
  1924  1685  1303               	bcf	3,6	;RP1=0, select bank1
  1925  1686  00CB               	movwf	___ftsub@f2^(0+128)
  1926  1687  1683               	bsf	3,5	;RP0=1, select bank3
  1927  1688  1703               	bsf	3,6	;RP1=1, select bank3
  1928  1689  0859               	movf	(main@t+1)^(0+384),w
  1929  168A  1683               	bsf	3,5	;RP0=1, select bank1
  1930  168B  1303               	bcf	3,6	;RP1=0, select bank1
  1931  168C  00CC               	movwf	(___ftsub@f2+1)^(0+128)
  1932  168D  1683               	bsf	3,5	;RP0=1, select bank3
  1933  168E  1703               	bsf	3,6	;RP1=1, select bank3
  1934  168F  085A               	movf	(main@t+2)^(0+384),w
  1935  1690  1683               	bsf	3,5	;RP0=1, select bank1
  1936  1691  1303               	bcf	3,6	;RP1=0, select bank1
  1937  1692  00CD               	movwf	(___ftsub@f2+2)^(0+128)
  1938  1693  3003               	movlw	3
  1939  1694  00E1               	movwf	??_main^(0+128)
  1940  1695  0861               	movf	??_main^(0+128),w
  1941  1696  00A0               	movwf	___bmul@multiplicand^(0+128)
  1942  1697  1683               	bsf	3,5	;RP0=1, select bank3
  1943  1698  1703               	bsf	3,6	;RP1=1, select bank3
  1944  1699  085F               	movf	main@i^(0+384),w
  1945  169A  160A  118A  2000  160A  118A  	fcall	___bmul
  1946  169F  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
  1947  16A0  0084               	movwf	4
  1948  16A1  1783               	bsf	3,7	;select IRP bank3
  1949  16A2  0800               	movf	0,w
  1950  16A3  1683               	bsf	3,5	;RP0=1, select bank1
  1951  16A4  1303               	bcf	3,6	;RP1=0, select bank1
  1952  16A5  00CE               	movwf	___ftsub@f1^(0+128)
  1953  16A6  0A84               	incf	4,f
  1954  16A7  0800               	movf	0,w
  1955  16A8  00CF               	movwf	(___ftsub@f1+1)^(0+128)
  1956  16A9  0A84               	incf	4,f
  1957  16AA  0800               	movf	0,w
  1958  16AB  00D0               	movwf	(___ftsub@f1+2)^(0+128)
  1959  16AC  160A  158A  224D  160A  118A  	fcall	___ftsub
  1960  16B1  1683               	bsf	3,5	;RP0=1, select bank1
  1961  16B2  1303               	bcf	3,6	;RP1=0, select bank1
  1962  16B3  084B               	movf	?___ftsub^(0+128),w
  1963  16B4  00D7               	movwf	fabs@d^(0+128)
  1964  16B5  084C               	movf	(?___ftsub+1)^(0+128),w
  1965  16B6  00D8               	movwf	(fabs@d+1)^(0+128)
  1966  16B7  084D               	movf	(?___ftsub+2)^(0+128),w
  1967  16B8  00D9               	movwf	(fabs@d+2)^(0+128)
  1968  16B9  160A  158A  22B5  160A  118A  	fcall	_fabs
  1969  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  1970  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  1971  16C0  0857               	movf	?_fabs^(0+128),w
  1972  16C1  1683               	bsf	3,5	;RP0=1, select bank3
  1973  16C2  1703               	bsf	3,6	;RP1=1, select bank3
  1974  16C3  00CE               	movwf	_main$962^(0+384)
  1975  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  1976  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  1977  16C6  0858               	movf	(?_fabs+1)^(0+128),w
  1978  16C7  1683               	bsf	3,5	;RP0=1, select bank3
  1979  16C8  1703               	bsf	3,6	;RP1=1, select bank3
  1980  16C9  00CF               	movwf	(_main$962+1)^(0+384)
  1981  16CA  1683               	bsf	3,5	;RP0=1, select bank1
  1982  16CB  1303               	bcf	3,6	;RP1=0, select bank1
  1983  16CC  0859               	movf	(?_fabs+2)^(0+128),w
  1984  16CD  1683               	bsf	3,5	;RP0=1, select bank3
  1985  16CE  1703               	bsf	3,6	;RP1=1, select bank3
  1986  16CF  00D0               	movwf	(_main$962+2)^(0+384)
  1987                           
  1988                           ;main_sync.c: 148: if((fabs(temp[i] - t) <= difTemp) || fator == 0){
  1989  16D0  084B               	movf	main@difTemp^(0+384),w
  1990  16D1  1683               	bsf	3,5	;RP0=1, select bank1
  1991  16D2  1303               	bcf	3,6	;RP1=0, select bank1
  1992  16D3  00D1               	movwf	___ftge@ff1^(0+128)
  1993  16D4  1683               	bsf	3,5	;RP0=1, select bank3
  1994  16D5  1703               	bsf	3,6	;RP1=1, select bank3
  1995  16D6  084C               	movf	(main@difTemp+1)^(0+384),w
  1996  16D7  1683               	bsf	3,5	;RP0=1, select bank1
  1997  16D8  1303               	bcf	3,6	;RP1=0, select bank1
  1998  16D9  00D2               	movwf	(___ftge@ff1+1)^(0+128)
  1999  16DA  1683               	bsf	3,5	;RP0=1, select bank3
  2000  16DB  1703               	bsf	3,6	;RP1=1, select bank3
  2001  16DC  084D               	movf	(main@difTemp+2)^(0+384),w
  2002  16DD  1683               	bsf	3,5	;RP0=1, select bank1
  2003  16DE  1303               	bcf	3,6	;RP1=0, select bank1
  2004  16DF  00D3               	movwf	(___ftge@ff1+2)^(0+128)
  2005  16E0  1683               	bsf	3,5	;RP0=1, select bank3
  2006  16E1  1703               	bsf	3,6	;RP1=1, select bank3
  2007  16E2  084E               	movf	_main$962^(0+384),w
  2008  16E3  1683               	bsf	3,5	;RP0=1, select bank1
  2009  16E4  1303               	bcf	3,6	;RP1=0, select bank1
  2010  16E5  00D4               	movwf	___ftge@ff2^(0+128)
  2011  16E6  1683               	bsf	3,5	;RP0=1, select bank3
  2012  16E7  1703               	bsf	3,6	;RP1=1, select bank3
  2013  16E8  084F               	movf	(_main$962+1)^(0+384),w
  2014  16E9  1683               	bsf	3,5	;RP0=1, select bank1
  2015  16EA  1303               	bcf	3,6	;RP1=0, select bank1
  2016  16EB  00D5               	movwf	(___ftge@ff2+1)^(0+128)
  2017  16EC  1683               	bsf	3,5	;RP0=1, select bank3
  2018  16ED  1703               	bsf	3,6	;RP1=1, select bank3
  2019  16EE  0850               	movf	(_main$962+2)^(0+384),w
  2020  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2021  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2022  16F1  00D6               	movwf	(___ftge@ff2+2)^(0+128)
  2023  16F2  160A  158A  2336  160A  118A  	fcall	___ftge
  2024  16F7  1803               	btfsc	3,0
  2025  16F8  2EFF               	goto	l4306
  2026  16F9  1683               	bsf	3,5	;RP0=1, select bank3
  2027  16FA  1703               	bsf	3,6	;RP1=1, select bank3
  2028  16FB  0861               	movf	_fator^(0+384),w
  2029  16FC  0462               	iorwf	(_fator+1)^(0+384),w
  2030  16FD  1D03               	btfss	3,2
  2031  16FE  2FED               	goto	l4312
  2032  16FF                     l4306:	
  2033                           
  2034                           ;main_sync.c: 149: temp[i] = ((temp[i] * (float)(fator)) + (t * (1000 - (float)(fator)))
      +                          )/1000.0;
  2035  16FF  1683               	bsf	3,5	;RP0=1, select bank3
  2036  1700  1703               	bsf	3,6	;RP1=1, select bank3
  2037  1701  0858               	movf	main@t^(0+384),w
  2038  1702  1683               	bsf	3,5	;RP0=1, select bank1
  2039  1703  1303               	bcf	3,6	;RP1=0, select bank1
  2040  1704  00D1               	movwf	___ftmul@f1^(0+128)
  2041  1705  1683               	bsf	3,5	;RP0=1, select bank3
  2042  1706  1703               	bsf	3,6	;RP1=1, select bank3
  2043  1707  0859               	movf	(main@t+1)^(0+384),w
  2044  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2045  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2046  170A  00D2               	movwf	(___ftmul@f1+1)^(0+128)
  2047  170B  1683               	bsf	3,5	;RP0=1, select bank3
  2048  170C  1703               	bsf	3,6	;RP1=1, select bank3
  2049  170D  085A               	movf	(main@t+2)^(0+384),w
  2050  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2051  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2052  1710  00D3               	movwf	(___ftmul@f1+2)^(0+128)
  2053  1711  1683               	bsf	3,5	;RP0=1, select bank3
  2054  1712  1703               	bsf	3,6	;RP1=1, select bank3
  2055  1713  0862               	movf	(_fator+1)^(0+384),w
  2056  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2057  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2058  1716  00A9               	movwf	(___awtoft@c+1)^(0+128)
  2059  1717  1683               	bsf	3,5	;RP0=1, select bank3
  2060  1718  1703               	bsf	3,6	;RP1=1, select bank3
  2061  1719  0861               	movf	_fator^(0+384),w
  2062  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2063  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2064  171C  00A8               	movwf	___awtoft@c^(0+128)
  2065  171D  160A  158A  2290  160A  118A  	fcall	___awtoft
  2066  1722  1683               	bsf	3,5	;RP0=1, select bank1
  2067  1723  1303               	bcf	3,6	;RP1=0, select bank1
  2068  1724  0828               	movf	?___awtoft^(0+128),w
  2069  1725  00CB               	movwf	___ftsub@f2^(0+128)
  2070  1726  0829               	movf	(?___awtoft+1)^(0+128),w
  2071  1727  00CC               	movwf	(___ftsub@f2+1)^(0+128)
  2072  1728  082A               	movf	(?___awtoft+2)^(0+128),w
  2073  1729  00CD               	movwf	(___ftsub@f2+2)^(0+128)
  2074  172A  3000               	movlw	0
  2075  172B  00CE               	movwf	___ftsub@f1^(0+128)
  2076  172C  307A               	movlw	122
  2077  172D  00CF               	movwf	(___ftsub@f1+1)^(0+128)
  2078  172E  3044               	movlw	68
  2079  172F  00D0               	movwf	(___ftsub@f1+2)^(0+128)
  2080  1730  160A  158A  224D  160A  118A  	fcall	___ftsub
  2081  1735  1683               	bsf	3,5	;RP0=1, select bank1
  2082  1736  1303               	bcf	3,6	;RP1=0, select bank1
  2083  1737  084B               	movf	?___ftsub^(0+128),w
  2084  1738  00D4               	movwf	___ftmul@f2^(0+128)
  2085  1739  084C               	movf	(?___ftsub+1)^(0+128),w
  2086  173A  00D5               	movwf	(___ftmul@f2+1)^(0+128)
  2087  173B  084D               	movf	(?___ftsub+2)^(0+128),w
  2088  173C  00D6               	movwf	(___ftmul@f2+2)^(0+128)
  2089  173D  160A  118A  22C3  160A  118A  	fcall	___ftmul
  2090  1742  1683               	bsf	3,5	;RP0=1, select bank1
  2091  1743  1303               	bcf	3,6	;RP1=0, select bank1
  2092  1744  0851               	movf	?___ftmul^(0+128),w
  2093  1745  1683               	bsf	3,5	;RP0=1, select bank3
  2094  1746  1703               	bsf	3,6	;RP1=1, select bank3
  2095  1747  00D1               	movwf	_main$963^(0+384)
  2096  1748  1683               	bsf	3,5	;RP0=1, select bank1
  2097  1749  1303               	bcf	3,6	;RP1=0, select bank1
  2098  174A  0852               	movf	(?___ftmul+1)^(0+128),w
  2099  174B  1683               	bsf	3,5	;RP0=1, select bank3
  2100  174C  1703               	bsf	3,6	;RP1=1, select bank3
  2101  174D  00D2               	movwf	(_main$963+1)^(0+384)
  2102  174E  1683               	bsf	3,5	;RP0=1, select bank1
  2103  174F  1303               	bcf	3,6	;RP1=0, select bank1
  2104  1750  0853               	movf	(?___ftmul+2)^(0+128),w
  2105  1751  1683               	bsf	3,5	;RP0=1, select bank3
  2106  1752  1703               	bsf	3,6	;RP1=1, select bank3
  2107  1753  00D3               	movwf	(_main$963+2)^(0+384)
  2108                           
  2109                           ;main_sync.c: 149: temp[i] = ((temp[i] * (float)(fator)) + (t * (1000 - (float)(fator)))
      +                          )/1000.0;
  2110  1754  3000               	movlw	0
  2111  1755  1683               	bsf	3,5	;RP0=1, select bank1
  2112  1756  1303               	bcf	3,6	;RP1=0, select bank1
  2113  1757  00BB               	movwf	___ftdiv@f2^(0+128)
  2114  1758  307A               	movlw	122
  2115  1759  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
  2116  175A  3044               	movlw	68
  2117  175B  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
  2118  175C  1683               	bsf	3,5	;RP0=1, select bank3
  2119  175D  1703               	bsf	3,6	;RP1=1, select bank3
  2120  175E  0851               	movf	_main$963^(0+384),w
  2121  175F  1683               	bsf	3,5	;RP0=1, select bank1
  2122  1760  1303               	bcf	3,6	;RP1=0, select bank1
  2123  1761  00AE               	movwf	___ftadd@f1^(0+128)
  2124  1762  1683               	bsf	3,5	;RP0=1, select bank3
  2125  1763  1703               	bsf	3,6	;RP1=1, select bank3
  2126  1764  0852               	movf	(_main$963+1)^(0+384),w
  2127  1765  1683               	bsf	3,5	;RP0=1, select bank1
  2128  1766  1303               	bcf	3,6	;RP1=0, select bank1
  2129  1767  00AF               	movwf	(___ftadd@f1+1)^(0+128)
  2130  1768  1683               	bsf	3,5	;RP0=1, select bank3
  2131  1769  1703               	bsf	3,6	;RP1=1, select bank3
  2132  176A  0853               	movf	(_main$963+2)^(0+384),w
  2133  176B  1683               	bsf	3,5	;RP0=1, select bank1
  2134  176C  1303               	bcf	3,6	;RP1=0, select bank1
  2135  176D  00B0               	movwf	(___ftadd@f1+2)^(0+128)
  2136  176E  3003               	movlw	3
  2137  176F  00E1               	movwf	??_main^(0+128)
  2138  1770  0861               	movf	??_main^(0+128),w
  2139  1771  00A0               	movwf	___bmul@multiplicand^(0+128)
  2140  1772  1683               	bsf	3,5	;RP0=1, select bank3
  2141  1773  1703               	bsf	3,6	;RP1=1, select bank3
  2142  1774  085F               	movf	main@i^(0+384),w
  2143  1775  160A  118A  2000  160A  118A  	fcall	___bmul
  2144  177A  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
  2145  177B  0084               	movwf	4
  2146  177C  1783               	bsf	3,7	;select IRP bank3
  2147  177D  0800               	movf	0,w
  2148  177E  1683               	bsf	3,5	;RP0=1, select bank1
  2149  177F  1303               	bcf	3,6	;RP1=0, select bank1
  2150  1780  00D1               	movwf	___ftmul@f1^(0+128)
  2151  1781  0A84               	incf	4,f
  2152  1782  0800               	movf	0,w
  2153  1783  00D2               	movwf	(___ftmul@f1+1)^(0+128)
  2154  1784  0A84               	incf	4,f
  2155  1785  0800               	movf	0,w
  2156  1786  00D3               	movwf	(___ftmul@f1+2)^(0+128)
  2157  1787  1683               	bsf	3,5	;RP0=1, select bank3
  2158  1788  1703               	bsf	3,6	;RP1=1, select bank3
  2159  1789  0862               	movf	(_fator+1)^(0+384),w
  2160  178A  1683               	bsf	3,5	;RP0=1, select bank1
  2161  178B  1303               	bcf	3,6	;RP1=0, select bank1
  2162  178C  00A9               	movwf	(___awtoft@c+1)^(0+128)
  2163  178D  1683               	bsf	3,5	;RP0=1, select bank3
  2164  178E  1703               	bsf	3,6	;RP1=1, select bank3
  2165  178F  0861               	movf	_fator^(0+384),w
  2166  1790  1683               	bsf	3,5	;RP0=1, select bank1
  2167  1791  1303               	bcf	3,6	;RP1=0, select bank1
  2168  1792  00A8               	movwf	___awtoft@c^(0+128)
  2169  1793  160A  158A  2290  160A  118A  	fcall	___awtoft
  2170  1798  1683               	bsf	3,5	;RP0=1, select bank1
  2171  1799  1303               	bcf	3,6	;RP1=0, select bank1
  2172  179A  0828               	movf	?___awtoft^(0+128),w
  2173  179B  00D4               	movwf	___ftmul@f2^(0+128)
  2174  179C  0829               	movf	(?___awtoft+1)^(0+128),w
  2175  179D  00D5               	movwf	(___ftmul@f2+1)^(0+128)
  2176  179E  082A               	movf	(?___awtoft+2)^(0+128),w
  2177  179F  00D6               	movwf	(___ftmul@f2+2)^(0+128)
  2178  17A0  160A  118A  22C3  160A  118A  	fcall	___ftmul
  2179  17A5  1683               	bsf	3,5	;RP0=1, select bank1
  2180  17A6  1303               	bcf	3,6	;RP1=0, select bank1
  2181  17A7  0851               	movf	?___ftmul^(0+128),w
  2182  17A8  00B1               	movwf	___ftadd@f2^(0+128)
  2183  17A9  0852               	movf	(?___ftmul+1)^(0+128),w
  2184  17AA  00B2               	movwf	(___ftadd@f2+1)^(0+128)
  2185  17AB  0853               	movf	(?___ftmul+2)^(0+128),w
  2186  17AC  00B3               	movwf	(___ftadd@f2+2)^(0+128)
  2187  17AD  120A  158A  2086  160A  118A  	fcall	___ftadd
  2188  17B2  1683               	bsf	3,5	;RP0=1, select bank1
  2189  17B3  1303               	bcf	3,6	;RP1=0, select bank1
  2190  17B4  082E               	movf	?___ftadd^(0+128),w
  2191  17B5  00BE               	movwf	___ftdiv@f1^(0+128)
  2192  17B6  082F               	movf	(?___ftadd+1)^(0+128),w
  2193  17B7  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
  2194  17B8  0830               	movf	(?___ftadd+2)^(0+128),w
  2195  17B9  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
  2196  17BA  160A  118A  213A  160A  118A  	fcall	___ftdiv
  2197  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  2198  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  2199  17C1  083B               	movf	?___ftdiv^(0+128),w
  2200  17C2  00E2               	movwf	(??_main+1)^(0+128)
  2201  17C3  083C               	movf	(?___ftdiv+1)^(0+128),w
  2202  17C4  00E3               	movwf	((??_main+1)^(0+128)+1)
  2203  17C5  083D               	movf	(?___ftdiv+2)^(0+128),w
  2204  17C6  00E4               	movwf	((??_main+1)^(0+128)+2)
  2205  17C7  3003               	movlw	3
  2206  17C8  00E5               	movwf	(??_main+4)^(0+128)
  2207  17C9  0865               	movf	(??_main+4)^(0+128),w
  2208  17CA  00A0               	movwf	___bmul@multiplicand^(0+128)
  2209  17CB  1683               	bsf	3,5	;RP0=1, select bank3
  2210  17CC  1703               	bsf	3,6	;RP1=1, select bank3
  2211  17CD  085F               	movf	main@i^(0+384),w
  2212  17CE  160A  118A  2000   	fcall	___bmul
  2213  17D1  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
  2214  17D2  0084               	movwf	4
  2215  17D3  1683               	bsf	3,5	;RP0=1, select bank1
  2216  17D4  1303               	bcf	3,6	;RP1=0, select bank1
  2217  17D5  0862               	movf	(??_main+1)^(0+128),w
  2218  17D6  1783               	bsf	3,7	;select IRP bank3
  2219  17D7  0080               	movwf	0
  2220  17D8  0A84               	incf	4,f
  2221  17D9  0863               	movf	(??_main+2)^(0+128),w
  2222  17DA  0080               	movwf	0
  2223  17DB  0A84               	incf	4,f
  2224  17DC  0864               	movf	(??_main+3)^(0+128),w
  2225  17DD  0080               	movwf	0
  2226                           
  2227                           ;main_sync.c: 150: erros[i] = 0;
  2228  17DE  1683               	bsf	3,5	;RP0=1, select bank3
  2229  17DF  1703               	bsf	3,6	;RP1=1, select bank3
  2230  17E0  085F               	movf	main@i^(0+384),w
  2231  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2232  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2233  17E3  00E1               	movwf	??_main^(0+128)
  2234  17E4  0761               	addwf	??_main^(0+128),w
  2235  17E5  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
  2236  17E6  0084               	movwf	4
  2237  17E7  0180               	clrf	0
  2238  17E8  0A84               	incf	4,f
  2239  17E9  0180               	clrf	0
  2240                           
  2241                           ;main_sync.c: 151: }
  2242  17EA  120A  118A  2B04   	goto	l4360
  2243  17ED                     l4312:	
  2244                           
  2245                           ;main_sync.c: 155: else {;main_sync.c: 156: erros[i]++;
  2246  17ED  085F               	movf	main@i^(0+384),w
  2247  17EE  1683               	bsf	3,5	;RP0=1, select bank1
  2248  17EF  1303               	bcf	3,6	;RP1=0, select bank1
  2249  17F0  00E1               	movwf	??_main^(0+128)
  2250  17F1  0761               	addwf	??_main^(0+128),w
  2251  17F2  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
  2252  17F3  0084               	movwf	4
  2253  17F4  3001               	movlw	1
  2254  17F5  1783               	bsf	3,7	;select IRP bank2
  2255  17F6  0780               	addwf	0,f
  2256  17F7  0A84               	incf	4,f
  2257  17F8  1803               	skipnc
  2258  17F9  0A80               	incf	0,f
  2259                           
  2260                           ;main_sync.c: 157: while(erros[i] < 4 && erros[i] != 0){
  2261  17FA  120A  118A  2AD8   	goto	l4356
  2262  17FD                     L13:	
  2263  17FD                     L12:	
  2264  17FD  120A  118A  2B1B   	ljmp	l4266
  2265                           
  2266                           	psect	text1
  2267  1D39                     __ptext1:	
  2268 ;; *************** function _inicializar *****************
  2269 ;; Defined at:
  2270 ;;		line 251 in file "main_sync.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  i               2   10[BANK1 ] int 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         0       0       2       0       0
  2286 ;;      Temps:          0       0       0       0       0
  2287 ;;      Totals:         0       0       2       0       0
  2288 ;;Total ram usage:        2 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    7
  2291 ;; This function calls:
  2292 ;;		_initLT
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _inicializar
  2300  1D39                     _inicializar:	
  2301                           
  2302                           ;main_sync.c: 252: ANSEL = 0;
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _inicializar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2306  1D39  1683               	bsf	3,5	;RP0=1, select bank3
  2307  1D3A  1703               	bsf	3,6	;RP1=1, select bank3
  2308  1D3B  0188               	clrf	8	;volatile
  2309                           
  2310                           ;main_sync.c: 253: ANSELH = 0;
  2311  1D3C  0189               	clrf	9	;volatile
  2312                           
  2313                           ;main_sync.c: 254: TRISA = 0xFF;
  2314  1D3D  30FF               	movlw	255
  2315  1D3E  1683               	bsf	3,5	;RP0=1, select bank1
  2316  1D3F  1303               	bcf	3,6	;RP1=0, select bank1
  2317  1D40  0085               	movwf	5	;volatile
  2318                           
  2319                           ;main_sync.c: 255: TRISB = 0;
  2320  1D41  0186               	clrf	6	;volatile
  2321                           
  2322                           ;main_sync.c: 256: TRISC = 0xD5;
  2323  1D42  30D5               	movlw	213
  2324  1D43  0087               	movwf	7	;volatile
  2325                           
  2326                           ;main_sync.c: 257: TRISD = 0;
  2327  1D44  0188               	clrf	8	;volatile
  2328                           
  2329                           ;main_sync.c: 258: TRISE = 0x07;
  2330  1D45  3007               	movlw	7
  2331  1D46  0089               	movwf	9	;volatile
  2332                           
  2333                           ;main_sync.c: 260: PORTA = 0xFF;
  2334  1D47  30FF               	movlw	255
  2335  1D48  1283               	bcf	3,5	;RP0=0, select bank0
  2336  1D49  1303               	bcf	3,6	;RP1=0, select bank0
  2337  1D4A  0085               	movwf	5	;volatile
  2338                           
  2339                           ;main_sync.c: 261: PORTB = 0;
  2340  1D4B  0186               	clrf	6	;volatile
  2341                           
  2342                           ;main_sync.c: 262: PORTC = 0;
  2343  1D4C  0187               	clrf	7	;volatile
  2344                           
  2345                           ;main_sync.c: 263: PORTD = 0;
  2346  1D4D  0188               	clrf	8	;volatile
  2347                           
  2348                           ;main_sync.c: 264: PORTE = 0;
  2349  1D4E  0189               	clrf	9	;volatile
  2350                           
  2351                           ;main_sync.c: 265: RD3 = 0;
  2352  1D4F  1188               	bcf	8,3	;volatile
  2353                           
  2354                           ;main_sync.c: 266: PORTDbits.RD5 = 1;
  2355  1D50  1688               	bsf	8,5	;volatile
  2356                           
  2357                           ;main_sync.c: 267: PORTDbits.RD4 = 1;
  2358  1D51  1608               	bsf	8,4	;volatile
  2359                           
  2360                           ;main_sync.c: 270: SSPCONbits.SSPEN = 0;
  2361  1D52  1294               	bcf	20,5	;volatile
  2362                           
  2363                           ;main_sync.c: 271: SSPSTAT = 0xC0;
  2364  1D53  30C0               	movlw	192
  2365  1D54  1683               	bsf	3,5	;RP0=1, select bank1
  2366  1D55  1303               	bcf	3,6	;RP1=0, select bank1
  2367  1D56  0094               	movwf	20	;volatile
  2368                           
  2369                           ;main_sync.c: 272: SSPCON = 0x20;
  2370  1D57  3020               	movlw	32
  2371  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  2372  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  2373  1D5A  0094               	movwf	20	;volatile
  2374                           
  2375                           ;main_sync.c: 274: SPBRGH = 0;
  2376  1D5B  1683               	bsf	3,5	;RP0=1, select bank1
  2377  1D5C  1303               	bcf	3,6	;RP1=0, select bank1
  2378  1D5D  019A               	clrf	26	;volatile
  2379                           
  2380                           ;main_sync.c: 275: SPBRG = 8;
  2381  1D5E  3008               	movlw	8
  2382  1D5F  0099               	movwf	25	;volatile
  2383                           
  2384                           ;main_sync.c: 276: BAUDCTL = 0x00;
  2385  1D60  1683               	bsf	3,5	;RP0=1, select bank3
  2386  1D61  1703               	bsf	3,6	;RP1=1, select bank3
  2387  1D62  0187               	clrf	7	;volatile
  2388                           
  2389                           ;main_sync.c: 277: RCSTA = 0x90;
  2390  1D63  3090               	movlw	144
  2391  1D64  1283               	bcf	3,5	;RP0=0, select bank0
  2392  1D65  1303               	bcf	3,6	;RP1=0, select bank0
  2393  1D66  0098               	movwf	24	;volatile
  2394                           
  2395                           ;main_sync.c: 278: TXSTA = 0x26;
  2396  1D67  3026               	movlw	38
  2397  1D68  1683               	bsf	3,5	;RP0=1, select bank1
  2398  1D69  1303               	bcf	3,6	;RP1=0, select bank1
  2399  1D6A  0098               	movwf	24	;volatile
  2400                           
  2401                           ;main_sync.c: 280: INTCON = 0xC0;
  2402  1D6B  30C0               	movlw	192
  2403  1D6C  008B               	movwf	11	;volatile
  2404                           
  2405                           ;main_sync.c: 281: TMR0IE = 0;
  2406  1D6D  128B               	bcf	11,5	;volatile
  2407                           
  2408                           ;main_sync.c: 282: PEIE = 1;
  2409  1D6E  170B               	bsf	11,6	;volatile
  2410                           
  2411                           ;main_sync.c: 283: GIE = 1;
  2412  1D6F  178B               	bsf	11,7	;volatile
  2413                           
  2414                           ;main_sync.c: 284: PIE1 = 0x20;
  2415  1D70  3020               	movlw	32
  2416  1D71  008C               	movwf	12	;volatile
  2417                           
  2418                           ;main_sync.c: 285: RCIE = 1;
  2419  1D72  168C               	bsf	12,5	;volatile
  2420                           
  2421                           ;main_sync.c: 286: T0CS = 0;
  2422  1D73  1281               	bcf	1,5	;volatile
  2423                           
  2424                           ;main_sync.c: 287: PSA = 0;
  2425  1D74  1181               	bcf	1,3	;volatile
  2426                           
  2427                           ;main_sync.c: 288: PS0 = 1;
  2428  1D75  1401               	bsf	1,0	;volatile
  2429                           
  2430                           ;main_sync.c: 289: PS1 = 1;
  2431  1D76  1481               	bsf	1,1	;volatile
  2432                           
  2433                           ;main_sync.c: 290: PS2 = 1;
  2434  1D77  1501               	bsf	1,2	;volatile
  2435                           
  2436                           ;main_sync.c: 292: for(int i = 0; i < 10000; i++);
  2437  1D78  01AA               	clrf	inicializar@i^(0+128)
  2438  1D79  01AB               	clrf	(inicializar@i+1)^(0+128)
  2439  1D7A                     l3604:	
  2440  1D7A  3001               	movlw	1
  2441  1D7B  1683               	bsf	3,5	;RP0=1, select bank1
  2442  1D7C  1303               	bcf	3,6	;RP1=0, select bank1
  2443  1D7D  07AA               	addwf	inicializar@i^(0+128),f
  2444  1D7E  1803               	skipnc
  2445  1D7F  0AAB               	incf	(inicializar@i+1)^(0+128),f
  2446  1D80  3000               	movlw	0
  2447  1D81  07AB               	addwf	(inicializar@i+1)^(0+128),f
  2448  1D82  082B               	movf	(inicializar@i+1)^(0+128),w
  2449  1D83  3A80               	xorlw	128
  2450  1D84  00FF               	movwf	127
  2451  1D85  30A7               	movlw	167
  2452  1D86  027F               	subwf	127,w
  2453  1D87  1D03               	skipz
  2454  1D88  2D8B               	goto	u4005
  2455  1D89  3010               	movlw	16
  2456  1D8A  022A               	subwf	inicializar@i^(0+128),w
  2457  1D8B                     u4005:	
  2458  1D8B  1C03               	skipc
  2459  1D8C  2D7A               	goto	l3604
  2460                           
  2461                           ;main_sync.c: 294: initLT();
  2462  1D8D  160A  158A  2365   	fcall	_initLT
  2463  1D90  0008               	return
  2464  1D91                     __end_of_inicializar:	
  2465                           
  2466                           	psect	text2
  2467  1B65                     __ptext2:	
  2468 ;; *************** function _initLT *****************
  2469 ;; Defined at:
  2470 ;;		line 848 in file "main_sync.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0
  2486 ;;      Temps:          0       0       1       0       0
  2487 ;;      Totals:         0       0       1       0       0
  2488 ;;Total ram usage:        1 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    6
  2491 ;; This function calls:
  2492 ;;		_escreveLT
  2493 ;; This function is called by:
  2494 ;;		_inicializar
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _initLT
  2500  1B65                     _initLT:	
  2501                           
  2502                           ;main_sync.c: 850: escreveLT(0x00, 0x38);
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _initLT: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2506  1B65  3038               	movlw	56
  2507  1B66  1683               	bsf	3,5	;RP0=1, select bank1
  2508  1B67  1303               	bcf	3,6	;RP1=0, select bank1
  2509  1B68  00A9               	movwf	??_initLT^(0+128)
  2510  1B69  0829               	movf	??_initLT^(0+128),w
  2511  1B6A  00A0               	movwf	escreveLT@data^(0+128)
  2512  1B6B  3000               	movlw	0
  2513  1B6C  120A  118A  2534  160A  158A  	fcall	_escreveLT
  2514                           
  2515                           ;main_sync.c: 851: escreveLT(0x01, 0x4B);
  2516  1B71  304B               	movlw	75
  2517  1B72  1683               	bsf	3,5	;RP0=1, select bank1
  2518  1B73  1303               	bcf	3,6	;RP1=0, select bank1
  2519  1B74  00A9               	movwf	??_initLT^(0+128)
  2520  1B75  0829               	movf	??_initLT^(0+128),w
  2521  1B76  00A0               	movwf	escreveLT@data^(0+128)
  2522  1B77  3001               	movlw	1
  2523  1B78  120A  118A  2534  160A  158A  	fcall	_escreveLT
  2524                           
  2525                           ;main_sync.c: 852: escreveLT(0x02, 0x03);
  2526  1B7D  3003               	movlw	3
  2527  1B7E  1683               	bsf	3,5	;RP0=1, select bank1
  2528  1B7F  1303               	bcf	3,6	;RP1=0, select bank1
  2529  1B80  00A9               	movwf	??_initLT^(0+128)
  2530  1B81  0829               	movf	??_initLT^(0+128),w
  2531  1B82  00A0               	movwf	escreveLT@data^(0+128)
  2532  1B83  3002               	movlw	2
  2533  1B84  120A  118A  2534  160A  158A  	fcall	_escreveLT
  2534                           
  2535                           ;main_sync.c: 853: escreveLT(0x04, 0x07);
  2536  1B89  3007               	movlw	7
  2537  1B8A  1683               	bsf	3,5	;RP0=1, select bank1
  2538  1B8B  1303               	bcf	3,6	;RP1=0, select bank1
  2539  1B8C  00A9               	movwf	??_initLT^(0+128)
  2540  1B8D  0829               	movf	??_initLT^(0+128),w
  2541  1B8E  00A0               	movwf	escreveLT@data^(0+128)
  2542  1B8F  3004               	movlw	4
  2543  1B90  120A  118A  2534   	fcall	_escreveLT
  2544  1B93  0008               	return
  2545  1B94                     __end_of_initLT:	
  2546                           
  2547                           	psect	text3
  2548  0534                     __ptext3:	
  2549 ;; *************** function _escreveLT *****************
  2550 ;; Defined at:
  2551 ;;		line 856 in file "main_sync.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  regAddr         1    wreg     unsigned char 
  2554 ;;  data            1    0[BANK1 ] unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  regAddr         1    3[BANK1 ] unsigned char 
  2557 ;;  j               2    7[BANK1 ] int 
  2558 ;;  i               2    5[BANK1 ] int 
  2559 ;;  chipAddr        1    4[BANK1 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, btemp+1
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       1       0       0
  2570 ;;      Locals:         0       0       6       0       0
  2571 ;;      Temps:          0       0       2       0       0
  2572 ;;      Totals:         0       0       9       0       0
  2573 ;;Total ram usage:        9 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    5
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_initLT
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _escreveLT
  2585  0534                     _escreveLT:	
  2586                           
  2587                           ;incstack = 0
  2588                           ; Regs used in _escreveLT: [wreg+status,2+status,0+btemp+1]
  2589                           ;escreveLT@regAddr stored from wreg
  2590  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0536  00A3               	movwf	escreveLT@regAddr^(0+128)
  2593                           
  2594                           ;main_sync.c: 858: uint8_t chipAddr = 0x8A;
  2595  0537  308A               	movlw	138
  2596  0538  00A1               	movwf	??_escreveLT^(0+128)
  2597  0539  0821               	movf	??_escreveLT^(0+128),w
  2598  053A  00A4               	movwf	escreveLT@chipAddr^(0+128)
  2599                           
  2600                           ;main_sync.c: 859: int i, j;;main_sync.c: 860: PORTDbits.RD4 = 0;
  2601  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2602  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2603  053D  1208               	bcf	8,4	;volatile
  2604                           
  2605                           ;main_sync.c: 861: for(j = 0; j < 10; j++);
  2606  053E  1683               	bsf	3,5	;RP0=1, select bank1
  2607  053F  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0540  01A7               	clrf	escreveLT@j^(0+128)
  2609  0541  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2610  0542                     l2832:	
  2611  0542  3001               	movlw	1
  2612  0543  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0544  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0545  07A7               	addwf	escreveLT@j^(0+128),f
  2615  0546  1803               	skipnc
  2616  0547  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2617  0548  3000               	movlw	0
  2618  0549  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2619  054A  0828               	movf	(escreveLT@j+1)^(0+128),w
  2620  054B  3A80               	xorlw	128
  2621  054C  00FF               	movwf	127
  2622  054D  3080               	movlw	128
  2623  054E  027F               	subwf	127,w
  2624  054F  1D03               	skipz
  2625  0550  2D53               	goto	u2765
  2626  0551  300A               	movlw	10
  2627  0552  0227               	subwf	escreveLT@j^(0+128),w
  2628  0553                     u2765:	
  2629  0553  1C03               	skipc
  2630  0554  2D42               	goto	l2832
  2631                           
  2632                           ;main_sync.c: 862: PORTDbits.RD5 = 0;
  2633  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0557  1288               	bcf	8,5	;volatile
  2636                           
  2637                           ;main_sync.c: 864: for (i = 0; i < 8; i++){
  2638  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2639  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2640  055A  01A5               	clrf	escreveLT@i^(0+128)
  2641  055B  01A6               	clrf	(escreveLT@i+1)^(0+128)
  2642  055C                     l2842:	
  2643                           
  2644                           ;main_sync.c: 865: PORTDbits.RD4 = (chipAddr >> (7 - i));
  2645  055C  1683               	bsf	3,5	;RP0=1, select bank1
  2646  055D  1303               	bcf	3,6	;RP1=0, select bank1
  2647  055E  0824               	movf	escreveLT@chipAddr^(0+128),w
  2648  055F  00A1               	movwf	??_escreveLT^(0+128)
  2649  0560  0825               	movf	escreveLT@i^(0+128),w
  2650  0561  3C07               	sublw	7
  2651  0562  3E01               	addlw	1
  2652  0563  2D66               	goto	u2774
  2653  0564                     u2775:	
  2654  0564  1003               	clrc
  2655  0565  0CA1               	rrf	??_escreveLT^(0+128),f
  2656  0566                     u2774:	
  2657  0566  3EFF               	addlw	-1
  2658  0567  1D03               	skipz
  2659  0568  2D64               	goto	u2775
  2660  0569  0821               	movf	??_escreveLT^(0+128),w
  2661  056A  00A2               	movwf	(??_escreveLT+1)^(0+128)
  2662  056B  0EA2               	swapf	(??_escreveLT+1)^(0+128),f
  2663  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2664  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2665  056E  0808               	movf	8,w	;volatile
  2666  056F  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0570  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0571  0622               	xorwf	(??_escreveLT+1)^(0+128),w
  2669  0572  39EF               	andlw	-17
  2670  0573  0622               	xorwf	(??_escreveLT+1)^(0+128),w
  2671  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0576  0088               	movwf	8	;volatile
  2674                           
  2675                           ;main_sync.c: 866: for(j = 0; j < 3; j++);
  2676  0577  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0578  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0579  01A7               	clrf	escreveLT@j^(0+128)
  2679  057A  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2680  057B                     l2850:	
  2681  057B  3001               	movlw	1
  2682  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2683  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2684  057E  07A7               	addwf	escreveLT@j^(0+128),f
  2685  057F  1803               	skipnc
  2686  0580  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2687  0581  3000               	movlw	0
  2688  0582  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2689  0583  0828               	movf	(escreveLT@j+1)^(0+128),w
  2690  0584  3A80               	xorlw	128
  2691  0585  00FF               	movwf	127
  2692  0586  3080               	movlw	128
  2693  0587  027F               	subwf	127,w
  2694  0588  1D03               	skipz
  2695  0589  2D8C               	goto	u2785
  2696  058A  3003               	movlw	3
  2697  058B  0227               	subwf	escreveLT@j^(0+128),w
  2698  058C                     u2785:	
  2699  058C  1C03               	skipc
  2700  058D  2D7B               	goto	l2850
  2701                           
  2702                           ;main_sync.c: 867: PORTDbits.RD5 = 1;
  2703  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2704  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0590  1688               	bsf	8,5	;volatile
  2706                           
  2707                           ;main_sync.c: 868: for(j = 0; j < 3; j++);
  2708  0591  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0592  1303               	bcf	3,6	;RP1=0, select bank1
  2710  0593  01A7               	clrf	escreveLT@j^(0+128)
  2711  0594  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2712  0595                     l2860:	
  2713  0595  3001               	movlw	1
  2714  0596  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0597  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0598  07A7               	addwf	escreveLT@j^(0+128),f
  2717  0599  1803               	skipnc
  2718  059A  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2719  059B  3000               	movlw	0
  2720  059C  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2721  059D  0828               	movf	(escreveLT@j+1)^(0+128),w
  2722  059E  3A80               	xorlw	128
  2723  059F  00FF               	movwf	127
  2724  05A0  3080               	movlw	128
  2725  05A1  027F               	subwf	127,w
  2726  05A2  1D03               	skipz
  2727  05A3  2DA6               	goto	u2795
  2728  05A4  3003               	movlw	3
  2729  05A5  0227               	subwf	escreveLT@j^(0+128),w
  2730  05A6                     u2795:	
  2731  05A6  1C03               	skipc
  2732  05A7  2D95               	goto	l2860
  2733                           
  2734                           ;main_sync.c: 869: PORTDbits.RD5 = 0;
  2735  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2736  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2737  05AA  1288               	bcf	8,5	;volatile
  2738                           
  2739                           ;main_sync.c: 870: if(i == 7)
  2740  05AB  3007               	movlw	7
  2741  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  2742  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  2743  05AE  0625               	xorwf	escreveLT@i^(0+128),w
  2744  05AF  0426               	iorwf	(escreveLT@i+1)^(0+128),w
  2745  05B0  1903               	btfsc	3,2
  2746                           
  2747                           ;main_sync.c: 871: TRISDbits.TRISD4 = 1;
  2748  05B1  1608               	bsf	8,4	;volatile
  2749  05B2  3001               	movlw	1
  2750  05B3  07A5               	addwf	escreveLT@i^(0+128),f
  2751  05B4  1803               	skipnc
  2752  05B5  0AA6               	incf	(escreveLT@i+1)^(0+128),f
  2753  05B6  3000               	movlw	0
  2754  05B7  07A6               	addwf	(escreveLT@i+1)^(0+128),f
  2755  05B8  0826               	movf	(escreveLT@i+1)^(0+128),w
  2756  05B9  3A80               	xorlw	128
  2757  05BA  00FF               	movwf	127
  2758  05BB  3080               	movlw	128
  2759  05BC  027F               	subwf	127,w
  2760  05BD  1D03               	skipz
  2761  05BE  2DC1               	goto	u2815
  2762  05BF  3008               	movlw	8
  2763  05C0  0225               	subwf	escreveLT@i^(0+128),w
  2764  05C1                     u2815:	
  2765  05C1  1C03               	skipc
  2766  05C2  2D5C               	goto	l2842
  2767                           
  2768                           ;main_sync.c: 872: };main_sync.c: 874: TRISDbits.TRISD4 = 0;
  2769  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  2770  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  2771  05C5  1208               	bcf	8,4	;volatile
  2772                           
  2773                           ;main_sync.c: 875: for(j = 0; j < 3; j++);
  2774  05C6  01A7               	clrf	escreveLT@j^(0+128)
  2775  05C7  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2776  05C8                     l2878:	
  2777  05C8  3001               	movlw	1
  2778  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2779  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2780  05CB  07A7               	addwf	escreveLT@j^(0+128),f
  2781  05CC  1803               	skipnc
  2782  05CD  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2783  05CE  3000               	movlw	0
  2784  05CF  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2785  05D0  0828               	movf	(escreveLT@j+1)^(0+128),w
  2786  05D1  3A80               	xorlw	128
  2787  05D2  00FF               	movwf	127
  2788  05D3  3080               	movlw	128
  2789  05D4  027F               	subwf	127,w
  2790  05D5  1D03               	skipz
  2791  05D6  2DD9               	goto	u2825
  2792  05D7  3003               	movlw	3
  2793  05D8  0227               	subwf	escreveLT@j^(0+128),w
  2794  05D9                     u2825:	
  2795  05D9  1C03               	skipc
  2796  05DA  2DC8               	goto	l2878
  2797                           
  2798                           ;main_sync.c: 876: PORTDbits.RD5 = 1;
  2799  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2800  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2801  05DD  1688               	bsf	8,5	;volatile
  2802                           
  2803                           ;main_sync.c: 877: for(j = 0; j < 2; j++);
  2804  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  2805  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  2806  05E0  01A7               	clrf	escreveLT@j^(0+128)
  2807  05E1  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2808  05E2                     l2888:	
  2809  05E2  3001               	movlw	1
  2810  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2811  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2812  05E5  07A7               	addwf	escreveLT@j^(0+128),f
  2813  05E6  1803               	skipnc
  2814  05E7  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2815  05E8  3000               	movlw	0
  2816  05E9  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2817  05EA  0828               	movf	(escreveLT@j+1)^(0+128),w
  2818  05EB  3A80               	xorlw	128
  2819  05EC  00FF               	movwf	127
  2820  05ED  3080               	movlw	128
  2821  05EE  027F               	subwf	127,w
  2822  05EF  1D03               	skipz
  2823  05F0  2DF3               	goto	u2835
  2824  05F1  3002               	movlw	2
  2825  05F2  0227               	subwf	escreveLT@j^(0+128),w
  2826  05F3                     u2835:	
  2827  05F3  1C03               	skipc
  2828  05F4  2DE2               	goto	l2888
  2829                           
  2830                           ;main_sync.c: 878: PORTDbits.RD5 = 0;
  2831  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2832  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  2833  05F7  1288               	bcf	8,5	;volatile
  2834                           
  2835                           ;main_sync.c: 879: for(j = 0; j < 3; j++);
  2836  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  2837  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  2838  05FA  01A7               	clrf	escreveLT@j^(0+128)
  2839  05FB  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2840  05FC                     l2898:	
  2841  05FC  3001               	movlw	1
  2842  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2843  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2844  05FF  07A7               	addwf	escreveLT@j^(0+128),f
  2845  0600  1803               	skipnc
  2846  0601  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2847  0602  3000               	movlw	0
  2848  0603  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2849  0604  0828               	movf	(escreveLT@j+1)^(0+128),w
  2850  0605  3A80               	xorlw	128
  2851  0606  00FF               	movwf	127
  2852  0607  3080               	movlw	128
  2853  0608  027F               	subwf	127,w
  2854  0609  1D03               	skipz
  2855  060A  2E0D               	goto	u2845
  2856  060B  3003               	movlw	3
  2857  060C  0227               	subwf	escreveLT@j^(0+128),w
  2858  060D                     u2845:	
  2859  060D  1C03               	skipc
  2860  060E  2DFC               	goto	l2898
  2861                           
  2862                           ;main_sync.c: 881: PORTDbits.RD4 = 1;
  2863  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0611  1608               	bsf	8,4	;volatile
  2866                           
  2867                           ;main_sync.c: 882: for(j = 0; j < 15; j++);
  2868  0612  1683               	bsf	3,5	;RP0=1, select bank1
  2869  0613  1303               	bcf	3,6	;RP1=0, select bank1
  2870  0614  01A7               	clrf	escreveLT@j^(0+128)
  2871  0615  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2872  0616                     l2908:	
  2873  0616  3001               	movlw	1
  2874  0617  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0618  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0619  07A7               	addwf	escreveLT@j^(0+128),f
  2877  061A  1803               	skipnc
  2878  061B  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2879  061C  3000               	movlw	0
  2880  061D  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2881  061E  0828               	movf	(escreveLT@j+1)^(0+128),w
  2882  061F  3A80               	xorlw	128
  2883  0620  00FF               	movwf	127
  2884  0621  3080               	movlw	128
  2885  0622  027F               	subwf	127,w
  2886  0623  1D03               	skipz
  2887  0624  2E27               	goto	u2855
  2888  0625  300F               	movlw	15
  2889  0626  0227               	subwf	escreveLT@j^(0+128),w
  2890  0627                     u2855:	
  2891  0627  1C03               	skipc
  2892  0628  2E16               	goto	l2908
  2893                           
  2894                           ;main_sync.c: 884: for (i = 0; i < 8; i++){
  2895  0629  1683               	bsf	3,5	;RP0=1, select bank1
  2896  062A  1303               	bcf	3,6	;RP1=0, select bank1
  2897  062B  01A5               	clrf	escreveLT@i^(0+128)
  2898  062C  01A6               	clrf	(escreveLT@i+1)^(0+128)
  2899  062D                     l2918:	
  2900                           
  2901                           ;main_sync.c: 885: PORTDbits.RD4 = (regAddr >> (7 - i));
  2902  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2903  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2904  062F  0823               	movf	escreveLT@regAddr^(0+128),w
  2905  0630  00A1               	movwf	??_escreveLT^(0+128)
  2906  0631  0825               	movf	escreveLT@i^(0+128),w
  2907  0632  3C07               	sublw	7
  2908  0633  3E01               	addlw	1
  2909  0634  2E37               	goto	u2864
  2910  0635                     u2865:	
  2911  0635  1003               	clrc
  2912  0636  0CA1               	rrf	??_escreveLT^(0+128),f
  2913  0637                     u2864:	
  2914  0637  3EFF               	addlw	-1
  2915  0638  1D03               	skipz
  2916  0639  2E35               	goto	u2865
  2917  063A  0821               	movf	??_escreveLT^(0+128),w
  2918  063B  00A2               	movwf	(??_escreveLT+1)^(0+128)
  2919  063C  0EA2               	swapf	(??_escreveLT+1)^(0+128),f
  2920  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2921  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2922  063F  0808               	movf	8,w	;volatile
  2923  0640  1683               	bsf	3,5	;RP0=1, select bank1
  2924  0641  1303               	bcf	3,6	;RP1=0, select bank1
  2925  0642  0622               	xorwf	(??_escreveLT+1)^(0+128),w
  2926  0643  39EF               	andlw	-17
  2927  0644  0622               	xorwf	(??_escreveLT+1)^(0+128),w
  2928  0645  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0646  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0647  0088               	movwf	8	;volatile
  2931                           
  2932                           ;main_sync.c: 886: for(j = 0; j < 3; j++);
  2933  0648  1683               	bsf	3,5	;RP0=1, select bank1
  2934  0649  1303               	bcf	3,6	;RP1=0, select bank1
  2935  064A  01A7               	clrf	escreveLT@j^(0+128)
  2936  064B  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2937  064C                     l2926:	
  2938  064C  3001               	movlw	1
  2939  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2940  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2941  064F  07A7               	addwf	escreveLT@j^(0+128),f
  2942  0650  1803               	skipnc
  2943  0651  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2944  0652  3000               	movlw	0
  2945  0653  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2946  0654  0828               	movf	(escreveLT@j+1)^(0+128),w
  2947  0655  3A80               	xorlw	128
  2948  0656  00FF               	movwf	127
  2949  0657  3080               	movlw	128
  2950  0658  027F               	subwf	127,w
  2951  0659  1D03               	skipz
  2952  065A  2E5D               	goto	u2875
  2953  065B  3003               	movlw	3
  2954  065C  0227               	subwf	escreveLT@j^(0+128),w
  2955  065D                     u2875:	
  2956  065D  1C03               	skipc
  2957  065E  2E4C               	goto	l2926
  2958                           
  2959                           ;main_sync.c: 887: PORTDbits.RD5 = 1;
  2960  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0661  1688               	bsf	8,5	;volatile
  2963                           
  2964                           ;main_sync.c: 888: for(j = 0; j < 3; j++);
  2965  0662  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0663  1303               	bcf	3,6	;RP1=0, select bank1
  2967  0664  01A7               	clrf	escreveLT@j^(0+128)
  2968  0665  01A8               	clrf	(escreveLT@j+1)^(0+128)
  2969  0666                     l2936:	
  2970  0666  3001               	movlw	1
  2971  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2972  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2973  0669  07A7               	addwf	escreveLT@j^(0+128),f
  2974  066A  1803               	skipnc
  2975  066B  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  2976  066C  3000               	movlw	0
  2977  066D  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  2978  066E  0828               	movf	(escreveLT@j+1)^(0+128),w
  2979  066F  3A80               	xorlw	128
  2980  0670  00FF               	movwf	127
  2981  0671  3080               	movlw	128
  2982  0672  027F               	subwf	127,w
  2983  0673  1D03               	skipz
  2984  0674  2E77               	goto	u2885
  2985  0675  3003               	movlw	3
  2986  0676  0227               	subwf	escreveLT@j^(0+128),w
  2987  0677                     u2885:	
  2988  0677  1C03               	skipc
  2989  0678  2E66               	goto	l2936
  2990                           
  2991                           ;main_sync.c: 889: PORTDbits.RD5 = 0;
  2992  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2993  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2994  067B  1288               	bcf	8,5	;volatile
  2995                           
  2996                           ;main_sync.c: 890: if(i == 7)
  2997  067C  3007               	movlw	7
  2998  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2999  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3000  067F  0625               	xorwf	escreveLT@i^(0+128),w
  3001  0680  0426               	iorwf	(escreveLT@i+1)^(0+128),w
  3002  0681  1903               	btfsc	3,2
  3003                           
  3004                           ;main_sync.c: 891: TRISDbits.TRISD4 = 1;
  3005  0682  1608               	bsf	8,4	;volatile
  3006  0683  3001               	movlw	1
  3007  0684  07A5               	addwf	escreveLT@i^(0+128),f
  3008  0685  1803               	skipnc
  3009  0686  0AA6               	incf	(escreveLT@i+1)^(0+128),f
  3010  0687  3000               	movlw	0
  3011  0688  07A6               	addwf	(escreveLT@i+1)^(0+128),f
  3012  0689  0826               	movf	(escreveLT@i+1)^(0+128),w
  3013  068A  3A80               	xorlw	128
  3014  068B  00FF               	movwf	127
  3015  068C  3080               	movlw	128
  3016  068D  027F               	subwf	127,w
  3017  068E  1D03               	skipz
  3018  068F  2E92               	goto	u2905
  3019  0690  3008               	movlw	8
  3020  0691  0225               	subwf	escreveLT@i^(0+128),w
  3021  0692                     u2905:	
  3022  0692  1C03               	skipc
  3023  0693  2E2D               	goto	l2918
  3024                           
  3025                           ;main_sync.c: 892: };main_sync.c: 894: TRISDbits.TRISD4 = 0;
  3026  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0696  1208               	bcf	8,4	;volatile
  3029                           
  3030                           ;main_sync.c: 895: for(j = 0; j < 3; j++);
  3031  0697  01A7               	clrf	escreveLT@j^(0+128)
  3032  0698  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3033  0699                     l2954:	
  3034  0699  3001               	movlw	1
  3035  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3036  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3037  069C  07A7               	addwf	escreveLT@j^(0+128),f
  3038  069D  1803               	skipnc
  3039  069E  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3040  069F  3000               	movlw	0
  3041  06A0  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3042  06A1  0828               	movf	(escreveLT@j+1)^(0+128),w
  3043  06A2  3A80               	xorlw	128
  3044  06A3  00FF               	movwf	127
  3045  06A4  3080               	movlw	128
  3046  06A5  027F               	subwf	127,w
  3047  06A6  1D03               	skipz
  3048  06A7  2EAA               	goto	u2915
  3049  06A8  3003               	movlw	3
  3050  06A9  0227               	subwf	escreveLT@j^(0+128),w
  3051  06AA                     u2915:	
  3052  06AA  1C03               	skipc
  3053  06AB  2E99               	goto	l2954
  3054                           
  3055                           ;main_sync.c: 896: PORTDbits.RD5 = 1;
  3056  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  3057  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  3058  06AE  1688               	bsf	8,5	;volatile
  3059                           
  3060                           ;main_sync.c: 897: for(j = 0; j < 2; j++);
  3061  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  3062  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  3063  06B1  01A7               	clrf	escreveLT@j^(0+128)
  3064  06B2  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3065  06B3                     l2964:	
  3066  06B3  3001               	movlw	1
  3067  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  3068  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  3069  06B6  07A7               	addwf	escreveLT@j^(0+128),f
  3070  06B7  1803               	skipnc
  3071  06B8  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3072  06B9  3000               	movlw	0
  3073  06BA  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3074  06BB  0828               	movf	(escreveLT@j+1)^(0+128),w
  3075  06BC  3A80               	xorlw	128
  3076  06BD  00FF               	movwf	127
  3077  06BE  3080               	movlw	128
  3078  06BF  027F               	subwf	127,w
  3079  06C0  1D03               	skipz
  3080  06C1  2EC4               	goto	u2925
  3081  06C2  3002               	movlw	2
  3082  06C3  0227               	subwf	escreveLT@j^(0+128),w
  3083  06C4                     u2925:	
  3084  06C4  1C03               	skipc
  3085  06C5  2EB3               	goto	l2964
  3086                           
  3087                           ;main_sync.c: 898: PORTDbits.RD5 = 0;
  3088  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  3089  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  3090  06C8  1288               	bcf	8,5	;volatile
  3091                           
  3092                           ;main_sync.c: 899: for(j = 0; j < 3; j++);
  3093  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  3094  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  3095  06CB  01A7               	clrf	escreveLT@j^(0+128)
  3096  06CC  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3097  06CD                     l2974:	
  3098  06CD  3001               	movlw	1
  3099  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  3100  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  3101  06D0  07A7               	addwf	escreveLT@j^(0+128),f
  3102  06D1  1803               	skipnc
  3103  06D2  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3104  06D3  3000               	movlw	0
  3105  06D4  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3106  06D5  0828               	movf	(escreveLT@j+1)^(0+128),w
  3107  06D6  3A80               	xorlw	128
  3108  06D7  00FF               	movwf	127
  3109  06D8  3080               	movlw	128
  3110  06D9  027F               	subwf	127,w
  3111  06DA  1D03               	skipz
  3112  06DB  2EDE               	goto	u2935
  3113  06DC  3003               	movlw	3
  3114  06DD  0227               	subwf	escreveLT@j^(0+128),w
  3115  06DE                     u2935:	
  3116  06DE  1C03               	skipc
  3117  06DF  2ECD               	goto	l2974
  3118                           
  3119                           ;main_sync.c: 901: PORTDbits.RD4 = 1;
  3120  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3121  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3122  06E2  1608               	bsf	8,4	;volatile
  3123                           
  3124                           ;main_sync.c: 902: for(j = 0; j < 15; j++);
  3125  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3126  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3127  06E5  01A7               	clrf	escreveLT@j^(0+128)
  3128  06E6  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3129  06E7                     l2984:	
  3130  06E7  3001               	movlw	1
  3131  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  3132  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  3133  06EA  07A7               	addwf	escreveLT@j^(0+128),f
  3134  06EB  1803               	skipnc
  3135  06EC  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3136  06ED  3000               	movlw	0
  3137  06EE  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3138  06EF  0828               	movf	(escreveLT@j+1)^(0+128),w
  3139  06F0  3A80               	xorlw	128
  3140  06F1  00FF               	movwf	127
  3141  06F2  3080               	movlw	128
  3142  06F3  027F               	subwf	127,w
  3143  06F4  1D03               	skipz
  3144  06F5  2EF8               	goto	u2945
  3145  06F6  300F               	movlw	15
  3146  06F7  0227               	subwf	escreveLT@j^(0+128),w
  3147  06F8                     u2945:	
  3148  06F8  1C03               	skipc
  3149  06F9  2EE7               	goto	l2984
  3150                           
  3151                           ;main_sync.c: 904: for (i = 0; i < 8; i++){
  3152  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  3153  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  3154  06FC  01A5               	clrf	escreveLT@i^(0+128)
  3155  06FD  01A6               	clrf	(escreveLT@i+1)^(0+128)
  3156  06FE                     l2994:	
  3157                           
  3158                           ;main_sync.c: 905: PORTDbits.RD4 = (data >> (7 - i));
  3159  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  3160  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  3161  0700  0820               	movf	escreveLT@data^(0+128),w
  3162  0701  00A1               	movwf	??_escreveLT^(0+128)
  3163  0702  0825               	movf	escreveLT@i^(0+128),w
  3164  0703  3C07               	sublw	7
  3165  0704  3E01               	addlw	1
  3166  0705  2F08               	goto	u2954
  3167  0706                     u2955:	
  3168  0706  1003               	clrc
  3169  0707  0CA1               	rrf	??_escreveLT^(0+128),f
  3170  0708                     u2954:	
  3171  0708  3EFF               	addlw	-1
  3172  0709  1D03               	skipz
  3173  070A  2F06               	goto	u2955
  3174  070B  0821               	movf	??_escreveLT^(0+128),w
  3175  070C  00A2               	movwf	(??_escreveLT+1)^(0+128)
  3176  070D  0EA2               	swapf	(??_escreveLT+1)^(0+128),f
  3177  070E  1283               	bcf	3,5	;RP0=0, select bank0
  3178  070F  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0710  0808               	movf	8,w	;volatile
  3180  0711  1683               	bsf	3,5	;RP0=1, select bank1
  3181  0712  1303               	bcf	3,6	;RP1=0, select bank1
  3182  0713  0622               	xorwf	(??_escreveLT+1)^(0+128),w
  3183  0714  39EF               	andlw	-17
  3184  0715  0622               	xorwf	(??_escreveLT+1)^(0+128),w
  3185  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0718  0088               	movwf	8	;volatile
  3188                           
  3189                           ;main_sync.c: 906: for(j = 0; j < 3; j++);
  3190  0719  1683               	bsf	3,5	;RP0=1, select bank1
  3191  071A  1303               	bcf	3,6	;RP1=0, select bank1
  3192  071B  01A7               	clrf	escreveLT@j^(0+128)
  3193  071C  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3194  071D                     l3002:	
  3195  071D  3001               	movlw	1
  3196  071E  1683               	bsf	3,5	;RP0=1, select bank1
  3197  071F  1303               	bcf	3,6	;RP1=0, select bank1
  3198  0720  07A7               	addwf	escreveLT@j^(0+128),f
  3199  0721  1803               	skipnc
  3200  0722  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3201  0723  3000               	movlw	0
  3202  0724  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3203  0725  0828               	movf	(escreveLT@j+1)^(0+128),w
  3204  0726  3A80               	xorlw	128
  3205  0727  00FF               	movwf	127
  3206  0728  3080               	movlw	128
  3207  0729  027F               	subwf	127,w
  3208  072A  1D03               	skipz
  3209  072B  2F2E               	goto	u2965
  3210  072C  3003               	movlw	3
  3211  072D  0227               	subwf	escreveLT@j^(0+128),w
  3212  072E                     u2965:	
  3213  072E  1C03               	skipc
  3214  072F  2F1D               	goto	l3002
  3215                           
  3216                           ;main_sync.c: 907: PORTDbits.RD5 = 1;
  3217  0730  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0731  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0732  1688               	bsf	8,5	;volatile
  3220                           
  3221                           ;main_sync.c: 908: for(j = 0; j < 3; j++);
  3222  0733  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0734  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0735  01A7               	clrf	escreveLT@j^(0+128)
  3225  0736  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3226  0737                     l3012:	
  3227  0737  3001               	movlw	1
  3228  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3229  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3230  073A  07A7               	addwf	escreveLT@j^(0+128),f
  3231  073B  1803               	skipnc
  3232  073C  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3233  073D  3000               	movlw	0
  3234  073E  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3235  073F  0828               	movf	(escreveLT@j+1)^(0+128),w
  3236  0740  3A80               	xorlw	128
  3237  0741  00FF               	movwf	127
  3238  0742  3080               	movlw	128
  3239  0743  027F               	subwf	127,w
  3240  0744  1D03               	skipz
  3241  0745  2F48               	goto	u2975
  3242  0746  3003               	movlw	3
  3243  0747  0227               	subwf	escreveLT@j^(0+128),w
  3244  0748                     u2975:	
  3245  0748  1C03               	skipc
  3246  0749  2F37               	goto	l3012
  3247                           
  3248                           ;main_sync.c: 909: PORTDbits.RD5 = 0;
  3249  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3250  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3251  074C  1288               	bcf	8,5	;volatile
  3252                           
  3253                           ;main_sync.c: 910: if(i == 7)
  3254  074D  3007               	movlw	7
  3255  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3256  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3257  0750  0625               	xorwf	escreveLT@i^(0+128),w
  3258  0751  0426               	iorwf	(escreveLT@i+1)^(0+128),w
  3259  0752  1903               	btfsc	3,2
  3260                           
  3261                           ;main_sync.c: 911: TRISDbits.TRISD4 = 1;
  3262  0753  1608               	bsf	8,4	;volatile
  3263  0754  3001               	movlw	1
  3264  0755  07A5               	addwf	escreveLT@i^(0+128),f
  3265  0756  1803               	skipnc
  3266  0757  0AA6               	incf	(escreveLT@i+1)^(0+128),f
  3267  0758  3000               	movlw	0
  3268  0759  07A6               	addwf	(escreveLT@i+1)^(0+128),f
  3269  075A  0826               	movf	(escreveLT@i+1)^(0+128),w
  3270  075B  3A80               	xorlw	128
  3271  075C  00FF               	movwf	127
  3272  075D  3080               	movlw	128
  3273  075E  027F               	subwf	127,w
  3274  075F  1D03               	skipz
  3275  0760  2F63               	goto	u2995
  3276  0761  3008               	movlw	8
  3277  0762  0225               	subwf	escreveLT@i^(0+128),w
  3278  0763                     u2995:	
  3279  0763  1C03               	skipc
  3280  0764  2EFE               	goto	l2994
  3281                           
  3282                           ;main_sync.c: 912: };main_sync.c: 914: TRISDbits.TRISD4 = 0;
  3283  0765  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0766  1303               	bcf	3,6	;RP1=0, select bank1
  3285  0767  1208               	bcf	8,4	;volatile
  3286                           
  3287                           ;main_sync.c: 915: for(j = 0; j < 3; j++);
  3288  0768  01A7               	clrf	escreveLT@j^(0+128)
  3289  0769  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3290  076A                     l3030:	
  3291  076A  3001               	movlw	1
  3292  076B  1683               	bsf	3,5	;RP0=1, select bank1
  3293  076C  1303               	bcf	3,6	;RP1=0, select bank1
  3294  076D  07A7               	addwf	escreveLT@j^(0+128),f
  3295  076E  1803               	skipnc
  3296  076F  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3297  0770  3000               	movlw	0
  3298  0771  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3299  0772  0828               	movf	(escreveLT@j+1)^(0+128),w
  3300  0773  3A80               	xorlw	128
  3301  0774  00FF               	movwf	127
  3302  0775  3080               	movlw	128
  3303  0776  027F               	subwf	127,w
  3304  0777  1D03               	skipz
  3305  0778  2F7B               	goto	u3005
  3306  0779  3003               	movlw	3
  3307  077A  0227               	subwf	escreveLT@j^(0+128),w
  3308  077B                     u3005:	
  3309  077B  1C03               	skipc
  3310  077C  2F6A               	goto	l3030
  3311                           
  3312                           ;main_sync.c: 916: PORTDbits.RD5 = 1;
  3313  077D  1283               	bcf	3,5	;RP0=0, select bank0
  3314  077E  1303               	bcf	3,6	;RP1=0, select bank0
  3315  077F  1688               	bsf	8,5	;volatile
  3316                           
  3317                           ;main_sync.c: 917: for(j = 0; j < 2; j++);
  3318  0780  1683               	bsf	3,5	;RP0=1, select bank1
  3319  0781  1303               	bcf	3,6	;RP1=0, select bank1
  3320  0782  01A7               	clrf	escreveLT@j^(0+128)
  3321  0783  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3322  0784                     l3040:	
  3323  0784  3001               	movlw	1
  3324  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3326  0787  07A7               	addwf	escreveLT@j^(0+128),f
  3327  0788  1803               	skipnc
  3328  0789  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3329  078A  3000               	movlw	0
  3330  078B  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3331  078C  0828               	movf	(escreveLT@j+1)^(0+128),w
  3332  078D  3A80               	xorlw	128
  3333  078E  00FF               	movwf	127
  3334  078F  3080               	movlw	128
  3335  0790  027F               	subwf	127,w
  3336  0791  1D03               	skipz
  3337  0792  2F95               	goto	u3015
  3338  0793  3002               	movlw	2
  3339  0794  0227               	subwf	escreveLT@j^(0+128),w
  3340  0795                     u3015:	
  3341  0795  1C03               	skipc
  3342  0796  2F84               	goto	l3040
  3343                           
  3344                           ;main_sync.c: 918: PORTDbits.RD5 = 0;
  3345  0797  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0798  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0799  1288               	bcf	8,5	;volatile
  3348                           
  3349                           ;main_sync.c: 919: for(j = 0; j < 5; j++);
  3350  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3351  079B  1303               	bcf	3,6	;RP1=0, select bank1
  3352  079C  01A7               	clrf	escreveLT@j^(0+128)
  3353  079D  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3354  079E                     l3050:	
  3355  079E  3001               	movlw	1
  3356  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3357  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  3358  07A1  07A7               	addwf	escreveLT@j^(0+128),f
  3359  07A2  1803               	skipnc
  3360  07A3  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3361  07A4  3000               	movlw	0
  3362  07A5  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3363  07A6  0828               	movf	(escreveLT@j+1)^(0+128),w
  3364  07A7  3A80               	xorlw	128
  3365  07A8  00FF               	movwf	127
  3366  07A9  3080               	movlw	128
  3367  07AA  027F               	subwf	127,w
  3368  07AB  1D03               	skipz
  3369  07AC  2FAF               	goto	u3025
  3370  07AD  3005               	movlw	5
  3371  07AE  0227               	subwf	escreveLT@j^(0+128),w
  3372  07AF                     u3025:	
  3373  07AF  1C03               	skipc
  3374  07B0  2F9E               	goto	l3050
  3375                           
  3376                           ;main_sync.c: 921: PORTDbits.RD5 = 1;
  3377  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3378  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3379  07B3  1688               	bsf	8,5	;volatile
  3380                           
  3381                           ;main_sync.c: 922: for(j = 0; j < 10; j++);
  3382  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  3383  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  3384  07B6  01A7               	clrf	escreveLT@j^(0+128)
  3385  07B7  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3386  07B8                     l3060:	
  3387  07B8  3001               	movlw	1
  3388  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  3389  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  3390  07BB  07A7               	addwf	escreveLT@j^(0+128),f
  3391  07BC  1803               	skipnc
  3392  07BD  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3393  07BE  3000               	movlw	0
  3394  07BF  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3395  07C0  0828               	movf	(escreveLT@j+1)^(0+128),w
  3396  07C1  3A80               	xorlw	128
  3397  07C2  00FF               	movwf	127
  3398  07C3  3080               	movlw	128
  3399  07C4  027F               	subwf	127,w
  3400  07C5  1D03               	skipz
  3401  07C6  2FC9               	goto	u3035
  3402  07C7  300A               	movlw	10
  3403  07C8  0227               	subwf	escreveLT@j^(0+128),w
  3404  07C9                     u3035:	
  3405  07C9  1C03               	skipc
  3406  07CA  2FB8               	goto	l3060
  3407                           
  3408                           ;main_sync.c: 923: PORTDbits.RD4 = 1;
  3409  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3410  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3411  07CD  1608               	bsf	8,4	;volatile
  3412                           
  3413                           ;main_sync.c: 925: for(j = 0; j < 25; j++);
  3414  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  3415  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  3416  07D0  01A7               	clrf	escreveLT@j^(0+128)
  3417  07D1  01A8               	clrf	(escreveLT@j+1)^(0+128)
  3418  07D2                     l3070:	
  3419  07D2  3001               	movlw	1
  3420  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  3421  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  3422  07D5  07A7               	addwf	escreveLT@j^(0+128),f
  3423  07D6  1803               	skipnc
  3424  07D7  0AA8               	incf	(escreveLT@j+1)^(0+128),f
  3425  07D8  3000               	movlw	0
  3426  07D9  07A8               	addwf	(escreveLT@j+1)^(0+128),f
  3427  07DA  0828               	movf	(escreveLT@j+1)^(0+128),w
  3428  07DB  3A80               	xorlw	128
  3429  07DC  00FF               	movwf	127
  3430  07DD  3080               	movlw	128
  3431  07DE  027F               	subwf	127,w
  3432  07DF  1D03               	skipz
  3433  07E0  2FE3               	goto	u3045
  3434  07E1  3019               	movlw	25
  3435  07E2  0227               	subwf	escreveLT@j^(0+128),w
  3436  07E3                     u3045:	
  3437  07E3  1803               	btfsc	3,0
  3438  07E4  0008               	return
  3439  07E5  2FD2               	goto	l3070
  3440  07E6                     __end_of_escreveLT:	
  3441                           
  3442                           	psect	text4
  3443  1AB5                     __ptext4:	
  3444 ;; *************** function _fabs *****************
  3445 ;; Defined at:
  3446 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/fabs.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  d               3   55[BANK1 ] void 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  3   55[BANK1 ] void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       3       0       0
  3461 ;;      Locals:         0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0
  3463 ;;      Totals:         0       0       3       0       0
  3464 ;;Total ram usage:        3 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    6
  3467 ;; This function calls:
  3468 ;;		___ftge
  3469 ;;		___ftneg
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _fabs
  3477  1AB5                     _fabs:	
  3478                           
  3479                           ;incstack = 0
  3480                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
  3481  1AB5  1683               	bsf	3,5	;RP0=1, select bank1
  3482  1AB6  1303               	bcf	3,6	;RP1=0, select bank1
  3483  1AB7  0857               	movf	fabs@d^(0+128),w
  3484  1AB8  00D1               	movwf	___ftge@ff1^(0+128)
  3485  1AB9  0858               	movf	(fabs@d+1)^(0+128),w
  3486  1ABA  00D2               	movwf	(___ftge@ff1+1)^(0+128)
  3487  1ABB  0859               	movf	(fabs@d+2)^(0+128),w
  3488  1ABC  00D3               	movwf	(___ftge@ff1+2)^(0+128)
  3489  1ABD  3000               	movlw	0
  3490  1ABE  00D4               	movwf	___ftge@ff2^(0+128)
  3491  1ABF  3000               	movlw	0
  3492  1AC0  00D5               	movwf	(___ftge@ff2+1)^(0+128)
  3493  1AC1  3000               	movlw	0
  3494  1AC2  00D6               	movwf	(___ftge@ff2+2)^(0+128)
  3495  1AC3  160A  158A  2336  160A  158A  	fcall	___ftge
  3496  1AC8  1803               	btfsc	3,0
  3497  1AC9  0008               	return
  3498  1ACA  1683               	bsf	3,5	;RP0=1, select bank1
  3499  1ACB  1303               	bcf	3,6	;RP1=0, select bank1
  3500  1ACC  0857               	movf	fabs@d^(0+128),w
  3501  1ACD  00A0               	movwf	___ftneg@f1^(0+128)
  3502  1ACE  0858               	movf	(fabs@d+1)^(0+128),w
  3503  1ACF  00A1               	movwf	(___ftneg@f1+1)^(0+128)
  3504  1AD0  0859               	movf	(fabs@d+2)^(0+128),w
  3505  1AD1  00A2               	movwf	(___ftneg@f1+2)^(0+128)
  3506  1AD2  160A  158A  21DD   	fcall	___ftneg
  3507  1AD5  1683               	bsf	3,5	;RP0=1, select bank1
  3508  1AD6  1303               	bcf	3,6	;RP1=0, select bank1
  3509  1AD7  0820               	movf	?___ftneg^(0+128),w
  3510  1AD8  00D7               	movwf	?_fabs^(0+128)
  3511  1AD9  0821               	movf	(?___ftneg+1)^(0+128),w
  3512  1ADA  00D8               	movwf	(?_fabs+1)^(0+128)
  3513  1ADB  0822               	movf	(?___ftneg+2)^(0+128),w
  3514  1ADC  00D9               	movwf	(?_fabs+2)^(0+128)
  3515  1ADD  0008               	return
  3516  1ADE                     __end_of_fabs:	
  3517                           
  3518                           	psect	text5
  3519  19DD                     __ptext5:	
  3520 ;; *************** function ___ftneg *****************
  3521 ;; Defined at:
  3522 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftneg.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  f1              3    0[BANK1 ] float 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  3    0[BANK1 ] float 
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       0       3       0       0
  3537 ;;      Locals:         0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0
  3539 ;;      Totals:         0       0       3       0       0
  3540 ;;Total ram usage:        3 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    5
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_fabs
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function ___ftneg
  3552  19DD                     ___ftneg:	
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in ___ftneg: [wreg]
  3556  19DD  1683               	bsf	3,5	;RP0=1, select bank1
  3557  19DE  1303               	bcf	3,6	;RP1=0, select bank1
  3558  19DF  0822               	movf	(___ftneg@f1+2)^(0+128),w
  3559  19E0  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  3560  19E1  0420               	iorwf	___ftneg@f1^(0+128),w
  3561  19E2  1903               	skipnz
  3562  19E3  0008               	return
  3563  19E4  3080               	movlw	128
  3564  19E5  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  3565  19E6  0008               	return
  3566  19E7                     __end_of___ftneg:	
  3567                           
  3568                           	psect	text6
  3569  1B36                     __ptext6:	
  3570 ;; *************** function ___ftge *****************
  3571 ;; Defined at:
  3572 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftge.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  ff1             3   49[BANK1 ] float 
  3575 ;;  ff2             3   52[BANK1 ] float 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3587 ;;      Params:         0       0       6       0       0
  3588 ;;      Locals:         0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0
  3590 ;;      Totals:         0       0       6       0       0
  3591 ;;Total ram usage:        6 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    5
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;;		_fabs
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function ___ftge
  3604  1B36                     ___ftge:	
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3608  1B36  1683               	bsf	3,5	;RP0=1, select bank1
  3609  1B37  1303               	bcf	3,6	;RP1=0, select bank1
  3610  1B38  1FD3               	btfss	(___ftge@ff1+2)^(0+128),7
  3611  1B39  2B47               	goto	l3512
  3612  1B3A  0851               	movf	___ftge@ff1^(0+128),w
  3613  1B3B  3C00               	sublw	0
  3614  1B3C  00D1               	movwf	___ftge@ff1^(0+128)
  3615  1B3D  0852               	movf	(___ftge@ff1+1)^(0+128),w
  3616  1B3E  1C03               	skipc
  3617  1B3F  0F52               	incfsz	(___ftge@ff1+1)^(0+128),w
  3618  1B40  3C00               	sublw	0
  3619  1B41  00D2               	movwf	(___ftge@ff1+1)^(0+128)
  3620  1B42  0853               	movf	(___ftge@ff1+2)^(0+128),w
  3621  1B43  1C03               	skipc
  3622  1B44  0F53               	incfsz	(___ftge@ff1+2)^(0+128),w
  3623  1B45  3C80               	sublw	128
  3624  1B46  00D3               	movwf	(___ftge@ff1+2)^(0+128)
  3625  1B47                     l3512:	
  3626  1B47  1FD6               	btfss	(___ftge@ff2+2)^(0+128),7
  3627  1B48  2B56               	goto	l3516
  3628  1B49  0854               	movf	___ftge@ff2^(0+128),w
  3629  1B4A  3C00               	sublw	0
  3630  1B4B  00D4               	movwf	___ftge@ff2^(0+128)
  3631  1B4C  0855               	movf	(___ftge@ff2+1)^(0+128),w
  3632  1B4D  1C03               	skipc
  3633  1B4E  0F55               	incfsz	(___ftge@ff2+1)^(0+128),w
  3634  1B4F  3C00               	sublw	0
  3635  1B50  00D5               	movwf	(___ftge@ff2+1)^(0+128)
  3636  1B51  0856               	movf	(___ftge@ff2+2)^(0+128),w
  3637  1B52  1C03               	skipc
  3638  1B53  0F56               	incfsz	(___ftge@ff2+2)^(0+128),w
  3639  1B54  3C80               	sublw	128
  3640  1B55  00D6               	movwf	(___ftge@ff2+2)^(0+128)
  3641  1B56                     l3516:	
  3642  1B56  3080               	movlw	128
  3643  1B57  06D3               	xorwf	(___ftge@ff1+2)^(0+128),f
  3644  1B58  3080               	movlw	128
  3645  1B59  06D6               	xorwf	(___ftge@ff2+2)^(0+128),f
  3646  1B5A  0856               	movf	(___ftge@ff2+2)^(0+128),w
  3647  1B5B  0253               	subwf	(___ftge@ff1+2)^(0+128),w
  3648  1B5C  1D03               	skipz
  3649  1B5D  0008               	return
  3650  1B5E  0855               	movf	(___ftge@ff2+1)^(0+128),w
  3651  1B5F  0252               	subwf	(___ftge@ff1+1)^(0+128),w
  3652  1B60  1D03               	skipz
  3653  1B61  0008               	return
  3654  1B62  0854               	movf	___ftge@ff2^(0+128),w
  3655  1B63  0251               	subwf	___ftge@ff1^(0+128),w
  3656  1B64  0008               	return
  3657  1B65                     __end_of___ftge:	
  3658                           
  3659                           	psect	text7
  3660  098F                     __ptext7:	
  3661 ;; *************** function _compara *****************
  3662 ;; Defined at:
  3663 ;;		line 297 in file "main_sync.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  comp            2   11[BANK1 ] int 
  3668 ;;  comparar        2    9[BANK1 ] int 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         0       0       0       0       0
  3679 ;;      Locals:         0       0       4       0       0
  3680 ;;      Temps:          0       0       4       0       0
  3681 ;;      Totals:         0       0       8       0       0
  3682 ;;Total ram usage:        8 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    6
  3685 ;; This function calls:
  3686 ;;		_getEEPROM
  3687 ;;		_setEEPROM
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _compara
  3695  098F                     _compara:	
  3696                           
  3697                           ;main_sync.c: 299: int comparar;;main_sync.c: 300: for(comparar = 0; comparar<5; compara
      +                          r+=2)
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _compara: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3701  098F  1683               	bsf	3,5	;RP0=1, select bank1
  3702  0990  1303               	bcf	3,6	;RP1=0, select bank1
  3703  0991  01A9               	clrf	compara@comparar^(0+128)
  3704  0992  01AA               	clrf	(compara@comparar+1)^(0+128)
  3705  0993                     l3616:	
  3706                           
  3707                           ;main_sync.c: 301: {;main_sync.c: 302: if (((getEEPROM(comparar+100) << 8) + getEEPROM(c
      +                          omparar+101) == (int)(65535)) && ((getEEPROM(comparar+200) << 8) + getEEPROM(comparar+20
      +                          1) == (int)(65535)))
  3708  0993  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0994  1303               	bcf	3,6	;RP1=0, select bank1
  3710  0995  0829               	movf	compara@comparar^(0+128),w
  3711  0996  3E65               	addlw	101
  3712  0997  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3713  099C  1683               	bsf	3,5	;RP0=1, select bank1
  3714  099D  1303               	bcf	3,6	;RP1=0, select bank1
  3715  099E  00A5               	movwf	??_compara^(0+128)
  3716  099F  0829               	movf	compara@comparar^(0+128),w
  3717  09A0  3E64               	addlw	100
  3718  09A1  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3719  09A6  1683               	bsf	3,5	;RP0=1, select bank1
  3720  09A7  1303               	bcf	3,6	;RP1=0, select bank1
  3721  09A8  00A6               	movwf	(??_compara+1)^(0+128)
  3722  09A9  0A25               	incf	??_compara^(0+128),w
  3723  09AA  1D03               	skipz
  3724  09AB  2A19               	goto	l3622
  3725  09AC  0A26               	incf	(??_compara+1)^(0+128),w
  3726  09AD  1D03               	btfss	3,2
  3727  09AE  2A19               	goto	l3622
  3728  09AF  0829               	movf	compara@comparar^(0+128),w
  3729  09B0  3EC9               	addlw	201
  3730  09B1  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3731  09B6  1683               	bsf	3,5	;RP0=1, select bank1
  3732  09B7  1303               	bcf	3,6	;RP1=0, select bank1
  3733  09B8  00A5               	movwf	??_compara^(0+128)
  3734  09B9  0829               	movf	compara@comparar^(0+128),w
  3735  09BA  3EC8               	addlw	200
  3736  09BB  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3737  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  3738  09C1  1303               	bcf	3,6	;RP1=0, select bank1
  3739  09C2  00A6               	movwf	(??_compara+1)^(0+128)
  3740  09C3  0A25               	incf	??_compara^(0+128),w
  3741  09C4  1D03               	skipz
  3742  09C5  2A19               	goto	l3622
  3743  09C6  0A26               	incf	(??_compara+1)^(0+128),w
  3744  09C7  1D03               	btfss	3,2
  3745  09C8  2A19               	goto	l3622
  3746                           
  3747                           ;main_sync.c: 303: {;main_sync.c: 304: setEEPROM(comparar+100, getEEPROM(comparar));
  3748  09C9  0829               	movf	compara@comparar^(0+128),w
  3749  09CA  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3750  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  3751  09D0  1303               	bcf	3,6	;RP1=0, select bank1
  3752  09D1  00A5               	movwf	??_compara^(0+128)
  3753  09D2  0825               	movf	??_compara^(0+128),w
  3754  09D3  00A3               	movwf	setEEPROM@valor^(0+128)
  3755  09D4  0829               	movf	compara@comparar^(0+128),w
  3756  09D5  3E64               	addlw	100
  3757  09D6  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  3758                           
  3759                           ;main_sync.c: 305: setEEPROM(comparar+101, getEEPROM(comparar+1));
  3760  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  3761  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  3762  09DD  0829               	movf	compara@comparar^(0+128),w
  3763  09DE  3E01               	addlw	1
  3764  09DF  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3765  09E4  1683               	bsf	3,5	;RP0=1, select bank1
  3766  09E5  1303               	bcf	3,6	;RP1=0, select bank1
  3767  09E6  00A5               	movwf	??_compara^(0+128)
  3768  09E7  0825               	movf	??_compara^(0+128),w
  3769  09E8  00A3               	movwf	setEEPROM@valor^(0+128)
  3770  09E9  0829               	movf	compara@comparar^(0+128),w
  3771  09EA  3E65               	addlw	101
  3772  09EB  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  3773                           
  3774                           ;main_sync.c: 306: setEEPROM(comparar+200, getEEPROM(comparar));
  3775  09F0  1683               	bsf	3,5	;RP0=1, select bank1
  3776  09F1  1303               	bcf	3,6	;RP1=0, select bank1
  3777  09F2  0829               	movf	compara@comparar^(0+128),w
  3778  09F3  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3779  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  3780  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  3781  09FA  00A5               	movwf	??_compara^(0+128)
  3782  09FB  0825               	movf	??_compara^(0+128),w
  3783  09FC  00A3               	movwf	setEEPROM@valor^(0+128)
  3784  09FD  0829               	movf	compara@comparar^(0+128),w
  3785  09FE  3EC8               	addlw	200
  3786  09FF  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  3787                           
  3788                           ;main_sync.c: 307: setEEPROM(comparar+201, getEEPROM(comparar+1));
  3789  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  3790  0A05  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0A06  0829               	movf	compara@comparar^(0+128),w
  3792  0A07  3E01               	addlw	1
  3793  0A08  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3794  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  3795  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  3796  0A0F  00A5               	movwf	??_compara^(0+128)
  3797  0A10  0825               	movf	??_compara^(0+128),w
  3798  0A11  00A3               	movwf	setEEPROM@valor^(0+128)
  3799  0A12  0829               	movf	compara@comparar^(0+128),w
  3800  0A13  3EC9               	addlw	201
  3801  0A14  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  3802  0A19                     l3622:	
  3803  0A19  3002               	movlw	2
  3804  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  3805  0A1B  1303               	bcf	3,6	;RP1=0, select bank1
  3806  0A1C  07A9               	addwf	compara@comparar^(0+128),f
  3807  0A1D  1803               	skipnc
  3808  0A1E  0AAA               	incf	(compara@comparar+1)^(0+128),f
  3809  0A1F  3000               	movlw	0
  3810  0A20  07AA               	addwf	(compara@comparar+1)^(0+128),f
  3811  0A21  082A               	movf	(compara@comparar+1)^(0+128),w
  3812  0A22  3A80               	xorlw	128
  3813  0A23  00FF               	movwf	127
  3814  0A24  3080               	movlw	128
  3815  0A25  027F               	subwf	127,w
  3816  0A26  1D03               	skipz
  3817  0A27  2A2A               	goto	u4035
  3818  0A28  3005               	movlw	5
  3819  0A29  0229               	subwf	compara@comparar^(0+128),w
  3820  0A2A                     u4035:	
  3821  0A2A  1C03               	skipc
  3822  0A2B  2993               	goto	l3616
  3823                           
  3824                           ;main_sync.c: 308: };main_sync.c: 309: };main_sync.c: 310: int comp;;main_sync.c: 311: f
      +                          or(comp=0; comp<5; comp+=2)
  3825  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  3826  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  3827  0A2E  01AB               	clrf	compara@comp^(0+128)
  3828  0A2F  01AC               	clrf	(compara@comp+1)^(0+128)
  3829  0A30                     l3632:	
  3830                           
  3831                           ;main_sync.c: 312: {;main_sync.c: 313: if (((getEEPROM(comp) << 8) + getEEPROM(comp+1)) 
      +                          == ((getEEPROM(comp+100) << 8) + getEEPROM(comp + 101)))
  3832  0A30  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0A31  1303               	bcf	3,6	;RP1=0, select bank1
  3834  0A32  082B               	movf	compara@comp^(0+128),w
  3835  0A33  3E65               	addlw	101
  3836  0A34  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3837  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  3838  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  3839  0A3B  00A5               	movwf	??_compara^(0+128)
  3840  0A3C  082B               	movf	compara@comp^(0+128),w
  3841  0A3D  3E64               	addlw	100
  3842  0A3E  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3843  0A43  1683               	bsf	3,5	;RP0=1, select bank1
  3844  0A44  1303               	bcf	3,6	;RP1=0, select bank1
  3845  0A45  00A6               	movwf	(??_compara+1)^(0+128)
  3846  0A46  082B               	movf	compara@comp^(0+128),w
  3847  0A47  3E01               	addlw	1
  3848  0A48  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3849  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  3850  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  3851  0A4F  00A7               	movwf	(??_compara+2)^(0+128)
  3852  0A50  082B               	movf	compara@comp^(0+128),w
  3853  0A51  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3854  0A56  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0A57  1303               	bcf	3,6	;RP1=0, select bank1
  3856  0A58  00A8               	movwf	(??_compara+3)^(0+128)
  3857  0A59  0826               	movf	(??_compara+1)^(0+128),w
  3858  0A5A  0628               	xorwf	(??_compara+3)^(0+128),w
  3859  0A5B  1D03               	skipz
  3860  0A5C  2A5F               	goto	u4045
  3861  0A5D  0825               	movf	??_compara^(0+128),w
  3862  0A5E  0627               	xorwf	(??_compara+2)^(0+128),w
  3863  0A5F                     u4045:	
  3864  0A5F  1D03               	skipz
  3865  0A60  2AB3               	goto	l3644
  3866                           
  3867                           ;main_sync.c: 314: {;main_sync.c: 315: if (((getEEPROM(comp) << 8) + (getEEPROM(comp+1))
      +                          ) == ((getEEPROM(comp+200) << 8) + (getEEPROM(comp+201))))
  3868  0A61  082B               	movf	compara@comp^(0+128),w
  3869  0A62  3EC9               	addlw	201
  3870  0A63  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3871  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  3872  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  3873  0A6A  00A5               	movwf	??_compara^(0+128)
  3874  0A6B  082B               	movf	compara@comp^(0+128),w
  3875  0A6C  3EC8               	addlw	200
  3876  0A6D  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3877  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  3878  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  3879  0A74  00A6               	movwf	(??_compara+1)^(0+128)
  3880  0A75  082B               	movf	compara@comp^(0+128),w
  3881  0A76  3E01               	addlw	1
  3882  0A77  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3883  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  3884  0A7D  1303               	bcf	3,6	;RP1=0, select bank1
  3885  0A7E  00A7               	movwf	(??_compara+2)^(0+128)
  3886  0A7F  082B               	movf	compara@comp^(0+128),w
  3887  0A80  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3888  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  3889  0A86  1303               	bcf	3,6	;RP1=0, select bank1
  3890  0A87  00A8               	movwf	(??_compara+3)^(0+128)
  3891  0A88  0826               	movf	(??_compara+1)^(0+128),w
  3892  0A89  0628               	xorwf	(??_compara+3)^(0+128),w
  3893  0A8A  1D03               	skipz
  3894  0A8B  2A8E               	goto	u4055
  3895  0A8C  0825               	movf	??_compara^(0+128),w
  3896  0A8D  0627               	xorwf	(??_compara+2)^(0+128),w
  3897  0A8E                     u4055:	
  3898  0A8E  1903               	btfsc	3,2
  3899  0A8F  2B5C               	goto	l3654
  3900                           
  3901                           ;main_sync.c: 319: else;main_sync.c: 320: {;main_sync.c: 321: setEEPROM((comp+200), getE
      +                          EPROM(comp));
  3902  0A90  082B               	movf	compara@comp^(0+128),w
  3903  0A91  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3904  0A96  1683               	bsf	3,5	;RP0=1, select bank1
  3905  0A97  1303               	bcf	3,6	;RP1=0, select bank1
  3906  0A98  00A5               	movwf	??_compara^(0+128)
  3907  0A99  0825               	movf	??_compara^(0+128),w
  3908  0A9A  00A3               	movwf	setEEPROM@valor^(0+128)
  3909  0A9B  082B               	movf	compara@comp^(0+128),w
  3910  0A9C  3EC8               	addlw	200
  3911  0A9D  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  3912                           
  3913                           ;main_sync.c: 322: setEEPROM((comp+201), getEEPROM(comp+1));
  3914  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0AA4  082B               	movf	compara@comp^(0+128),w
  3917  0AA5  3E01               	addlw	1
  3918  0AA6  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3919  0AAB  1683               	bsf	3,5	;RP0=1, select bank1
  3920  0AAC  1303               	bcf	3,6	;RP1=0, select bank1
  3921  0AAD  00A5               	movwf	??_compara^(0+128)
  3922  0AAE  0825               	movf	??_compara^(0+128),w
  3923  0AAF  00A3               	movwf	setEEPROM@valor^(0+128)
  3924  0AB0  082B               	movf	compara@comp^(0+128),w
  3925  0AB1  3EC9               	addlw	201
  3926  0AB2  2B57               	goto	L3
  3927  0AB3                     l3644:	
  3928                           
  3929                           ;main_sync.c: 326: else if (((getEEPROM(comp+100) << 8) + (getEEPROM(comp+101))) == ((ge
      +                          tEEPROM(comp+200) << 8) + (getEEPROM(comp+201))))
  3930  0AB3  082B               	movf	compara@comp^(0+128),w
  3931  0AB4  3EC9               	addlw	201
  3932  0AB5  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3933  0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  3934  0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  3935  0ABC  00A5               	movwf	??_compara^(0+128)
  3936  0ABD  082B               	movf	compara@comp^(0+128),w
  3937  0ABE  3EC8               	addlw	200
  3938  0ABF  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3939  0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  3940  0AC5  1303               	bcf	3,6	;RP1=0, select bank1
  3941  0AC6  00A6               	movwf	(??_compara+1)^(0+128)
  3942  0AC7  082B               	movf	compara@comp^(0+128),w
  3943  0AC8  3E65               	addlw	101
  3944  0AC9  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3945  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  3946  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  3947  0AD0  00A7               	movwf	(??_compara+2)^(0+128)
  3948  0AD1  082B               	movf	compara@comp^(0+128),w
  3949  0AD2  3E64               	addlw	100
  3950  0AD3  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3951  0AD8  1683               	bsf	3,5	;RP0=1, select bank1
  3952  0AD9  1303               	bcf	3,6	;RP1=0, select bank1
  3953  0ADA  00A8               	movwf	(??_compara+3)^(0+128)
  3954  0ADB  0826               	movf	(??_compara+1)^(0+128),w
  3955  0ADC  0628               	xorwf	(??_compara+3)^(0+128),w
  3956  0ADD  1D03               	skipz
  3957  0ADE  2AE1               	goto	u4065
  3958  0ADF  0825               	movf	??_compara^(0+128),w
  3959  0AE0  0627               	xorwf	(??_compara+2)^(0+128),w
  3960  0AE1                     u4065:	
  3961  0AE1  1D03               	skipz
  3962  0AE2  2B06               	goto	l3650
  3963                           
  3964                           ;main_sync.c: 327: {;main_sync.c: 328: setEEPROM(comp, getEEPROM(comp+100));
  3965  0AE3  082B               	movf	compara@comp^(0+128),w
  3966  0AE4  3E64               	addlw	100
  3967  0AE5  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3968  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  3969  0AEB  1303               	bcf	3,6	;RP1=0, select bank1
  3970  0AEC  00A5               	movwf	??_compara^(0+128)
  3971  0AED  0825               	movf	??_compara^(0+128),w
  3972  0AEE  00A3               	movwf	setEEPROM@valor^(0+128)
  3973  0AEF  082B               	movf	compara@comp^(0+128),w
  3974  0AF0  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  3975                           
  3976                           ;main_sync.c: 329: setEEPROM((comp+1), getEEPROM(comp+101));
  3977  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0AF6  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0AF7  082B               	movf	compara@comp^(0+128),w
  3980  0AF8  3E65               	addlw	101
  3981  0AF9  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3982  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  3983  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  3984  0B00  00A5               	movwf	??_compara^(0+128)
  3985  0B01  0825               	movf	??_compara^(0+128),w
  3986  0B02  00A3               	movwf	setEEPROM@valor^(0+128)
  3987  0B03  082B               	movf	compara@comp^(0+128),w
  3988  0B04  3E01               	addlw	1
  3989  0B05  2B57               	goto	L3
  3990  0B06                     l3650:	
  3991                           ;main_sync.c: 330: continue;
  3992                           
  3993                           
  3994                           ;main_sync.c: 332: else if (((getEEPROM(comp) << 8) + (getEEPROM(comp+1))) == ((getEEPRO
      +                          M(comp+200) << 8) + (getEEPROM(comp+201))))
  3995  0B06  082B               	movf	compara@comp^(0+128),w
  3996  0B07  3EC9               	addlw	201
  3997  0B08  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  3998  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  4000  0B0F  00A5               	movwf	??_compara^(0+128)
  4001  0B10  082B               	movf	compara@comp^(0+128),w
  4002  0B11  3EC8               	addlw	200
  4003  0B12  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  4004  0B17  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0B18  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0B19  00A6               	movwf	(??_compara+1)^(0+128)
  4007  0B1A  082B               	movf	compara@comp^(0+128),w
  4008  0B1B  3E01               	addlw	1
  4009  0B1C  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  4010  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  4011  0B22  1303               	bcf	3,6	;RP1=0, select bank1
  4012  0B23  00A7               	movwf	(??_compara+2)^(0+128)
  4013  0B24  082B               	movf	compara@comp^(0+128),w
  4014  0B25  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  4015  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  4016  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  4017  0B2C  00A8               	movwf	(??_compara+3)^(0+128)
  4018  0B2D  0826               	movf	(??_compara+1)^(0+128),w
  4019  0B2E  0628               	xorwf	(??_compara+3)^(0+128),w
  4020  0B2F  1D03               	skipz
  4021  0B30  2B33               	goto	u4075
  4022  0B31  0825               	movf	??_compara^(0+128),w
  4023  0B32  0627               	xorwf	(??_compara+2)^(0+128),w
  4024  0B33                     u4075:	
  4025  0B33  1D03               	skipz
  4026  0B34  2B5C               	goto	l3654
  4027                           
  4028                           ;main_sync.c: 333: {;main_sync.c: 334: setEEPROM(comp+100, getEEPROM(comp));
  4029  0B35  082B               	movf	compara@comp^(0+128),w
  4030  0B36  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  4031  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  4032  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  4033  0B3D  00A5               	movwf	??_compara^(0+128)
  4034  0B3E  0825               	movf	??_compara^(0+128),w
  4035  0B3F  00A3               	movwf	setEEPROM@valor^(0+128)
  4036  0B40  082B               	movf	compara@comp^(0+128),w
  4037  0B41  3E64               	addlw	100
  4038  0B42  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  4039                           
  4040                           ;main_sync.c: 335: setEEPROM(comp+101, getEEPROM(comp+1));
  4041  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  4042  0B48  1303               	bcf	3,6	;RP1=0, select bank1
  4043  0B49  082B               	movf	compara@comp^(0+128),w
  4044  0B4A  3E01               	addlw	1
  4045  0B4B  160A  158A  220F  120A  158A  	fcall	_getEEPROM
  4046  0B50  1683               	bsf	3,5	;RP0=1, select bank1
  4047  0B51  1303               	bcf	3,6	;RP1=0, select bank1
  4048  0B52  00A5               	movwf	??_compara^(0+128)
  4049  0B53  0825               	movf	??_compara^(0+128),w
  4050  0B54  00A3               	movwf	setEEPROM@valor^(0+128)
  4051  0B55  082B               	movf	compara@comp^(0+128),w
  4052  0B56  3E65               	addlw	101
  4053  0B57                     L3:	
  4054  0B57  160A  158A  226E  120A  158A  	fcall	_setEEPROM
  4055  0B5C                     l3654:	
  4056                           ;main_sync.c: 336: continue;
  4057                           
  4058  0B5C  3002               	movlw	2
  4059  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  4060  0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  4061  0B5F  07AB               	addwf	compara@comp^(0+128),f
  4062  0B60  1803               	skipnc
  4063  0B61  0AAC               	incf	(compara@comp+1)^(0+128),f
  4064  0B62  3000               	movlw	0
  4065  0B63  07AC               	addwf	(compara@comp+1)^(0+128),f
  4066  0B64  082C               	movf	(compara@comp+1)^(0+128),w
  4067  0B65  3A80               	xorlw	128
  4068  0B66  00FF               	movwf	127
  4069  0B67  3080               	movlw	128
  4070  0B68  027F               	subwf	127,w
  4071  0B69  1D03               	skipz
  4072  0B6A  2B6D               	goto	u4085
  4073  0B6B  3005               	movlw	5
  4074  0B6C  022B               	subwf	compara@comp^(0+128),w
  4075  0B6D                     u4085:	
  4076  0B6D  1803               	btfsc	3,0
  4077  0B6E  0008               	return
  4078  0B6F  2A30               	goto	l3632
  4079  0B70                     __end_of_compara:	
  4080                           
  4081                           	psect	text8
  4082  1A6E                     __ptext8:	
  4083 ;; *************** function _setEEPROM *****************
  4084 ;; Defined at:
  4085 ;;		line 829 in file "main_sync.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  addr            1    wreg     unsigned char 
  4088 ;;  valor           1    3[BANK1 ] unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  addr            1    4[BANK1 ] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       1       0       0
  4101 ;;      Locals:         0       0       1       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       0       2       0       0
  4104 ;;Total ram usage:        2 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    5
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_compara
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _setEEPROM
  4116  1A6E                     _setEEPROM:	
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _setEEPROM: [wreg]
  4120                           ;setEEPROM@addr stored from wreg
  4121  1A6E  1683               	bsf	3,5	;RP0=1, select bank1
  4122  1A6F  1303               	bcf	3,6	;RP1=0, select bank1
  4123  1A70  00A4               	movwf	setEEPROM@addr^(0+128)
  4124                           
  4125                           ;main_sync.c: 831: RP0 = 0;
  4126  1A71  1283               	bcf	3,5	;RP0=0, select bank0
  4127  1A72  1303               	bcf	3,6	;RP1=0, select bank0
  4128  1A73  1283               	bcf	3,5	;volatile
  4129                           
  4130                           ;main_sync.c: 832: RP1 = 0;
  4131  1A74  1303               	bcf	3,6	;volatile
  4132                           
  4133                           ;main_sync.c: 833: EEADR = addr;
  4134  1A75  1683               	bsf	3,5	;RP0=1, select bank1
  4135  1A76  1303               	bcf	3,6	;RP1=0, select bank1
  4136  1A77  0824               	movf	setEEPROM@addr^(0+128),w
  4137  1A78  1283               	bcf	3,5	;RP0=0, select bank2
  4138  1A79  1703               	bsf	3,6	;RP1=1, select bank2
  4139  1A7A  008D               	movwf	13	;volatile
  4140                           
  4141                           ;main_sync.c: 834: EEDAT = valor;
  4142  1A7B  1683               	bsf	3,5	;RP0=1, select bank1
  4143  1A7C  1303               	bcf	3,6	;RP1=0, select bank1
  4144  1A7D  0823               	movf	setEEPROM@valor^(0+128),w
  4145  1A7E  1283               	bcf	3,5	;RP0=0, select bank2
  4146  1A7F  1703               	bsf	3,6	;RP1=1, select bank2
  4147  1A80  008C               	movwf	12	;volatile
  4148                           
  4149                           ;main_sync.c: 835: EEPGD = 0;
  4150  1A81  1683               	bsf	3,5	;RP0=1, select bank3
  4151  1A82  1703               	bsf	3,6	;RP1=1, select bank3
  4152  1A83  138C               	bcf	12,7	;volsfr
  4153                           
  4154                           ;main_sync.c: 836: WREN = 1;
  4155  1A84  150C               	bsf	12,2	;volsfr
  4156                           
  4157                           ;main_sync.c: 837: INTCONbits.GIE = 0;
  4158  1A85  138B               	bcf	11,7	;volatile
  4159                           
  4160                           ;main_sync.c: 838: EECON2 = 0x55;
  4161  1A86  3055               	movlw	85
  4162  1A87  008D               	movwf	13	;volsfr
  4163                           
  4164                           ;main_sync.c: 839: EECON2 = 0xAA;
  4165  1A88  30AA               	movlw	170
  4166  1A89  008D               	movwf	13	;volsfr
  4167                           
  4168                           ;main_sync.c: 840: WR = 1;
  4169  1A8A  148C               	bsf	12,1	;volsfr
  4170  1A8B                     l443:	
  4171                           ;main_sync.c: 842: while(WR);
  4172                           
  4173  1A8B  188C               	btfsc	12,1	;volsfr
  4174  1A8C  2A8B               	goto	l443
  4175                           
  4176                           ;main_sync.c: 844: INTCONbits.GIE = 1;
  4177  1A8D  178B               	bsf	11,7	;volatile
  4178                           
  4179                           ;main_sync.c: 845: WREN = 0;
  4180  1A8E  110C               	bcf	12,2	;volsfr
  4181  1A8F  0008               	return
  4182  1A90                     __end_of_setEEPROM:	
  4183                           
  4184                           	psect	text9
  4185  1A0F                     __ptext9:	
  4186 ;; *************** function _getEEPROM *****************
  4187 ;; Defined at:
  4188 ;;		line 815 in file "main_sync.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  c               1    wreg     unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  c               1    1[BANK1 ] unsigned char 
  4193 ;;  aux             1    2[BANK1 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      unsigned char 
  4196 ;; Registers used:
  4197 ;;		wreg
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       0       0       0       0
  4204 ;;      Locals:         0       0       2       0       0
  4205 ;;      Temps:          0       0       1       0       0
  4206 ;;      Totals:         0       0       3       0       0
  4207 ;;Total ram usage:        3 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    5
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_main
  4214 ;;		_compara
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _getEEPROM
  4220  1A0F                     _getEEPROM:	
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in _getEEPROM: [wreg]
  4224                           ;getEEPROM@c stored from wreg
  4225  1A0F  1683               	bsf	3,5	;RP0=1, select bank1
  4226  1A10  1303               	bcf	3,6	;RP1=0, select bank1
  4227  1A11  00A1               	movwf	getEEPROM@c^(0+128)
  4228                           
  4229                           ;main_sync.c: 817: uint8_t aux;;main_sync.c: 819: RP0 = 0;
  4230  1A12  1283               	bcf	3,5	;RP0=0, select bank0
  4231  1A13  1303               	bcf	3,6	;RP1=0, select bank0
  4232  1A14  1283               	bcf	3,5	;volatile
  4233                           
  4234                           ;main_sync.c: 820: RP1 = 0;
  4235  1A15  1303               	bcf	3,6	;volatile
  4236                           
  4237                           ;main_sync.c: 821: EEADR = c;
  4238  1A16  1683               	bsf	3,5	;RP0=1, select bank1
  4239  1A17  1303               	bcf	3,6	;RP1=0, select bank1
  4240  1A18  0821               	movf	getEEPROM@c^(0+128),w
  4241  1A19  1283               	bcf	3,5	;RP0=0, select bank2
  4242  1A1A  1703               	bsf	3,6	;RP1=1, select bank2
  4243  1A1B  008D               	movwf	13	;volatile
  4244                           
  4245                           ;main_sync.c: 822: EEPGD = 0;
  4246  1A1C  1683               	bsf	3,5	;RP0=1, select bank3
  4247  1A1D  1703               	bsf	3,6	;RP1=1, select bank3
  4248  1A1E  138C               	bcf	12,7	;volsfr
  4249                           
  4250                           ;main_sync.c: 823: RD = 1;
  4251  1A1F  140C               	bsf	12,0	;volsfr
  4252  1A20                     l437:	
  4253                           ;main_sync.c: 824: while(RD);
  4254                           
  4255  1A20  180C               	btfsc	12,0	;volsfr
  4256  1A21  2A20               	goto	l437
  4257                           
  4258                           ;main_sync.c: 825: aux = EEDAT;
  4259  1A22  1283               	bcf	3,5	;RP0=0, select bank2
  4260  1A23  1703               	bsf	3,6	;RP1=1, select bank2
  4261  1A24  080C               	movf	12,w	;volatile
  4262  1A25  1683               	bsf	3,5	;RP0=1, select bank1
  4263  1A26  1303               	bcf	3,6	;RP1=0, select bank1
  4264  1A27  00A0               	movwf	??_getEEPROM^(0+128)
  4265  1A28  0820               	movf	??_getEEPROM^(0+128),w
  4266  1A29  00A2               	movwf	getEEPROM@aux^(0+128)
  4267                           
  4268                           ;main_sync.c: 826: return aux;
  4269  1A2A  0822               	movf	getEEPROM@aux^(0+128),w
  4270  1A2B  0008               	return
  4271  1A2C                     __end_of_getEEPROM:	
  4272                           
  4273                           	psect	text10
  4274  1BD0                     __ptext10:	
  4275 ;; *************** function _ad *****************
  4276 ;; Defined at:
  4277 ;;		line 793 in file "main_sync.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  _AD1            2   10[BANK1 ] unsigned int 
  4282 ;;  _AD0            2    8[BANK1 ] unsigned int 
  4283 ;;  _AD             2    6[BANK1 ] unsigned int 
  4284 ;;  aux             2    0        unsigned int 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  2    0[BANK1 ] unsigned int 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4294 ;;      Params:         0       0       2       0       0
  4295 ;;      Locals:         0       0       8       0       0
  4296 ;;      Temps:          0       0       2       0       0
  4297 ;;      Totals:         0       0      12       0       0
  4298 ;;Total ram usage:       12 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    5
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           
  4309                           ;psect for function _ad
  4310  1BD0                     _ad:	
  4311                           
  4312                           ;main_sync.c: 795: uint16_t _AD, _AD0, _AD1, aux;;main_sync.c: 797: PORTDbits.RD0 = 1;
  4313                           
  4314                           ;incstack = 0
  4315                           ; Regs used in _ad: [wreg+status,2+status,0]
  4316  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
  4317  1BD1  1303               	bcf	3,6	;RP1=0, select bank0
  4318  1BD2  1408               	bsf	8,0	;volatile
  4319  1BD3  0000               	nop	;# 
  4320  1BD4  0000               	nop	;# 
  4321  1BD5  0000               	nop	;# 
  4322  1BD6  0000               	nop	;# 
  4323                           
  4324                           ;main_sync.c: 802: PORTDbits.RD0 = 0;
  4325  1BD7  1283               	bcf	3,5	;RP0=0, select bank0
  4326  1BD8  1303               	bcf	3,6	;RP1=0, select bank0
  4327  1BD9  1008               	bcf	8,0	;volatile
  4328                           
  4329                           ;main_sync.c: 803: SSPBUF = 0;
  4330  1BDA  0193               	clrf	19	;volatile
  4331  1BDB  0813               	movf	19,w	;volatile
  4332  1BDC                     l428:	
  4333                           ;main_sync.c: 805: while (!BF);
  4334                           
  4335  1BDC  1683               	bsf	3,5	;RP0=1, select bank1
  4336  1BDD  1303               	bcf	3,6	;RP1=0, select bank1
  4337  1BDE  1C14               	btfss	20,0	;volatile
  4338  1BDF  2BDC               	goto	l428
  4339                           
  4340                           ;main_sync.c: 806: _AD0 = SSPBUF;
  4341  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  4342  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  4343  1BE2  0813               	movf	19,w	;volatile
  4344  1BE3  1683               	bsf	3,5	;RP0=1, select bank1
  4345  1BE4  1303               	bcf	3,6	;RP1=0, select bank1
  4346  1BE5  00A2               	movwf	??_ad^(0+128)
  4347  1BE6  01A3               	clrf	(??_ad^(0+128)+1)
  4348  1BE7  0822               	movf	??_ad^(0+128),w
  4349  1BE8  00A8               	movwf	ad@_AD0^(0+128)
  4350  1BE9  0823               	movf	(??_ad+1)^(0+128),w
  4351  1BEA  00A9               	movwf	(ad@_AD0+1)^(0+128)
  4352                           
  4353                           ;main_sync.c: 807: SSPBUF = 0;
  4354  1BEB  1283               	bcf	3,5	;RP0=0, select bank0
  4355  1BEC  1303               	bcf	3,6	;RP1=0, select bank0
  4356  1BED  0193               	clrf	19	;volatile
  4357  1BEE  0813               	movf	19,w	;volatile
  4358  1BEF                     l431:	
  4359                           ;main_sync.c: 809: while (!BF);
  4360                           
  4361  1BEF  1683               	bsf	3,5	;RP0=1, select bank1
  4362  1BF0  1303               	bcf	3,6	;RP1=0, select bank1
  4363  1BF1  1C14               	btfss	20,0	;volatile
  4364  1BF2  2BEF               	goto	l431
  4365                           
  4366                           ;main_sync.c: 810: _AD1 = SSPBUF;
  4367  1BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4368  1BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4369  1BF5  0813               	movf	19,w	;volatile
  4370  1BF6  1683               	bsf	3,5	;RP0=1, select bank1
  4371  1BF7  1303               	bcf	3,6	;RP1=0, select bank1
  4372  1BF8  00A2               	movwf	??_ad^(0+128)
  4373  1BF9  01A3               	clrf	(??_ad^(0+128)+1)
  4374  1BFA  0822               	movf	??_ad^(0+128),w
  4375  1BFB  00AA               	movwf	ad@_AD1^(0+128)
  4376  1BFC  0823               	movf	(??_ad+1)^(0+128),w
  4377  1BFD  00AB               	movwf	(ad@_AD1+1)^(0+128)
  4378                           
  4379                           ;main_sync.c: 811: _AD = (_AD0 << 8) + _AD1;
  4380  1BFE  0828               	movf	ad@_AD0^(0+128),w
  4381  1BFF  00A3               	movwf	(??_ad^(0+128)+1)
  4382  1C00  01A2               	clrf	??_ad^(0+128)
  4383  1C01  082A               	movf	ad@_AD1^(0+128),w
  4384  1C02  0722               	addwf	??_ad^(0+128),w
  4385  1C03  00A6               	movwf	ad@_AD^(0+128)
  4386  1C04  082B               	movf	(ad@_AD1+1)^(0+128),w
  4387  1C05  1803               	skipnc
  4388  1C06  0A2B               	incf	(ad@_AD1+1)^(0+128),w
  4389  1C07  0723               	addwf	(??_ad+1)^(0+128),w
  4390  1C08  00A7               	movwf	(ad@_AD+1)^(0+128)
  4391                           
  4392                           ;main_sync.c: 812: return _AD;
  4393  1C09  0827               	movf	(ad@_AD+1)^(0+128),w
  4394  1C0A  00A1               	movwf	(?_ad+1)^(0+128)
  4395  1C0B  0826               	movf	ad@_AD^(0+128),w
  4396  1C0C  00A0               	movwf	?_ad^(0+128)
  4397  1C0D  0008               	return
  4398  1C0E                     __end_of_ad:	
  4399                           
  4400                           	psect	text11
  4401  1A4D                     __ptext11:	
  4402 ;; *************** function ___ftsub *****************
  4403 ;; Defined at:
  4404 ;;		line 17 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftsub.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  f2              3   43[BANK1 ] float 
  4407 ;;  f1              3   46[BANK1 ] float 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  3   43[BANK1 ] float 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, pclath, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         0       0       6       0       0
  4420 ;;      Locals:         0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         0       0       6       0       0
  4423 ;;Total ram usage:        6 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    7
  4426 ;; This function calls:
  4427 ;;		___ftadd
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function ___ftsub
  4435  1A4D                     ___ftsub:	
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4439  1A4D  1683               	bsf	3,5	;RP0=1, select bank1
  4440  1A4E  1303               	bcf	3,6	;RP1=0, select bank1
  4441  1A4F  084D               	movf	(___ftsub@f2+2)^(0+128),w
  4442  1A50  044C               	iorwf	(___ftsub@f2+1)^(0+128),w
  4443  1A51  044B               	iorwf	___ftsub@f2^(0+128),w
  4444  1A52  1903               	skipnz
  4445  1A53  2A56               	goto	l4212
  4446  1A54  3080               	movlw	128
  4447  1A55  06CD               	xorwf	(___ftsub@f2+2)^(0+128),f
  4448  1A56                     l4212:	
  4449  1A56  084E               	movf	___ftsub@f1^(0+128),w
  4450  1A57  00AE               	movwf	___ftadd@f1^(0+128)
  4451  1A58  084F               	movf	(___ftsub@f1+1)^(0+128),w
  4452  1A59  00AF               	movwf	(___ftadd@f1+1)^(0+128)
  4453  1A5A  0850               	movf	(___ftsub@f1+2)^(0+128),w
  4454  1A5B  00B0               	movwf	(___ftadd@f1+2)^(0+128)
  4455  1A5C  084B               	movf	___ftsub@f2^(0+128),w
  4456  1A5D  00B1               	movwf	___ftadd@f2^(0+128)
  4457  1A5E  084C               	movf	(___ftsub@f2+1)^(0+128),w
  4458  1A5F  00B2               	movwf	(___ftadd@f2+1)^(0+128)
  4459  1A60  084D               	movf	(___ftsub@f2+2)^(0+128),w
  4460  1A61  00B3               	movwf	(___ftadd@f2+2)^(0+128)
  4461  1A62  120A  158A  2086   	fcall	___ftadd
  4462  1A65  1683               	bsf	3,5	;RP0=1, select bank1
  4463  1A66  1303               	bcf	3,6	;RP1=0, select bank1
  4464  1A67  082E               	movf	?___ftadd^(0+128),w
  4465  1A68  00CB               	movwf	?___ftsub^(0+128)
  4466  1A69  082F               	movf	(?___ftadd+1)^(0+128),w
  4467  1A6A  00CC               	movwf	(?___ftsub+1)^(0+128)
  4468  1A6B  0830               	movf	(?___ftadd+2)^(0+128),w
  4469  1A6C  00CD               	movwf	(?___ftsub+2)^(0+128)
  4470  1A6D  0008               	return
  4471  1A6E                     __end_of___ftsub:	
  4472                           
  4473                           	psect	text12
  4474  0886                     __ptext12:	
  4475 ;; *************** function ___ftadd *****************
  4476 ;; Defined at:
  4477 ;;		line 86 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftadd.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  f1              3   14[BANK1 ] float 
  4480 ;;  f2              3   17[BANK1 ] float 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  exp1            1   26[BANK1 ] unsigned char 
  4483 ;;  exp2            1   25[BANK1 ] unsigned char 
  4484 ;;  sign            1   24[BANK1 ] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  3   14[BANK1 ] float 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       0       6       0       0
  4495 ;;      Locals:         0       0       3       0       0
  4496 ;;      Temps:          0       0       4       0       0
  4497 ;;      Totals:         0       0      13       0       0
  4498 ;;Total ram usage:       13 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    6
  4501 ;; This function calls:
  4502 ;;		___ftpack
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;;		___ftsub
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function ___ftadd
  4511  0886                     ___ftadd:	
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4515  0886  1683               	bsf	3,5	;RP0=1, select bank1
  4516  0887  1303               	bcf	3,6	;RP1=0, select bank1
  4517  0888  082E               	movf	___ftadd@f1^(0+128),w
  4518  0889  00B4               	movwf	??___ftadd^(0+128)
  4519  088A  082F               	movf	(___ftadd@f1+1)^(0+128),w
  4520  088B  00B5               	movwf	(??___ftadd^(0+128)+1)
  4521  088C  0830               	movf	(___ftadd@f1+2)^(0+128),w
  4522  088D  00B6               	movwf	(??___ftadd^(0+128)+2)
  4523  088E  1003               	clrc
  4524  088F  0D35               	rlf	(??___ftadd^(0+128)+1),w
  4525  0890  0D36               	rlf	(??___ftadd^(0+128)+2),w
  4526  0891  00B7               	movwf	(??___ftadd+3)^(0+128)
  4527  0892  0837               	movf	(??___ftadd+3)^(0+128),w
  4528  0893  00BA               	movwf	___ftadd@exp1^(0+128)
  4529  0894  0831               	movf	___ftadd@f2^(0+128),w
  4530  0895  00B4               	movwf	??___ftadd^(0+128)
  4531  0896  0832               	movf	(___ftadd@f2+1)^(0+128),w
  4532  0897  00B5               	movwf	(??___ftadd^(0+128)+1)
  4533  0898  0833               	movf	(___ftadd@f2+2)^(0+128),w
  4534  0899  00B6               	movwf	(??___ftadd^(0+128)+2)
  4535  089A  1003               	clrc
  4536  089B  0D35               	rlf	(??___ftadd^(0+128)+1),w
  4537  089C  0D36               	rlf	(??___ftadd^(0+128)+2),w
  4538  089D  00B7               	movwf	(??___ftadd+3)^(0+128)
  4539  089E  0837               	movf	(??___ftadd+3)^(0+128),w
  4540  089F  00B9               	movwf	___ftadd@exp2^(0+128)
  4541  08A0  083A               	movf	___ftadd@exp1^(0+128),w
  4542  08A1  1903               	btfsc	3,2
  4543  08A2  28AF               	goto	l3444
  4544  08A3  0839               	movf	___ftadd@exp2^(0+128),w
  4545  08A4  023A               	subwf	___ftadd@exp1^(0+128),w
  4546  08A5  1803               	skipnc
  4547  08A6  28B6               	goto	l3448
  4548  08A7  0839               	movf	___ftadd@exp2^(0+128),w
  4549  08A8  00B4               	movwf	??___ftadd^(0+128)
  4550  08A9  083A               	movf	___ftadd@exp1^(0+128),w
  4551  08AA  02B4               	subwf	??___ftadd^(0+128),f
  4552  08AB  3019               	movlw	25
  4553  08AC  0234               	subwf	??___ftadd^(0+128),w
  4554  08AD  1C03               	skipc
  4555  08AE  28B6               	goto	l3448
  4556  08AF                     l3444:	
  4557  08AF  0831               	movf	___ftadd@f2^(0+128),w
  4558  08B0  00AE               	movwf	?___ftadd^(0+128)
  4559  08B1  0832               	movf	(___ftadd@f2+1)^(0+128),w
  4560  08B2  00AF               	movwf	(?___ftadd+1)^(0+128)
  4561  08B3  0833               	movf	(___ftadd@f2+2)^(0+128),w
  4562  08B4  00B0               	movwf	(?___ftadd+2)^(0+128)
  4563  08B5  0008               	return
  4564  08B6                     l3448:	
  4565  08B6  0839               	movf	___ftadd@exp2^(0+128),w
  4566  08B7  1903               	btfsc	3,2
  4567  08B8  0008               	return
  4568  08B9  083A               	movf	___ftadd@exp1^(0+128),w
  4569  08BA  0239               	subwf	___ftadd@exp2^(0+128),w
  4570  08BB  1803               	skipnc
  4571  08BC  28C5               	goto	l3454
  4572  08BD  083A               	movf	___ftadd@exp1^(0+128),w
  4573  08BE  00B4               	movwf	??___ftadd^(0+128)
  4574  08BF  0839               	movf	___ftadd@exp2^(0+128),w
  4575  08C0  02B4               	subwf	??___ftadd^(0+128),f
  4576  08C1  3019               	movlw	25
  4577  08C2  0234               	subwf	??___ftadd^(0+128),w
  4578  08C3  1803               	btfsc	3,0
  4579  08C4  0008               	return
  4580  08C5                     l3454:	
  4581  08C5  3006               	movlw	6
  4582  08C6  00B4               	movwf	??___ftadd^(0+128)
  4583  08C7  0834               	movf	??___ftadd^(0+128),w
  4584  08C8  00B8               	movwf	___ftadd@sign^(0+128)
  4585  08C9  1BB0               	btfsc	(___ftadd@f1+2)^(0+128),7
  4586  08CA  17B8               	bsf	___ftadd@sign^(0+128),7
  4587  08CB  1BB3               	btfsc	(___ftadd@f2+2)^(0+128),7
  4588  08CC  1738               	bsf	___ftadd@sign^(0+128),6
  4589  08CD  17AF               	bsf	(___ftadd@f1^(0+128)+1),7
  4590  08CE  30FF               	movlw	255
  4591  08CF  05AE               	andwf	___ftadd@f1^(0+128),f
  4592  08D0  30FF               	movlw	255
  4593  08D1  05AF               	andwf	(___ftadd@f1+1)^(0+128),f
  4594  08D2  3000               	movlw	0
  4595  08D3  05B0               	andwf	(___ftadd@f1+2)^(0+128),f
  4596  08D4  17B2               	bsf	(___ftadd@f2^(0+128)+1),7
  4597  08D5  30FF               	movlw	255
  4598  08D6  05B1               	andwf	___ftadd@f2^(0+128),f
  4599  08D7  30FF               	movlw	255
  4600  08D8  05B2               	andwf	(___ftadd@f2+1)^(0+128),f
  4601  08D9  3000               	movlw	0
  4602  08DA  05B3               	andwf	(___ftadd@f2+2)^(0+128),f
  4603  08DB  0839               	movf	___ftadd@exp2^(0+128),w
  4604  08DC  023A               	subwf	___ftadd@exp1^(0+128),w
  4605  08DD  1803               	skipnc
  4606  08DE  2905               	goto	l3476
  4607  08DF                     l3466:	
  4608  08DF  3001               	movlw	1
  4609  08E0                     u3815:	
  4610  08E0  1003               	clrc
  4611  08E1  0DB1               	rlf	___ftadd@f2^(0+128),f
  4612  08E2  0DB2               	rlf	(___ftadd@f2+1)^(0+128),f
  4613  08E3  0DB3               	rlf	(___ftadd@f2+2)^(0+128),f
  4614  08E4  3EFF               	addlw	-1
  4615  08E5  1D03               	skipz
  4616  08E6  28E0               	goto	u3815
  4617  08E7  3001               	movlw	1
  4618  08E8  02B9               	subwf	___ftadd@exp2^(0+128),f
  4619  08E9  0839               	movf	___ftadd@exp2^(0+128),w
  4620  08EA  063A               	xorwf	___ftadd@exp1^(0+128),w
  4621  08EB  1903               	skipnz
  4622  08EC  2900               	goto	l3474
  4623  08ED  3001               	movlw	1
  4624  08EE  02B8               	subwf	___ftadd@sign^(0+128),f
  4625  08EF  0838               	movf	___ftadd@sign^(0+128),w
  4626  08F0  3907               	andlw	7
  4627  08F1  1903               	btfsc	3,2
  4628  08F2  2900               	goto	l3474
  4629  08F3  28DF               	goto	l3466
  4630  08F4                     l3472:	
  4631  08F4  3001               	movlw	1
  4632  08F5                     u3845:	
  4633  08F5  1003               	clrc
  4634  08F6  0CB0               	rrf	(___ftadd@f1+2)^(0+128),f
  4635  08F7  0CAF               	rrf	(___ftadd@f1+1)^(0+128),f
  4636  08F8  0CAE               	rrf	___ftadd@f1^(0+128),f
  4637  08F9  3EFF               	addlw	-1
  4638  08FA  1D03               	skipz
  4639  08FB  28F5               	goto	u3845
  4640  08FC  3001               	movlw	1
  4641  08FD  00B4               	movwf	??___ftadd^(0+128)
  4642  08FE  0834               	movf	??___ftadd^(0+128),w
  4643  08FF  07BA               	addwf	___ftadd@exp1^(0+128),f
  4644  0900                     l3474:	
  4645  0900  083A               	movf	___ftadd@exp1^(0+128),w
  4646  0901  0639               	xorwf	___ftadd@exp2^(0+128),w
  4647  0902  1903               	btfsc	3,2
  4648  0903  292E               	goto	l830
  4649  0904  28F4               	goto	l3472
  4650  0905                     l3476:	
  4651  0905  083A               	movf	___ftadd@exp1^(0+128),w
  4652  0906  0239               	subwf	___ftadd@exp2^(0+128),w
  4653  0907  1803               	skipnc
  4654  0908  292E               	goto	l830
  4655  0909                     l3478:	
  4656  0909  3001               	movlw	1
  4657  090A                     u3875:	
  4658  090A  1003               	clrc
  4659  090B  0DAE               	rlf	___ftadd@f1^(0+128),f
  4660  090C  0DAF               	rlf	(___ftadd@f1+1)^(0+128),f
  4661  090D  0DB0               	rlf	(___ftadd@f1+2)^(0+128),f
  4662  090E  3EFF               	addlw	-1
  4663  090F  1D03               	skipz
  4664  0910  290A               	goto	u3875
  4665  0911  3001               	movlw	1
  4666  0912  02BA               	subwf	___ftadd@exp1^(0+128),f
  4667  0913  0839               	movf	___ftadd@exp2^(0+128),w
  4668  0914  063A               	xorwf	___ftadd@exp1^(0+128),w
  4669  0915  1903               	skipnz
  4670  0916  292A               	goto	l3486
  4671  0917  3001               	movlw	1
  4672  0918  02B8               	subwf	___ftadd@sign^(0+128),f
  4673  0919  0838               	movf	___ftadd@sign^(0+128),w
  4674  091A  3907               	andlw	7
  4675  091B  1903               	btfsc	3,2
  4676  091C  292A               	goto	l3486
  4677  091D  2909               	goto	l3478
  4678  091E                     l3484:	
  4679  091E  3001               	movlw	1
  4680  091F                     u3905:	
  4681  091F  1003               	clrc
  4682  0920  0CB3               	rrf	(___ftadd@f2+2)^(0+128),f
  4683  0921  0CB2               	rrf	(___ftadd@f2+1)^(0+128),f
  4684  0922  0CB1               	rrf	___ftadd@f2^(0+128),f
  4685  0923  3EFF               	addlw	-1
  4686  0924  1D03               	skipz
  4687  0925  291F               	goto	u3905
  4688  0926  3001               	movlw	1
  4689  0927  00B4               	movwf	??___ftadd^(0+128)
  4690  0928  0834               	movf	??___ftadd^(0+128),w
  4691  0929  07B9               	addwf	___ftadd@exp2^(0+128),f
  4692  092A                     l3486:	
  4693  092A  083A               	movf	___ftadd@exp1^(0+128),w
  4694  092B  0639               	xorwf	___ftadd@exp2^(0+128),w
  4695  092C  1D03               	skipz
  4696  092D  291E               	goto	l3484
  4697  092E                     l830:	
  4698  092E  1FB8               	btfss	___ftadd@sign^(0+128),7
  4699  092F  2940               	goto	l3490
  4700  0930  30FF               	movlw	255
  4701  0931  06AE               	xorwf	___ftadd@f1^(0+128),f
  4702  0932  30FF               	movlw	255
  4703  0933  06AF               	xorwf	(___ftadd@f1+1)^(0+128),f
  4704  0934  30FF               	movlw	255
  4705  0935  06B0               	xorwf	(___ftadd@f1+2)^(0+128),f
  4706  0936  3001               	movlw	1
  4707  0937  07AE               	addwf	___ftadd@f1^(0+128),f
  4708  0938  3000               	movlw	0
  4709  0939  1803               	skipnc
  4710  093A  3001               	movlw	1
  4711  093B  07AF               	addwf	(___ftadd@f1+1)^(0+128),f
  4712  093C  3000               	movlw	0
  4713  093D  1803               	skipnc
  4714  093E  3001               	movlw	1
  4715  093F  07B0               	addwf	(___ftadd@f1+2)^(0+128),f
  4716  0940                     l3490:	
  4717  0940  1F38               	btfss	___ftadd@sign^(0+128),6
  4718  0941  2952               	goto	l3494
  4719  0942  30FF               	movlw	255
  4720  0943  06B1               	xorwf	___ftadd@f2^(0+128),f
  4721  0944  30FF               	movlw	255
  4722  0945  06B2               	xorwf	(___ftadd@f2+1)^(0+128),f
  4723  0946  30FF               	movlw	255
  4724  0947  06B3               	xorwf	(___ftadd@f2+2)^(0+128),f
  4725  0948  3001               	movlw	1
  4726  0949  07B1               	addwf	___ftadd@f2^(0+128),f
  4727  094A  3000               	movlw	0
  4728  094B  1803               	skipnc
  4729  094C  3001               	movlw	1
  4730  094D  07B2               	addwf	(___ftadd@f2+1)^(0+128),f
  4731  094E  3000               	movlw	0
  4732  094F  1803               	skipnc
  4733  0950  3001               	movlw	1
  4734  0951  07B3               	addwf	(___ftadd@f2+2)^(0+128),f
  4735  0952                     l3494:	
  4736  0952  01B8               	clrf	___ftadd@sign^(0+128)
  4737  0953  082E               	movf	___ftadd@f1^(0+128),w
  4738  0954  07B1               	addwf	___ftadd@f2^(0+128),f
  4739  0955  082F               	movf	(___ftadd@f1+1)^(0+128),w
  4740  0956  1103               	clrz
  4741  0957  1803               	skipnc
  4742  0958  0A2F               	incf	(___ftadd@f1+1)^(0+128),w
  4743  0959  1D03               	btfss	3,2
  4744  095A  07B2               	addwf	(___ftadd@f2+1)^(0+128),f
  4745  095B  0830               	movf	(___ftadd@f1+2)^(0+128),w
  4746  095C  1103               	clrz
  4747  095D  1803               	skipnc
  4748  095E  0A30               	incf	(___ftadd@f1+2)^(0+128),w
  4749  095F  1D03               	btfss	3,2
  4750  0960  07B3               	addwf	(___ftadd@f2+2)^(0+128),f
  4751  0961  1FB3               	btfss	(___ftadd@f2+2)^(0+128),7
  4752  0962  2975               	goto	l3504
  4753  0963  30FF               	movlw	255
  4754  0964  06B1               	xorwf	___ftadd@f2^(0+128),f
  4755  0965  30FF               	movlw	255
  4756  0966  06B2               	xorwf	(___ftadd@f2+1)^(0+128),f
  4757  0967  30FF               	movlw	255
  4758  0968  06B3               	xorwf	(___ftadd@f2+2)^(0+128),f
  4759  0969  3001               	movlw	1
  4760  096A  07B1               	addwf	___ftadd@f2^(0+128),f
  4761  096B  3000               	movlw	0
  4762  096C  1803               	skipnc
  4763  096D  3001               	movlw	1
  4764  096E  07B2               	addwf	(___ftadd@f2+1)^(0+128),f
  4765  096F  3000               	movlw	0
  4766  0970  1803               	skipnc
  4767  0971  3001               	movlw	1
  4768  0972  07B3               	addwf	(___ftadd@f2+2)^(0+128),f
  4769  0973  01B8               	clrf	___ftadd@sign^(0+128)
  4770  0974  0AB8               	incf	___ftadd@sign^(0+128),f
  4771  0975                     l3504:	
  4772  0975  0831               	movf	___ftadd@f2^(0+128),w
  4773  0976  00A0               	movwf	___ftpack@arg^(0+128)
  4774  0977  0832               	movf	(___ftadd@f2+1)^(0+128),w
  4775  0978  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  4776  0979  0833               	movf	(___ftadd@f2+2)^(0+128),w
  4777  097A  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  4778  097B  083A               	movf	___ftadd@exp1^(0+128),w
  4779  097C  00B4               	movwf	??___ftadd^(0+128)
  4780  097D  0834               	movf	??___ftadd^(0+128),w
  4781  097E  00A3               	movwf	___ftpack@exp^(0+128)
  4782  097F  0838               	movf	___ftadd@sign^(0+128),w
  4783  0980  00B5               	movwf	(??___ftadd+1)^(0+128)
  4784  0981  0835               	movf	(??___ftadd+1)^(0+128),w
  4785  0982  00A4               	movwf	___ftpack@sign^(0+128)
  4786  0983  160A  158A  2656   	fcall	___ftpack
  4787  0986  1683               	bsf	3,5	;RP0=1, select bank1
  4788  0987  1303               	bcf	3,6	;RP1=0, select bank1
  4789  0988  0820               	movf	?___ftpack^(0+128),w
  4790  0989  00AE               	movwf	?___ftadd^(0+128)
  4791  098A  0821               	movf	(?___ftpack+1)^(0+128),w
  4792  098B  00AF               	movwf	(?___ftadd+1)^(0+128)
  4793  098C  0822               	movf	(?___ftpack+2)^(0+128),w
  4794  098D  00B0               	movwf	(?___ftadd+2)^(0+128)
  4795  098E  0008               	return
  4796  098F                     __end_of___ftadd:	
  4797                           
  4798                           	psect	text13
  4799  12C3                     __ptext13:	
  4800 ;; *************** function ___ftmul *****************
  4801 ;; Defined at:
  4802 ;;		line 62 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftmul.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  f1              3   49[BANK1 ] float 
  4805 ;;  f2              3   52[BANK1 ] float 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  f3_as_produc    3   60[BANK1 ] unsigned um
  4808 ;;  sign            1   64[BANK1 ] unsigned char 
  4809 ;;  cntr            1   63[BANK1 ] unsigned char 
  4810 ;;  exp             1   59[BANK1 ] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  3   49[BANK1 ] float 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       6       0       0
  4821 ;;      Locals:         0       0       6       0       0
  4822 ;;      Temps:          0       0       4       0       0
  4823 ;;      Totals:         0       0      16       0       0
  4824 ;;Total ram usage:       16 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    6
  4827 ;; This function calls:
  4828 ;;		___ftpack
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function ___ftmul
  4836  12C3                     ___ftmul:	
  4837                           
  4838                           ;incstack = 0
  4839                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4840  12C3  1683               	bsf	3,5	;RP0=1, select bank1
  4841  12C4  1303               	bcf	3,6	;RP1=0, select bank1
  4842  12C5  0851               	movf	___ftmul@f1^(0+128),w
  4843  12C6  00D7               	movwf	??___ftmul^(0+128)
  4844  12C7  0852               	movf	(___ftmul@f1+1)^(0+128),w
  4845  12C8  00D8               	movwf	(??___ftmul^(0+128)+1)
  4846  12C9  0853               	movf	(___ftmul@f1+2)^(0+128),w
  4847  12CA  00D9               	movwf	(??___ftmul^(0+128)+2)
  4848  12CB  1003               	clrc
  4849  12CC  0D58               	rlf	(??___ftmul^(0+128)+1),w
  4850  12CD  0D59               	rlf	(??___ftmul^(0+128)+2),w
  4851  12CE  00DA               	movwf	(??___ftmul+3)^(0+128)
  4852  12CF  085A               	movf	(??___ftmul+3)^(0+128),w
  4853  12D0  00DB               	movwf	___ftmul@exp^(0+128)
  4854  12D1  085B               	movf	___ftmul@exp^(0+128),w
  4855  12D2  1D03               	btfss	3,2
  4856  12D3  2ADB               	goto	l4164
  4857  12D4  3000               	movlw	0
  4858  12D5  00D1               	movwf	?___ftmul^(0+128)
  4859  12D6  3000               	movlw	0
  4860  12D7  00D2               	movwf	(?___ftmul+1)^(0+128)
  4861  12D8  3000               	movlw	0
  4862  12D9  00D3               	movwf	(?___ftmul+2)^(0+128)
  4863  12DA  0008               	return
  4864  12DB                     l4164:	
  4865  12DB  0854               	movf	___ftmul@f2^(0+128),w
  4866  12DC  00D7               	movwf	??___ftmul^(0+128)
  4867  12DD  0855               	movf	(___ftmul@f2+1)^(0+128),w
  4868  12DE  00D8               	movwf	(??___ftmul^(0+128)+1)
  4869  12DF  0856               	movf	(___ftmul@f2+2)^(0+128),w
  4870  12E0  00D9               	movwf	(??___ftmul^(0+128)+2)
  4871  12E1  1003               	clrc
  4872  12E2  0D58               	rlf	(??___ftmul^(0+128)+1),w
  4873  12E3  0D59               	rlf	(??___ftmul^(0+128)+2),w
  4874  12E4  00DA               	movwf	(??___ftmul+3)^(0+128)
  4875  12E5  085A               	movf	(??___ftmul+3)^(0+128),w
  4876  12E6  00E0               	movwf	___ftmul@sign^(0+128)
  4877  12E7  0860               	movf	___ftmul@sign^(0+128),w
  4878  12E8  1D03               	btfss	3,2
  4879  12E9  2AF1               	goto	l4170
  4880  12EA  3000               	movlw	0
  4881  12EB  00D1               	movwf	?___ftmul^(0+128)
  4882  12EC  3000               	movlw	0
  4883  12ED  00D2               	movwf	(?___ftmul+1)^(0+128)
  4884  12EE  3000               	movlw	0
  4885  12EF  00D3               	movwf	(?___ftmul+2)^(0+128)
  4886  12F0  0008               	return
  4887  12F1                     l4170:	
  4888  12F1  0860               	movf	___ftmul@sign^(0+128),w
  4889  12F2  3E7B               	addlw	123
  4890  12F3  00D7               	movwf	??___ftmul^(0+128)
  4891  12F4  0857               	movf	??___ftmul^(0+128),w
  4892  12F5  07DB               	addwf	___ftmul@exp^(0+128),f
  4893  12F6  0851               	movf	___ftmul@f1^(0+128),w
  4894  12F7  00D7               	movwf	??___ftmul^(0+128)
  4895  12F8  0852               	movf	(___ftmul@f1+1)^(0+128),w
  4896  12F9  00D8               	movwf	(??___ftmul^(0+128)+1)
  4897  12FA  0853               	movf	(___ftmul@f1+2)^(0+128),w
  4898  12FB  00D9               	movwf	(??___ftmul^(0+128)+2)
  4899  12FC  3010               	movlw	16
  4900  12FD                     u4865:	
  4901  12FD  1003               	clrc
  4902  12FE  0CD9               	rrf	(??___ftmul^(0+128)+2),f
  4903  12FF  0CD8               	rrf	(??___ftmul^(0+128)+1),f
  4904  1300  0CD7               	rrf	??___ftmul^(0+128),f
  4905  1301  3EFF               	addlw	-1
  4906  1302  1D03               	skipz
  4907  1303  2AFD               	goto	u4865
  4908  1304  0857               	movf	??___ftmul^(0+128),w
  4909  1305  00DA               	movwf	(??___ftmul+3)^(0+128)
  4910  1306  085A               	movf	(??___ftmul+3)^(0+128),w
  4911  1307  00E0               	movwf	___ftmul@sign^(0+128)
  4912  1308  0854               	movf	___ftmul@f2^(0+128),w
  4913  1309  00D7               	movwf	??___ftmul^(0+128)
  4914  130A  0855               	movf	(___ftmul@f2+1)^(0+128),w
  4915  130B  00D8               	movwf	(??___ftmul^(0+128)+1)
  4916  130C  0856               	movf	(___ftmul@f2+2)^(0+128),w
  4917  130D  00D9               	movwf	(??___ftmul^(0+128)+2)
  4918  130E  3010               	movlw	16
  4919  130F                     u4875:	
  4920  130F  1003               	clrc
  4921  1310  0CD9               	rrf	(??___ftmul^(0+128)+2),f
  4922  1311  0CD8               	rrf	(??___ftmul^(0+128)+1),f
  4923  1312  0CD7               	rrf	??___ftmul^(0+128),f
  4924  1313  3EFF               	addlw	-1
  4925  1314  1D03               	skipz
  4926  1315  2B0F               	goto	u4875
  4927  1316  0857               	movf	??___ftmul^(0+128),w
  4928  1317  00DA               	movwf	(??___ftmul+3)^(0+128)
  4929  1318  085A               	movf	(??___ftmul+3)^(0+128),w
  4930  1319  06E0               	xorwf	___ftmul@sign^(0+128),f
  4931  131A  3080               	movlw	128
  4932  131B  00D7               	movwf	??___ftmul^(0+128)
  4933  131C  0857               	movf	??___ftmul^(0+128),w
  4934  131D  05E0               	andwf	___ftmul@sign^(0+128),f
  4935  131E  17D2               	bsf	(___ftmul@f1^(0+128)+1),7
  4936  131F  17D5               	bsf	(___ftmul@f2^(0+128)+1),7
  4937  1320  30FF               	movlw	255
  4938  1321  05D4               	andwf	___ftmul@f2^(0+128),f
  4939  1322  30FF               	movlw	255
  4940  1323  05D5               	andwf	(___ftmul@f2+1)^(0+128),f
  4941  1324  3000               	movlw	0
  4942  1325  05D6               	andwf	(___ftmul@f2+2)^(0+128),f
  4943  1326  3000               	movlw	0
  4944  1327  00DC               	movwf	___ftmul@f3_as_product^(0+128)
  4945  1328  3000               	movlw	0
  4946  1329  00DD               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  4947  132A  3000               	movlw	0
  4948  132B  00DE               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  4949  132C  3007               	movlw	7
  4950  132D  00D7               	movwf	??___ftmul^(0+128)
  4951  132E  0857               	movf	??___ftmul^(0+128),w
  4952  132F  00DF               	movwf	___ftmul@cntr^(0+128)
  4953  1330                     l4182:	
  4954  1330  1C51               	btfss	___ftmul@f1^(0+128),0
  4955  1331  2B40               	goto	l4186
  4956  1332  0854               	movf	___ftmul@f2^(0+128),w
  4957  1333  07DC               	addwf	___ftmul@f3_as_product^(0+128),f
  4958  1334  0855               	movf	(___ftmul@f2+1)^(0+128),w
  4959  1335  1103               	clrz
  4960  1336  1803               	skipnc
  4961  1337  0A55               	incf	(___ftmul@f2+1)^(0+128),w
  4962  1338  1D03               	btfss	3,2
  4963  1339  07DD               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  4964  133A  0856               	movf	(___ftmul@f2+2)^(0+128),w
  4965  133B  1103               	clrz
  4966  133C  1803               	skipnc
  4967  133D  0A56               	incf	(___ftmul@f2+2)^(0+128),w
  4968  133E  1D03               	btfss	3,2
  4969  133F  07DE               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  4970  1340                     l4186:	
  4971  1340  3001               	movlw	1
  4972  1341                     u4905:	
  4973  1341  1003               	clrc
  4974  1342  0CD3               	rrf	(___ftmul@f1+2)^(0+128),f
  4975  1343  0CD2               	rrf	(___ftmul@f1+1)^(0+128),f
  4976  1344  0CD1               	rrf	___ftmul@f1^(0+128),f
  4977  1345  3EFF               	addlw	-1
  4978  1346  1D03               	skipz
  4979  1347  2B41               	goto	u4905
  4980  1348  3001               	movlw	1
  4981  1349                     u4915:	
  4982  1349  1003               	clrc
  4983  134A  0DD4               	rlf	___ftmul@f2^(0+128),f
  4984  134B  0DD5               	rlf	(___ftmul@f2+1)^(0+128),f
  4985  134C  0DD6               	rlf	(___ftmul@f2+2)^(0+128),f
  4986  134D  3EFF               	addlw	-1
  4987  134E  1D03               	skipz
  4988  134F  2B49               	goto	u4915
  4989  1350  3001               	movlw	1
  4990  1351  02DF               	subwf	___ftmul@cntr^(0+128),f
  4991  1352  1D03               	btfss	3,2
  4992  1353  2B30               	goto	l4182
  4993  1354  3009               	movlw	9
  4994  1355  00D7               	movwf	??___ftmul^(0+128)
  4995  1356  0857               	movf	??___ftmul^(0+128),w
  4996  1357  00DF               	movwf	___ftmul@cntr^(0+128)
  4997  1358                     l4194:	
  4998  1358  1C51               	btfss	___ftmul@f1^(0+128),0
  4999  1359  2B68               	goto	l4198
  5000  135A  0854               	movf	___ftmul@f2^(0+128),w
  5001  135B  07DC               	addwf	___ftmul@f3_as_product^(0+128),f
  5002  135C  0855               	movf	(___ftmul@f2+1)^(0+128),w
  5003  135D  1103               	clrz
  5004  135E  1803               	skipnc
  5005  135F  0A55               	incf	(___ftmul@f2+1)^(0+128),w
  5006  1360  1D03               	btfss	3,2
  5007  1361  07DD               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  5008  1362  0856               	movf	(___ftmul@f2+2)^(0+128),w
  5009  1363  1103               	clrz
  5010  1364  1803               	skipnc
  5011  1365  0A56               	incf	(___ftmul@f2+2)^(0+128),w
  5012  1366  1D03               	btfss	3,2
  5013  1367  07DE               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  5014  1368                     l4198:	
  5015  1368  3001               	movlw	1
  5016  1369                     u4955:	
  5017  1369  1003               	clrc
  5018  136A  0CD3               	rrf	(___ftmul@f1+2)^(0+128),f
  5019  136B  0CD2               	rrf	(___ftmul@f1+1)^(0+128),f
  5020  136C  0CD1               	rrf	___ftmul@f1^(0+128),f
  5021  136D  3EFF               	addlw	-1
  5022  136E  1D03               	skipz
  5023  136F  2B69               	goto	u4955
  5024  1370  3001               	movlw	1
  5025  1371                     u4965:	
  5026  1371  1003               	clrc
  5027  1372  0CDE               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  5028  1373  0CDD               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  5029  1374  0CDC               	rrf	___ftmul@f3_as_product^(0+128),f
  5030  1375  3EFF               	addlw	-1
  5031  1376  1D03               	skipz
  5032  1377  2B71               	goto	u4965
  5033  1378  3001               	movlw	1
  5034  1379  02DF               	subwf	___ftmul@cntr^(0+128),f
  5035  137A  1D03               	btfss	3,2
  5036  137B  2B58               	goto	l4194
  5037  137C  085C               	movf	___ftmul@f3_as_product^(0+128),w
  5038  137D  00A0               	movwf	___ftpack@arg^(0+128)
  5039  137E  085D               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  5040  137F  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  5041  1380  085E               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  5042  1381  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  5043  1382  085B               	movf	___ftmul@exp^(0+128),w
  5044  1383  00D7               	movwf	??___ftmul^(0+128)
  5045  1384  0857               	movf	??___ftmul^(0+128),w
  5046  1385  00A3               	movwf	___ftpack@exp^(0+128)
  5047  1386  0860               	movf	___ftmul@sign^(0+128),w
  5048  1387  00D8               	movwf	(??___ftmul+1)^(0+128)
  5049  1388  0858               	movf	(??___ftmul+1)^(0+128),w
  5050  1389  00A4               	movwf	___ftpack@sign^(0+128)
  5051  138A  160A  158A  2656   	fcall	___ftpack
  5052  138D  1683               	bsf	3,5	;RP0=1, select bank1
  5053  138E  1303               	bcf	3,6	;RP1=0, select bank1
  5054  138F  0820               	movf	?___ftpack^(0+128),w
  5055  1390  00D1               	movwf	?___ftmul^(0+128)
  5056  1391  0821               	movf	(?___ftpack+1)^(0+128),w
  5057  1392  00D2               	movwf	(?___ftmul+1)^(0+128)
  5058  1393  0822               	movf	(?___ftpack+2)^(0+128),w
  5059  1394  00D3               	movwf	(?___ftmul+2)^(0+128)
  5060  1395  0008               	return
  5061  1396                     __end_of___ftmul:	
  5062                           
  5063                           	psect	text14
  5064  113A                     __ptext14:	
  5065 ;; *************** function ___ftdiv *****************
  5066 ;; Defined at:
  5067 ;;		line 56 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftdiv.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  f2              3   27[BANK1 ] float 
  5070 ;;  f1              3   30[BANK1 ] float 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  f3              3   38[BANK1 ] float 
  5073 ;;  sign            1   42[BANK1 ] unsigned char 
  5074 ;;  exp             1   41[BANK1 ] unsigned char 
  5075 ;;  cntr            1   37[BANK1 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  3   27[BANK1 ] float 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5085 ;;      Params:         0       0       6       0       0
  5086 ;;      Locals:         0       0       6       0       0
  5087 ;;      Temps:          0       0       4       0       0
  5088 ;;      Totals:         0       0      16       0       0
  5089 ;;Total ram usage:       16 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    6
  5092 ;; This function calls:
  5093 ;;		___ftpack
  5094 ;; This function is called by:
  5095 ;;		_main
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function ___ftdiv
  5101  113A                     ___ftdiv:	
  5102                           
  5103                           ;incstack = 0
  5104                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5105  113A  1683               	bsf	3,5	;RP0=1, select bank1
  5106  113B  1303               	bcf	3,6	;RP1=0, select bank1
  5107  113C  083E               	movf	___ftdiv@f1^(0+128),w
  5108  113D  00C1               	movwf	??___ftdiv^(0+128)
  5109  113E  083F               	movf	(___ftdiv@f1+1)^(0+128),w
  5110  113F  00C2               	movwf	(??___ftdiv^(0+128)+1)
  5111  1140  0840               	movf	(___ftdiv@f1+2)^(0+128),w
  5112  1141  00C3               	movwf	(??___ftdiv^(0+128)+2)
  5113  1142  1003               	clrc
  5114  1143  0D42               	rlf	(??___ftdiv^(0+128)+1),w
  5115  1144  0D43               	rlf	(??___ftdiv^(0+128)+2),w
  5116  1145  00C4               	movwf	(??___ftdiv+3)^(0+128)
  5117  1146  0844               	movf	(??___ftdiv+3)^(0+128),w
  5118  1147  00C9               	movwf	___ftdiv@exp^(0+128)
  5119  1148  0849               	movf	___ftdiv@exp^(0+128),w
  5120  1149  1D03               	btfss	3,2
  5121  114A  2952               	goto	l4122
  5122  114B  3000               	movlw	0
  5123  114C  00BB               	movwf	?___ftdiv^(0+128)
  5124  114D  3000               	movlw	0
  5125  114E  00BC               	movwf	(?___ftdiv+1)^(0+128)
  5126  114F  3000               	movlw	0
  5127  1150  00BD               	movwf	(?___ftdiv+2)^(0+128)
  5128  1151  0008               	return
  5129  1152                     l4122:	
  5130  1152  083B               	movf	___ftdiv@f2^(0+128),w
  5131  1153  00C1               	movwf	??___ftdiv^(0+128)
  5132  1154  083C               	movf	(___ftdiv@f2+1)^(0+128),w
  5133  1155  00C2               	movwf	(??___ftdiv^(0+128)+1)
  5134  1156  083D               	movf	(___ftdiv@f2+2)^(0+128),w
  5135  1157  00C3               	movwf	(??___ftdiv^(0+128)+2)
  5136  1158  1003               	clrc
  5137  1159  0D42               	rlf	(??___ftdiv^(0+128)+1),w
  5138  115A  0D43               	rlf	(??___ftdiv^(0+128)+2),w
  5139  115B  00C4               	movwf	(??___ftdiv+3)^(0+128)
  5140  115C  0844               	movf	(??___ftdiv+3)^(0+128),w
  5141  115D  00CA               	movwf	___ftdiv@sign^(0+128)
  5142  115E  084A               	movf	___ftdiv@sign^(0+128),w
  5143  115F  1D03               	btfss	3,2
  5144  1160  2968               	goto	l4128
  5145  1161  3000               	movlw	0
  5146  1162  00BB               	movwf	?___ftdiv^(0+128)
  5147  1163  3000               	movlw	0
  5148  1164  00BC               	movwf	(?___ftdiv+1)^(0+128)
  5149  1165  3000               	movlw	0
  5150  1166  00BD               	movwf	(?___ftdiv+2)^(0+128)
  5151  1167  0008               	return
  5152  1168                     l4128:	
  5153  1168  3000               	movlw	0
  5154  1169  00C6               	movwf	___ftdiv@f3^(0+128)
  5155  116A  3000               	movlw	0
  5156  116B  00C7               	movwf	(___ftdiv@f3+1)^(0+128)
  5157  116C  3000               	movlw	0
  5158  116D  00C8               	movwf	(___ftdiv@f3+2)^(0+128)
  5159  116E  3089               	movlw	137
  5160  116F  074A               	addwf	___ftdiv@sign^(0+128),w
  5161  1170  00C1               	movwf	??___ftdiv^(0+128)
  5162  1171  0841               	movf	??___ftdiv^(0+128),w
  5163  1172  02C9               	subwf	___ftdiv@exp^(0+128),f
  5164  1173  083E               	movf	___ftdiv@f1^(0+128),w
  5165  1174  00C1               	movwf	??___ftdiv^(0+128)
  5166  1175  083F               	movf	(___ftdiv@f1+1)^(0+128),w
  5167  1176  00C2               	movwf	(??___ftdiv^(0+128)+1)
  5168  1177  0840               	movf	(___ftdiv@f1+2)^(0+128),w
  5169  1178  00C3               	movwf	(??___ftdiv^(0+128)+2)
  5170  1179  3010               	movlw	16
  5171  117A                     u4785:	
  5172  117A  1003               	clrc
  5173  117B  0CC3               	rrf	(??___ftdiv^(0+128)+2),f
  5174  117C  0CC2               	rrf	(??___ftdiv^(0+128)+1),f
  5175  117D  0CC1               	rrf	??___ftdiv^(0+128),f
  5176  117E  3EFF               	addlw	-1
  5177  117F  1D03               	skipz
  5178  1180  297A               	goto	u4785
  5179  1181  0841               	movf	??___ftdiv^(0+128),w
  5180  1182  00C4               	movwf	(??___ftdiv+3)^(0+128)
  5181  1183  0844               	movf	(??___ftdiv+3)^(0+128),w
  5182  1184  00CA               	movwf	___ftdiv@sign^(0+128)
  5183  1185  083B               	movf	___ftdiv@f2^(0+128),w
  5184  1186  00C1               	movwf	??___ftdiv^(0+128)
  5185  1187  083C               	movf	(___ftdiv@f2+1)^(0+128),w
  5186  1188  00C2               	movwf	(??___ftdiv^(0+128)+1)
  5187  1189  083D               	movf	(___ftdiv@f2+2)^(0+128),w
  5188  118A  00C3               	movwf	(??___ftdiv^(0+128)+2)
  5189  118B  3010               	movlw	16
  5190  118C                     u4795:	
  5191  118C  1003               	clrc
  5192  118D  0CC3               	rrf	(??___ftdiv^(0+128)+2),f
  5193  118E  0CC2               	rrf	(??___ftdiv^(0+128)+1),f
  5194  118F  0CC1               	rrf	??___ftdiv^(0+128),f
  5195  1190  3EFF               	addlw	-1
  5196  1191  1D03               	skipz
  5197  1192  298C               	goto	u4795
  5198  1193  0841               	movf	??___ftdiv^(0+128),w
  5199  1194  00C4               	movwf	(??___ftdiv+3)^(0+128)
  5200  1195  0844               	movf	(??___ftdiv+3)^(0+128),w
  5201  1196  06CA               	xorwf	___ftdiv@sign^(0+128),f
  5202  1197  3080               	movlw	128
  5203  1198  00C1               	movwf	??___ftdiv^(0+128)
  5204  1199  0841               	movf	??___ftdiv^(0+128),w
  5205  119A  05CA               	andwf	___ftdiv@sign^(0+128),f
  5206  119B  17BF               	bsf	(___ftdiv@f1^(0+128)+1),7
  5207  119C  30FF               	movlw	255
  5208  119D  05BE               	andwf	___ftdiv@f1^(0+128),f
  5209  119E  30FF               	movlw	255
  5210  119F  05BF               	andwf	(___ftdiv@f1+1)^(0+128),f
  5211  11A0  3000               	movlw	0
  5212  11A1  05C0               	andwf	(___ftdiv@f1+2)^(0+128),f
  5213  11A2  17BC               	bsf	(___ftdiv@f2^(0+128)+1),7
  5214  11A3  30FF               	movlw	255
  5215  11A4  05BB               	andwf	___ftdiv@f2^(0+128),f
  5216  11A5  30FF               	movlw	255
  5217  11A6  05BC               	andwf	(___ftdiv@f2+1)^(0+128),f
  5218  11A7  3000               	movlw	0
  5219  11A8  05BD               	andwf	(___ftdiv@f2+2)^(0+128),f
  5220  11A9  3018               	movlw	24
  5221  11AA  00C1               	movwf	??___ftdiv^(0+128)
  5222  11AB  0841               	movf	??___ftdiv^(0+128),w
  5223  11AC  00C5               	movwf	___ftdiv@cntr^(0+128)
  5224  11AD                     l4142:	
  5225  11AD  3001               	movlw	1
  5226  11AE                     u4805:	
  5227  11AE  1003               	clrc
  5228  11AF  0DC6               	rlf	___ftdiv@f3^(0+128),f
  5229  11B0  0DC7               	rlf	(___ftdiv@f3+1)^(0+128),f
  5230  11B1  0DC8               	rlf	(___ftdiv@f3+2)^(0+128),f
  5231  11B2  3EFF               	addlw	-1
  5232  11B3  1D03               	skipz
  5233  11B4  29AE               	goto	u4805
  5234  11B5  083D               	movf	(___ftdiv@f2+2)^(0+128),w
  5235  11B6  0240               	subwf	(___ftdiv@f1+2)^(0+128),w
  5236  11B7  1D03               	skipz
  5237  11B8  29BF               	goto	u4815
  5238  11B9  083C               	movf	(___ftdiv@f2+1)^(0+128),w
  5239  11BA  023F               	subwf	(___ftdiv@f1+1)^(0+128),w
  5240  11BB  1D03               	skipz
  5241  11BC  29BF               	goto	u4815
  5242  11BD  083B               	movf	___ftdiv@f2^(0+128),w
  5243  11BE  023E               	subwf	___ftdiv@f1^(0+128),w
  5244  11BF                     u4815:	
  5245  11BF  1C03               	skipc
  5246  11C0  29CC               	goto	l4150
  5247  11C1  083B               	movf	___ftdiv@f2^(0+128),w
  5248  11C2  02BE               	subwf	___ftdiv@f1^(0+128),f
  5249  11C3  083C               	movf	(___ftdiv@f2+1)^(0+128),w
  5250  11C4  1C03               	skipc
  5251  11C5  0F3C               	incfsz	(___ftdiv@f2+1)^(0+128),w
  5252  11C6  02BF               	subwf	(___ftdiv@f1+1)^(0+128),f
  5253  11C7  083D               	movf	(___ftdiv@f2+2)^(0+128),w
  5254  11C8  1C03               	skipc
  5255  11C9  0A3D               	incf	(___ftdiv@f2+2)^(0+128),w
  5256  11CA  02C0               	subwf	(___ftdiv@f1+2)^(0+128),f
  5257  11CB  1446               	bsf	___ftdiv@f3^(0+128),0
  5258  11CC                     l4150:	
  5259  11CC  3001               	movlw	1
  5260  11CD                     u4825:	
  5261  11CD  1003               	clrc
  5262  11CE  0DBE               	rlf	___ftdiv@f1^(0+128),f
  5263  11CF  0DBF               	rlf	(___ftdiv@f1+1)^(0+128),f
  5264  11D0  0DC0               	rlf	(___ftdiv@f1+2)^(0+128),f
  5265  11D1  3EFF               	addlw	-1
  5266  11D2  1D03               	skipz
  5267  11D3  29CD               	goto	u4825
  5268  11D4  3001               	movlw	1
  5269  11D5  02C5               	subwf	___ftdiv@cntr^(0+128),f
  5270  11D6  1D03               	btfss	3,2
  5271  11D7  29AD               	goto	l4142
  5272  11D8  0846               	movf	___ftdiv@f3^(0+128),w
  5273  11D9  00A0               	movwf	___ftpack@arg^(0+128)
  5274  11DA  0847               	movf	(___ftdiv@f3+1)^(0+128),w
  5275  11DB  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  5276  11DC  0848               	movf	(___ftdiv@f3+2)^(0+128),w
  5277  11DD  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  5278  11DE  0849               	movf	___ftdiv@exp^(0+128),w
  5279  11DF  00C1               	movwf	??___ftdiv^(0+128)
  5280  11E0  0841               	movf	??___ftdiv^(0+128),w
  5281  11E1  00A3               	movwf	___ftpack@exp^(0+128)
  5282  11E2  084A               	movf	___ftdiv@sign^(0+128),w
  5283  11E3  00C2               	movwf	(??___ftdiv+1)^(0+128)
  5284  11E4  0842               	movf	(??___ftdiv+1)^(0+128),w
  5285  11E5  00A4               	movwf	___ftpack@sign^(0+128)
  5286  11E6  160A  158A  2656   	fcall	___ftpack
  5287  11E9  1683               	bsf	3,5	;RP0=1, select bank1
  5288  11EA  1303               	bcf	3,6	;RP1=0, select bank1
  5289  11EB  0820               	movf	?___ftpack^(0+128),w
  5290  11EC  00BB               	movwf	?___ftdiv^(0+128)
  5291  11ED  0821               	movf	(?___ftpack+1)^(0+128),w
  5292  11EE  00BC               	movwf	(?___ftdiv+1)^(0+128)
  5293  11EF  0822               	movf	(?___ftpack+2)^(0+128),w
  5294  11F0  00BD               	movwf	(?___ftdiv+2)^(0+128)
  5295  11F1  0008               	return
  5296  11F2                     __end_of___ftdiv:	
  5297                           
  5298                           	psect	text15
  5299  1000                     __ptext15:	
  5300 ;; *************** function ___bmul *****************
  5301 ;; Defined at:
  5302 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul8.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  multiplier      1    wreg     unsigned char 
  5305 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  multiplier      1    3[BANK1 ] unsigned char 
  5308 ;;  product         1    2[BANK1 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      unsigned char 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       0       1       0       0
  5319 ;;      Locals:         0       0       2       0       0
  5320 ;;      Temps:          0       0       1       0       0
  5321 ;;      Totals:         0       0       4       0       0
  5322 ;;Total ram usage:        4 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    5
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;;		_le_temp
  5330 ;;		_le_alpha
  5331 ;;		_escreve_alpha
  5332 ;;		_le_k
  5333 ;;		_escreve_k
  5334 ;;		_le_b
  5335 ;;		_escreve_b
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           
  5340                           ;psect for function ___bmul
  5341  1000                     ___bmul:	
  5342                           
  5343                           ;incstack = 0
  5344                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5345                           ;___bmul@multiplier stored from wreg
  5346  1000  1683               	bsf	3,5	;RP0=1, select bank1
  5347  1001  1303               	bcf	3,6	;RP1=0, select bank1
  5348  1002  00A3               	movwf	___bmul@multiplier^(0+128)
  5349  1003  01A2               	clrf	___bmul@product^(0+128)
  5350  1004                     l4092:	
  5351  1004  1C23               	btfss	___bmul@multiplier^(0+128),0
  5352  1005  280A               	goto	l4096
  5353  1006  0820               	movf	___bmul@multiplicand^(0+128),w
  5354  1007  00A1               	movwf	??___bmul^(0+128)
  5355  1008  0821               	movf	??___bmul^(0+128),w
  5356  1009  07A2               	addwf	___bmul@product^(0+128),f
  5357  100A                     l4096:	
  5358  100A  1003               	clrc
  5359  100B  0DA0               	rlf	___bmul@multiplicand^(0+128),f
  5360  100C  1003               	clrc
  5361  100D  0CA3               	rrf	___bmul@multiplier^(0+128),f
  5362  100E  0823               	movf	___bmul@multiplier^(0+128),w
  5363  100F  1D03               	btfss	3,2
  5364  1010  2804               	goto	l4092
  5365  1011  0822               	movf	___bmul@product^(0+128),w
  5366  1012  0008               	return
  5367  1013                     __end_of___bmul:	
  5368                           
  5369                           	psect	text16
  5370  1A90                     __ptext16:	
  5371 ;; *************** function ___awtoft *****************
  5372 ;; Defined at:
  5373 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awtoft.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  c               2    8[BANK1 ] int 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  sign            1   13[BANK1 ] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  3    8[BANK1 ] float 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0, pclath, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5387 ;;      Params:         0       0       3       0       0
  5388 ;;      Locals:         0       0       1       0       0
  5389 ;;      Temps:          0       0       2       0       0
  5390 ;;      Totals:         0       0       6       0       0
  5391 ;;Total ram usage:        6 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    6
  5394 ;; This function calls:
  5395 ;;		___ftpack
  5396 ;; This function is called by:
  5397 ;;		_main
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function ___awtoft
  5403  1A90                     ___awtoft:	
  5404                           
  5405                           ;incstack = 0
  5406                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5407  1A90  1683               	bsf	3,5	;RP0=1, select bank1
  5408  1A91  1303               	bcf	3,6	;RP1=0, select bank1
  5409  1A92  01AD               	clrf	___awtoft@sign^(0+128)
  5410  1A93  1FA9               	btfss	(___awtoft@c+1)^(0+128),7
  5411  1A94  2A9C               	goto	l4112
  5412  1A95  09A8               	comf	___awtoft@c^(0+128),f
  5413  1A96  09A9               	comf	(___awtoft@c+1)^(0+128),f
  5414  1A97  0AA8               	incf	___awtoft@c^(0+128),f
  5415  1A98  1903               	skipnz
  5416  1A99  0AA9               	incf	(___awtoft@c+1)^(0+128),f
  5417  1A9A  01AD               	clrf	___awtoft@sign^(0+128)
  5418  1A9B  0AAD               	incf	___awtoft@sign^(0+128),f
  5419  1A9C                     l4112:	
  5420  1A9C  0828               	movf	___awtoft@c^(0+128),w
  5421  1A9D  00A0               	movwf	___ftpack@arg^(0+128)
  5422  1A9E  0829               	movf	(___awtoft@c+1)^(0+128),w
  5423  1A9F  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  5424  1AA0  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  5425  1AA1  308E               	movlw	142
  5426  1AA2  00AB               	movwf	??___awtoft^(0+128)
  5427  1AA3  082B               	movf	??___awtoft^(0+128),w
  5428  1AA4  00A3               	movwf	___ftpack@exp^(0+128)
  5429  1AA5  082D               	movf	___awtoft@sign^(0+128),w
  5430  1AA6  00AC               	movwf	(??___awtoft+1)^(0+128)
  5431  1AA7  082C               	movf	(??___awtoft+1)^(0+128),w
  5432  1AA8  00A4               	movwf	___ftpack@sign^(0+128)
  5433  1AA9  160A  158A  2656   	fcall	___ftpack
  5434  1AAC  1683               	bsf	3,5	;RP0=1, select bank1
  5435  1AAD  1303               	bcf	3,6	;RP1=0, select bank1
  5436  1AAE  0820               	movf	?___ftpack^(0+128),w
  5437  1AAF  00A8               	movwf	?___awtoft^(0+128)
  5438  1AB0  0821               	movf	(?___ftpack+1)^(0+128),w
  5439  1AB1  00A9               	movwf	(?___awtoft+1)^(0+128)
  5440  1AB2  0822               	movf	(?___ftpack+2)^(0+128),w
  5441  1AB3  00AA               	movwf	(?___awtoft+2)^(0+128)
  5442  1AB4  0008               	return
  5443  1AB5                     __end_of___awtoft:	
  5444                           
  5445                           	psect	text17
  5446  1E56                     __ptext17:	
  5447 ;; *************** function ___ftpack *****************
  5448 ;; Defined at:
  5449 ;;		line 62 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/float.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  arg             3    0[BANK1 ] unsigned um
  5452 ;;  exp             1    3[BANK1 ] unsigned char 
  5453 ;;  sign            1    4[BANK1 ] unsigned char 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  3    0[BANK1 ] float 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5465 ;;      Params:         0       0       5       0       0
  5466 ;;      Locals:         0       0       0       0       0
  5467 ;;      Temps:          0       0       3       0       0
  5468 ;;      Totals:         0       0       8       0       0
  5469 ;;Total ram usage:        8 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; Hardware stack levels required when called:    5
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		___awtoft
  5476 ;;		___ftadd
  5477 ;;		___ftdiv
  5478 ;;		___ftmul
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function ___ftpack
  5484  1E56                     ___ftpack:	
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5488  1E56  1683               	bsf	3,5	;RP0=1, select bank1
  5489  1E57  1303               	bcf	3,6	;RP1=0, select bank1
  5490  1E58  0823               	movf	___ftpack@exp^(0+128),w
  5491  1E59  1903               	btfsc	3,2
  5492  1E5A  2E60               	goto	l3078
  5493  1E5B  0822               	movf	(___ftpack@arg+2)^(0+128),w
  5494  1E5C  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  5495  1E5D  0420               	iorwf	___ftpack@arg^(0+128),w
  5496  1E5E  1D03               	skipz
  5497  1E5F  2E73               	goto	l3084
  5498  1E60                     l3078:	
  5499  1E60  3000               	movlw	0
  5500  1E61  00A0               	movwf	?___ftpack^(0+128)
  5501  1E62  3000               	movlw	0
  5502  1E63  00A1               	movwf	(?___ftpack+1)^(0+128)
  5503  1E64  3000               	movlw	0
  5504  1E65  00A2               	movwf	(?___ftpack+2)^(0+128)
  5505  1E66  0008               	return
  5506  1E67                     l3082:	
  5507  1E67  3001               	movlw	1
  5508  1E68  00A5               	movwf	??___ftpack^(0+128)
  5509  1E69  0825               	movf	??___ftpack^(0+128),w
  5510  1E6A  07A3               	addwf	___ftpack@exp^(0+128),f
  5511  1E6B  3001               	movlw	1
  5512  1E6C                     u3075:	
  5513  1E6C  1003               	clrc
  5514  1E6D  0CA2               	rrf	(___ftpack@arg+2)^(0+128),f
  5515  1E6E  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  5516  1E6F  0CA0               	rrf	___ftpack@arg^(0+128),f
  5517  1E70  3EFF               	addlw	-1
  5518  1E71  1D03               	skipz
  5519  1E72  2E6C               	goto	u3075
  5520  1E73                     l3084:	
  5521  1E73  30FE               	movlw	254
  5522  1E74  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  5523  1E75  1903               	btfsc	3,2
  5524  1E76  2E8E               	goto	l799
  5525  1E77  2E67               	goto	l3082
  5526  1E78                     l3086:	
  5527  1E78  3001               	movlw	1
  5528  1E79  00A5               	movwf	??___ftpack^(0+128)
  5529  1E7A  0825               	movf	??___ftpack^(0+128),w
  5530  1E7B  07A3               	addwf	___ftpack@exp^(0+128),f
  5531  1E7C  3001               	movlw	1
  5532  1E7D  07A0               	addwf	___ftpack@arg^(0+128),f
  5533  1E7E  3000               	movlw	0
  5534  1E7F  1803               	skipnc
  5535  1E80  3001               	movlw	1
  5536  1E81  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  5537  1E82  3000               	movlw	0
  5538  1E83  1803               	skipnc
  5539  1E84  3001               	movlw	1
  5540  1E85  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  5541  1E86  3001               	movlw	1
  5542  1E87                     u3095:	
  5543  1E87  1003               	clrc
  5544  1E88  0CA2               	rrf	(___ftpack@arg+2)^(0+128),f
  5545  1E89  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  5546  1E8A  0CA0               	rrf	___ftpack@arg^(0+128),f
  5547  1E8B  3EFF               	addlw	-1
  5548  1E8C  1D03               	skipz
  5549  1E8D  2E87               	goto	u3095
  5550  1E8E                     l799:	
  5551  1E8E  30FF               	movlw	255
  5552  1E8F  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  5553  1E90  1903               	btfsc	3,2
  5554  1E91  2EA1               	goto	l3094
  5555  1E92  2E78               	goto	l3086
  5556  1E93                     l3096:	
  5557  1E93  3002               	movlw	2
  5558  1E94  0223               	subwf	___ftpack@exp^(0+128),w
  5559  1E95  1C03               	btfss	3,0
  5560  1E96  2EA3               	goto	l806
  5561  1E97  3001               	movlw	1
  5562  1E98  02A3               	subwf	___ftpack@exp^(0+128),f
  5563  1E99  3001               	movlw	1
  5564  1E9A                     u3115:	
  5565  1E9A  1003               	clrc
  5566  1E9B  0DA0               	rlf	___ftpack@arg^(0+128),f
  5567  1E9C  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  5568  1E9D  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  5569  1E9E  3EFF               	addlw	-1
  5570  1E9F  1D03               	skipz
  5571  1EA0  2E9A               	goto	u3115
  5572  1EA1                     l3094:	
  5573  1EA1  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  5574  1EA2  2E93               	goto	l3096
  5575  1EA3                     l806:	
  5576  1EA3  1823               	btfsc	___ftpack@exp^(0+128),0
  5577  1EA4  2EAB               	goto	l807
  5578  1EA5  30FF               	movlw	255
  5579  1EA6  05A0               	andwf	___ftpack@arg^(0+128),f
  5580  1EA7  307F               	movlw	127
  5581  1EA8  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  5582  1EA9  30FF               	movlw	255
  5583  1EAA  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  5584  1EAB                     l807:	
  5585  1EAB  1003               	clrc
  5586  1EAC  0CA3               	rrf	___ftpack@exp^(0+128),f
  5587  1EAD  0823               	movf	___ftpack@exp^(0+128),w
  5588  1EAE  00A5               	movwf	??___ftpack^(0+128)
  5589  1EAF  01A6               	clrf	(??___ftpack^(0+128)+1)
  5590  1EB0  01A7               	clrf	(??___ftpack^(0+128)+2)
  5591  1EB1  3010               	movlw	16
  5592  1EB2                     u3155:	
  5593  1EB2  1003               	clrc
  5594  1EB3  0DA5               	rlf	??___ftpack^(0+128),f
  5595  1EB4  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  5596  1EB5  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  5597  1EB6  3EFF               	addlw	-1
  5598  1EB7  1D03               	skipz
  5599  1EB8  2EB2               	goto	u3155
  5600  1EB9  0825               	movf	??___ftpack^(0+128),w
  5601  1EBA  04A0               	iorwf	___ftpack@arg^(0+128),f
  5602  1EBB  0826               	movf	(??___ftpack+1)^(0+128),w
  5603  1EBC  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  5604  1EBD  0827               	movf	(??___ftpack+2)^(0+128),w
  5605  1EBE  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  5606  1EBF  0824               	movf	___ftpack@sign^(0+128),w
  5607  1EC0  1903               	btfsc	3,2
  5608  1EC1  0008               	return
  5609  1EC2  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  5610  1EC3  0008               	return
  5611  1EC4                     __end_of___ftpack:	
  5612                           
  5613                           	psect	text18
  5614  1C4E                     __ptext18:	
  5615 ;; *************** function _SelectChannel *****************
  5616 ;; Defined at:
  5617 ;;		line 233 in file "main_sync.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  ch              2    0[BANK1 ] int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  2    0[BANK1 ] int 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5631 ;;      Params:         0       0       2       0       0
  5632 ;;      Locals:         0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0
  5634 ;;      Totals:         0       0       2       0       0
  5635 ;;Total ram usage:        2 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    5
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _SelectChannel
  5647  1C4E                     _SelectChannel:	
  5648                           
  5649                           ;main_sync.c: 234: switch (ch) {
  5650                           
  5651                           ;incstack = 0
  5652                           ; Regs used in _SelectChannel: [wreg-fsr0h+status,2+status,0]
  5653  1C4E  2C6A               	goto	l3674
  5654  1C4F                     l3660:	
  5655                           
  5656                           ;main_sync.c: 236: case 1:;main_sync.c: 237: return ch + 6;
  5657  1C4F  0820               	movf	SelectChannel@ch^(0+128),w
  5658  1C50  3E06               	addlw	6
  5659  1C51  00A0               	movwf	?_SelectChannel^(0+128)
  5660  1C52  0821               	movf	(SelectChannel@ch+1)^(0+128),w
  5661  1C53  1803               	skipnc
  5662  1C54  3E01               	addlw	1
  5663  1C55  3E00               	addlw	0
  5664  1C56  00A1               	movwf	(?_SelectChannel+1)^(0+128)
  5665  1C57  0008               	return
  5666  1C58                     l3664:	
  5667                           
  5668                           ;main_sync.c: 239: case 3:;main_sync.c: 240: return ch - 2;
  5669  1C58  0820               	movf	SelectChannel@ch^(0+128),w
  5670  1C59  3EFE               	addlw	254
  5671  1C5A  00A0               	movwf	?_SelectChannel^(0+128)
  5672  1C5B  0821               	movf	(SelectChannel@ch+1)^(0+128),w
  5673  1C5C  1803               	skipnc
  5674  1C5D  3E01               	addlw	1
  5675  1C5E  3EFF               	addlw	255
  5676  1C5F  00A1               	movwf	(?_SelectChannel+1)^(0+128)
  5677  1C60                     l228:	
  5678                           
  5679                           ;main_sync.c: 242: case 5:;main_sync.c: 243: return ch;
  5680  1C60  0008               	return
  5681  1C61                     l3668:	
  5682                           
  5683                           ;main_sync.c: 245: case 7:;main_sync.c: 246: return ch - 4;
  5684  1C61  0820               	movf	SelectChannel@ch^(0+128),w
  5685  1C62  3EFC               	addlw	252
  5686  1C63  00A0               	movwf	?_SelectChannel^(0+128)
  5687  1C64  0821               	movf	(SelectChannel@ch+1)^(0+128),w
  5688  1C65  1803               	skipnc
  5689  1C66  3E01               	addlw	1
  5690  1C67  3EFF               	addlw	255
  5691  1C68  00A1               	movwf	(?_SelectChannel+1)^(0+128)
  5692  1C69  0008               	return
  5693  1C6A                     l3674:	
  5694                           
  5695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5696                           ; Switch size 1, requested type "simple"
  5697                           ; Number of cases is 1, Range of values is 0 to 0
  5698                           ; switch strategies available:
  5699                           ; Name         Instructions Cycles
  5700                           ; simple_byte            4     3 (average)
  5701                           ; direct_byte           11     8 (fixed)
  5702                           ; jumptable            260     6 (fixed)
  5703                           ;	Chosen strategy is simple_byte
  5704  1C6A  1683               	bsf	3,5	;RP0=1, select bank1
  5705  1C6B  1303               	bcf	3,6	;RP1=0, select bank1
  5706  1C6C  0821               	movf	(SelectChannel@ch+1)^(0+128),w
  5707  1C6D  3A00               	xorlw	0	; case 0
  5708  1C6E  1903               	skipnz
  5709  1C6F  2C71               	goto	l4512
  5710  1C70  2C8B               	goto	l3676
  5711  1C71                     l4512:	
  5712                           
  5713                           ; Switch size 1, requested type "simple"
  5714                           ; Number of cases is 8, Range of values is 0 to 7
  5715                           ; switch strategies available:
  5716                           ; Name         Instructions Cycles
  5717                           ; simple_byte           25    13 (average)
  5718                           ; direct_byte           32     8 (fixed)
  5719                           ; jumptable            260     6 (fixed)
  5720                           ;	Chosen strategy is simple_byte
  5721  1C71  0820               	movf	SelectChannel@ch^(0+128),w
  5722  1C72  3A00               	xorlw	0	; case 0
  5723  1C73  1903               	skipnz
  5724  1C74  2C4F               	goto	l3660
  5725  1C75  3A01               	xorlw	1	; case 1
  5726  1C76  1903               	skipnz
  5727  1C77  2C4F               	goto	l3660
  5728  1C78  3A03               	xorlw	3	; case 2
  5729  1C79  1903               	skipnz
  5730  1C7A  2C58               	goto	l3664
  5731  1C7B  3A01               	xorlw	1	; case 3
  5732  1C7C  1903               	skipnz
  5733  1C7D  2C58               	goto	l3664
  5734  1C7E  3A07               	xorlw	7	; case 4
  5735  1C7F  1903               	skipnz
  5736  1C80  2C60               	goto	l228
  5737  1C81  3A01               	xorlw	1	; case 5
  5738  1C82  1903               	skipnz
  5739  1C83  2C60               	goto	l228
  5740  1C84  3A03               	xorlw	3	; case 6
  5741  1C85  1903               	skipnz
  5742  1C86  2C61               	goto	l3668
  5743  1C87  3A01               	xorlw	1	; case 7
  5744  1C88  1903               	skipnz
  5745  1C89  2C61               	goto	l3668
  5746  1C8A  2C8B               	goto	l3676
  5747  1C8B                     l3676:	
  5748                           
  5749                           ;main_sync.c: 248: return 0;
  5750  1C8B  01A0               	clrf	?_SelectChannel^(0+128)
  5751  1C8C  01A1               	clrf	(?_SelectChannel+1)^(0+128)
  5752  1C8D  0008               	return
  5753  1C8E                     __end_of_SelectChannel:	
  5754                           
  5755                           	psect	text19
  5756  1C8E                     __ptext19:	
  5757 ;; *************** function _interruption *****************
  5758 ;; Defined at:
  5759 ;;		line 412 in file "main_sync.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  uByte           1   63[BANK0 ] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5773 ;;      Params:         0       0       0       0       0
  5774 ;;      Locals:         0       1       0       0       0
  5775 ;;      Temps:          0       6       0       0       0
  5776 ;;      Totals:         0       7       0       0       0
  5777 ;;Total ram usage:        7 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    4
  5780 ;; This function calls:
  5781 ;;		_enviar
  5782 ;;		_protocolo
  5783 ;; This function is called by:
  5784 ;;		Interrupt level 1
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _interruption
  5790  1C8E                     _interruption:	
  5791  1C8E                     i1l4460:	
  5792                           ;main_sync.c: 414: char uByte;;main_sync.c: 415: while (RCIF) {
  5793                           
  5794  1C8E  1E8C               	btfss	12,5	;volatile
  5795  1C8F  2CA9               	goto	i1l265
  5796                           
  5797                           ;main_sync.c: 416: uByte = RCREG;
  5798  1C90  081A               	movf	26,w	;volatile
  5799  1C91  00D9               	movwf	??_interruption
  5800  1C92  0859               	movf	??_interruption,w
  5801  1C93  00DF               	movwf	interruption@uByte
  5802                           
  5803                           ;main_sync.c: 417: serial[recebidos] = uByte;
  5804  1C94  085F               	movf	interruption@uByte,w
  5805  1C95  00D9               	movwf	??_interruption
  5806  1C96  0860               	movf	_recebidos,w
  5807  1C97  3E20               	addlw	(low (_serial| (0+256)))& (0+255)
  5808  1C98  0084               	movwf	4
  5809  1C99  0859               	movf	??_interruption,w
  5810  1C9A  1783               	bsf	3,7	;select IRP bank2
  5811  1C9B  0080               	movwf	0
  5812                           
  5813                           ;main_sync.c: 418: cSum += uByte;
  5814  1C9C  085F               	movf	interruption@uByte,w
  5815  1C9D  00D9               	movwf	??_interruption
  5816  1C9E  0859               	movf	??_interruption,w
  5817  1C9F  07E1               	addwf	_cSum,f
  5818                           
  5819                           ;main_sync.c: 419: recebidos++;
  5820  1CA0  3001               	movlw	1
  5821  1CA1  00D9               	movwf	??_interruption
  5822  1CA2  0859               	movf	??_interruption,w
  5823  1CA3  07E0               	addwf	_recebidos,f
  5824                           
  5825                           ;main_sync.c: 420: TMR0 = 0x68;
  5826  1CA4  3068               	movlw	104
  5827  1CA5  0081               	movwf	1	;volatile
  5828                           
  5829                           ;main_sync.c: 421: TMR0IF = 0;
  5830  1CA6  110B               	bcf	11,2	;volatile
  5831                           
  5832                           ;main_sync.c: 422: TMR0IE = 1;
  5833  1CA7  168B               	bsf	11,5	;volatile
  5834  1CA8  2C8E               	goto	i1l4460
  5835  1CA9                     i1l265:	
  5836                           
  5837                           ;main_sync.c: 423: };main_sync.c: 425: if(TMR0IF){
  5838  1CA9  1D0B               	btfss	11,2	;volatile
  5839  1CAA  2CD6               	goto	i1l4480
  5840                           
  5841                           ;main_sync.c: 426: RD3 = 1;
  5842  1CAB  1588               	bsf	8,3	;volatile
  5843                           
  5844                           ;main_sync.c: 427: TMR0IE = 0;
  5845  1CAC  128B               	bcf	11,5	;volatile
  5846                           
  5847                           ;main_sync.c: 428: if (!cSum)
  5848  1CAD  0861               	movf	_cSum,w
  5849  1CAE  1D03               	btfss	3,2
  5850  1CAF  2CD0               	goto	i1l4472
  5851                           
  5852                           ;main_sync.c: 429: {;main_sync.c: 430: if (serial[0] == idPlaca)
  5853  1CB0  1283               	bcf	3,5	;RP0=0, select bank2
  5854  1CB1  1703               	bsf	3,6	;RP1=1, select bank2
  5855  1CB2  0820               	movf	_serial^(0+256),w
  5856  1CB3  1283               	bcf	3,5	;RP0=0, select bank0
  5857  1CB4  1303               	bcf	3,6	;RP1=0, select bank0
  5858  1CB5  0662               	xorwf	_idPlaca,w
  5859  1CB6  1D03               	skipz
  5860  1CB7  2CD0               	goto	i1l4472
  5861                           
  5862                           ;main_sync.c: 431: {;main_sync.c: 432: uByte = protocolo();
  5863  1CB8  120A  158A  2370  160A  158A  	fcall	_protocolo
  5864  1CBD  1283               	bcf	3,5	;RP0=0, select bank0
  5865  1CBE  1303               	bcf	3,6	;RP1=0, select bank0
  5866  1CBF  083E               	movf	?_protocolo,w
  5867  1CC0  00D9               	movwf	??_interruption
  5868  1CC1  0859               	movf	??_interruption,w
  5869  1CC2  00DF               	movwf	interruption@uByte
  5870                           
  5871                           ;main_sync.c: 433: enviar(serial,uByte);
  5872  1CC3  085F               	movf	interruption@uByte,w
  5873  1CC4  00D9               	movwf	??_interruption
  5874  1CC5  01DA               	clrf	??_interruption+1
  5875  1CC6  0859               	movf	??_interruption,w
  5876  1CC7  00F0               	movwf	enviar@n
  5877  1CC8  085A               	movf	??_interruption+1,w
  5878  1CC9  00F1               	movwf	enviar@n+1
  5879  1CCA  3020               	movlw	(low (_serial| (0+256)))& (0+255)
  5880  1CCB  160A  158A  2394  160A  158A  	fcall	_enviar
  5881  1CD0                     i1l4472:	
  5882                           
  5883                           ;main_sync.c: 434: };main_sync.c: 435: };main_sync.c: 436: recebidos = 0;
  5884  1CD0  1283               	bcf	3,5	;RP0=0, select bank0
  5885  1CD1  1303               	bcf	3,6	;RP1=0, select bank0
  5886  1CD2  01E0               	clrf	_recebidos
  5887                           
  5888                           ;main_sync.c: 437: cSum = 0;
  5889  1CD3  01E1               	clrf	_cSum
  5890                           
  5891                           ;main_sync.c: 438: RD3 = 0;
  5892  1CD4  1188               	bcf	8,3	;volatile
  5893                           
  5894                           ;main_sync.c: 439: TMR0IF = 0;
  5895  1CD5  110B               	bcf	11,2	;volatile
  5896  1CD6                     i1l4480:	
  5897                           
  5898                           ;main_sync.c: 440: };main_sync.c: 441: PIR1 = 0;
  5899  1CD6  018C               	clrf	12	;volatile
  5900  1CD7  085E               	movf	??_interruption+5,w
  5901  1CD8  00FF               	movwf	127
  5902  1CD9  085D               	movf	??_interruption+4,w
  5903  1CDA  008A               	movwf	10
  5904  1CDB  085C               	movf	??_interruption+3,w
  5905  1CDC  0084               	movwf	4
  5906  1CDD  0E5B               	swapf	(??_interruption+2)^0,w
  5907  1CDE  0083               	movwf	3
  5908  1CDF  0EFE               	swapf	126,f
  5909  1CE0  0E7E               	swapf	126,w
  5910  1CE1  0009               	retfie
  5911  1CE2                     __end_of_interruption:	
  5912                           
  5913                           	psect	intentry
  5914  0004                     __pintentry:	
  5915                           ;incstack = 0
  5916                           ; Regs used in _interruption: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5917                           
  5918  0004                     interrupt_function:	
  5919  007E                     saved_w	set	btemp
  5920  0004  00FE               	movwf	btemp
  5921  0005  0E03               	swapf	3,w
  5922  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5923  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5924  0008  00DB               	movwf	??_interruption+2
  5925  0009  0804               	movf	4,w
  5926  000A  00DC               	movwf	??_interruption+3
  5927  000B  080A               	movf	10,w
  5928  000C  00DD               	movwf	??_interruption+4
  5929  000D  087F               	movf	btemp+1,w
  5930  000E  00DE               	movwf	??_interruption+5
  5931  000F  160A  158A  2C8E   	ljmp	_interruption
  5932                           
  5933                           	psect	text20
  5934  0B70                     __ptext20:	
  5935 ;; *************** function _protocolo *****************
  5936 ;; Defined at:
  5937 ;;		line 531 in file "main_sync.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  i               2   42[BANK0 ] unsigned int 
  5942 ;;  i               2   48[BANK0 ] unsigned int 
  5943 ;;  i               2   44[BANK0 ] unsigned int 
  5944 ;;  i               2    0        unsigned int 
  5945 ;;  id              1   41[BANK0 ] unsigned char 
  5946 ;;  id              1   55[BANK0 ] unsigned char 
  5947 ;;  id              1   47[BANK0 ] unsigned char 
  5948 ;;  id              1   54[BANK0 ] unsigned char 
  5949 ;;  id              1   46[BANK0 ] unsigned char 
  5950 ;;  tamanho         2   51[BANK0 ] unsigned int 
  5951 ;;  payload         1   56[BANK0 ] PTR unsigned char 
  5952 ;;		 -> serial(40), 
  5953 ;;  tam             1   53[BANK0 ] PTR unsigned char 
  5954 ;;		 -> serial(40), 
  5955 ;;  cmd             1   50[BANK0 ] PTR unsigned char 
  5956 ;;		 -> serial(40), 
  5957 ;;  comando         1   40[BANK0 ] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  2   30[BANK0 ] int 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5967 ;;      Params:         0       2       0       0       0
  5968 ;;      Locals:         0      21       0       0       0
  5969 ;;      Temps:          0       4       0       0       0
  5970 ;;      Totals:         0      27       0       0       0
  5971 ;;Total ram usage:       27 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    3
  5974 ;; This function calls:
  5975 ;;		___awdiv
  5976 ;;		_erro
  5977 ;;		_escreve_alpha
  5978 ;;		_escreve_b
  5979 ;;		_escreve_k
  5980 ;;		_le_alpha
  5981 ;;		_le_b
  5982 ;;		_le_k
  5983 ;;		_le_temp
  5984 ;;		_ok
  5985 ;; This function is called by:
  5986 ;;		_interruption
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function _protocolo
  5992  0B70                     _protocolo:	
  5993                           
  5994                           ;main_sync.c: 533: uint8_t comando = serial[1];
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in _protocolo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5998  0B70  1283               	bcf	3,5	;RP0=0, select bank2
  5999  0B71  1703               	bsf	3,6	;RP1=1, select bank2
  6000  0B72  0821               	movf	(_serial^(0+256)+1),w
  6001  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  6002  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  6003  0B75  00C0               	movwf	??_protocolo
  6004  0B76  0840               	movf	??_protocolo,w
  6005  0B77  00C8               	movwf	protocolo@comando
  6006                           
  6007                           ;main_sync.c: 534: uint16_t tamanho = (serial[2] << 8) | serial[3];
  6008  0B78  1283               	bcf	3,5	;RP0=0, select bank2
  6009  0B79  1703               	bsf	3,6	;RP1=1, select bank2
  6010  0B7A  0823               	movf	(_serial^(0+256)+3),w
  6011  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  6013  0B7D  00C0               	movwf	??_protocolo
  6014  0B7E  01C1               	clrf	??_protocolo+1
  6015  0B7F  1283               	bcf	3,5	;RP0=0, select bank2
  6016  0B80  1703               	bsf	3,6	;RP1=1, select bank2
  6017  0B81  0822               	movf	(_serial^(0+256)+2),w
  6018  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0B84  00C2               	movwf	??_protocolo+2
  6021  0B85  01C3               	clrf	??_protocolo+3
  6022  0B86  0842               	movf	??_protocolo+2,w
  6023  0B87  00C3               	movwf	??_protocolo+3
  6024  0B88  01C2               	clrf	??_protocolo+2
  6025  0B89  0840               	movf	??_protocolo,w
  6026  0B8A  0442               	iorwf	??_protocolo+2,w
  6027  0B8B  00D3               	movwf	protocolo@tamanho
  6028  0B8C  0841               	movf	??_protocolo+1,w
  6029  0B8D  0443               	iorwf	??_protocolo+3,w
  6030  0B8E  00D4               	movwf	protocolo@tamanho+1
  6031                           
  6032                           ;main_sync.c: 536: serial[0] = 0;
  6033  0B8F  1283               	bcf	3,5	;RP0=0, select bank2
  6034  0B90  1703               	bsf	3,6	;RP1=1, select bank2
  6035  0B91  01A0               	clrf	_serial^(0+256)
  6036                           
  6037                           ;main_sync.c: 537: serial[2] = 0;
  6038  0B92  01A2               	clrf	(_serial^(0+256)+2)
  6039                           
  6040                           ;main_sync.c: 539: char *cmd = &serial[1];
  6041  0B93  3021               	movlw	(low ((_serial| (0+256)+1)))& (0+255)
  6042  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  6043  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  6044  0B96  00C0               	movwf	??_protocolo
  6045  0B97  0840               	movf	??_protocolo,w
  6046  0B98  00D2               	movwf	protocolo@cmd
  6047                           
  6048                           ;main_sync.c: 540: char *payload = &serial[4];
  6049  0B99  3024               	movlw	(low ((_serial| (0+256)+4)))& (0+255)
  6050  0B9A  00C0               	movwf	??_protocolo
  6051  0B9B  0840               	movf	??_protocolo,w
  6052  0B9C  00D8               	movwf	protocolo@payload
  6053                           
  6054                           ;main_sync.c: 541: char *tam = &serial[3];
  6055  0B9D  3023               	movlw	(low ((_serial| (0+256)+3)))& (0+255)
  6056  0B9E  00C0               	movwf	??_protocolo
  6057  0B9F  0840               	movf	??_protocolo,w
  6058  0BA0  00D5               	movwf	protocolo@tam
  6059                           
  6060                           ;main_sync.c: 543: *tam = 0;
  6061  0BA1  0855               	movf	protocolo@tam,w
  6062  0BA2  0084               	movwf	4
  6063  0BA3  1783               	bsf	3,7	;select IRP bank2
  6064  0BA4  0180               	clrf	0
  6065                           
  6066                           ;main_sync.c: 545: switch (comando)
  6067  0BA5  2FD3               	goto	i1l4074
  6068  0BA6                     i1l3728:	
  6069                           
  6070                           ;main_sync.c: 549: {;main_sync.c: 550: if(tamanho != 0)
  6071  0BA6  0853               	movf	protocolo@tamanho,w
  6072  0BA7  0454               	iorwf	protocolo@tamanho+1,w
  6073  0BA8  1903               	btfsc	3,2
  6074  0BA9  2BB1               	goto	i1l3732
  6075                           
  6076                           ;main_sync.c: 551: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  6077  0BAA  30E5               	movlw	229
  6078  0BAB  160A  158A  21D3  120A  158A  	fcall	_erro
  6079  0BB0  2FF3               	goto	i1l4076
  6080  0BB1                     i1l3732:	
  6081                           
  6082                           ;main_sync.c: 552: else;main_sync.c: 553: {;main_sync.c: 554: unsigned int i;;main_sync.
      +                          c: 555: *cmd = CMD_VERSION;
  6083  0BB1  0852               	movf	protocolo@cmd,w
  6084  0BB2  0084               	movwf	4
  6085  0BB3  0180               	clrf	0
  6086  0BB4  0A80               	incf	0,f
  6087                           
  6088                           ;main_sync.c: 556: *tam = 3;
  6089  0BB5  3003               	movlw	3
  6090  0BB6  00C0               	movwf	??_protocolo
  6091  0BB7  0855               	movf	protocolo@tam,w
  6092  0BB8  0084               	movwf	4
  6093  0BB9  0840               	movf	??_protocolo,w
  6094  0BBA  0080               	movwf	0
  6095                           
  6096                           ;main_sync.c: 558: *payload++ = 0x02;
  6097  0BBB  3002               	movlw	2
  6098  0BBC  00C0               	movwf	??_protocolo
  6099  0BBD  0858               	movf	protocolo@payload,w
  6100  0BBE  0084               	movwf	4
  6101  0BBF  0840               	movf	??_protocolo,w
  6102  0BC0  0080               	movwf	0
  6103  0BC1  3001               	movlw	1
  6104  0BC2  00C0               	movwf	??_protocolo
  6105  0BC3  0840               	movf	??_protocolo,w
  6106  0BC4  07D8               	addwf	protocolo@payload,f
  6107                           
  6108                           ;main_sync.c: 559: *payload++ = 0x0A;
  6109  0BC5  300A               	movlw	10
  6110  0BC6  00C0               	movwf	??_protocolo
  6111  0BC7  0858               	movf	protocolo@payload,w
  6112  0BC8  0084               	movwf	4
  6113  0BC9  0840               	movf	??_protocolo,w
  6114  0BCA  0080               	movwf	0
  6115  0BCB  3001               	movlw	1
  6116  0BCC  00C0               	movwf	??_protocolo
  6117  0BCD  0840               	movf	??_protocolo,w
  6118  0BCE  07D8               	addwf	protocolo@payload,f
  6119                           
  6120                           ;main_sync.c: 560: *payload++ = 0x00;
  6121  0BCF  0858               	movf	protocolo@payload,w
  6122  0BD0  0084               	movwf	4
  6123  0BD1  0180               	clrf	0
  6124  0BD2  2C2C               	goto	L4
  6125  0BD3                     i1l3742:	
  6126                           
  6127                           ;main_sync.c: 567: {;main_sync.c: 568: if(tamanho != 0)
  6128  0BD3  0853               	movf	protocolo@tamanho,w
  6129  0BD4  0454               	iorwf	protocolo@tamanho+1,w
  6130  0BD5  1903               	btfsc	3,2
  6131  0BD6  2BDE               	goto	i1l3746
  6132                           
  6133                           ;main_sync.c: 569: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  6134  0BD7  30E5               	movlw	229
  6135  0BD8  160A  158A  21D3  120A  158A  	fcall	_erro
  6136  0BDD  2FF3               	goto	i1l4076
  6137  0BDE                     i1l3746:	
  6138                           
  6139                           ;main_sync.c: 570: else;main_sync.c: 571: {;main_sync.c: 572: unsigned int i;;main_sync.
      +                          c: 573: *cmd = CMD_VAR_LIST;
  6140  0BDE  3003               	movlw	3
  6141  0BDF  00C0               	movwf	??_protocolo
  6142  0BE0  0852               	movf	protocolo@cmd,w
  6143  0BE1  0084               	movwf	4
  6144  0BE2  0840               	movf	??_protocolo,w
  6145  0BE3  0080               	movwf	0
  6146                           
  6147                           ;main_sync.c: 574: *tam = 13;
  6148  0BE4  300D               	movlw	13
  6149  0BE5  00C0               	movwf	??_protocolo
  6150  0BE6  0855               	movf	protocolo@tam,w
  6151  0BE7  0084               	movwf	4
  6152  0BE8  0840               	movf	??_protocolo,w
  6153  0BE9  0080               	movwf	0
  6154                           
  6155                           ;main_sync.c: 576: for(i = 0; i < 8; ++i)
  6156  0BEA  01CC               	clrf	protocolo@i_360
  6157  0BEB  01CD               	clrf	protocolo@i_360+1
  6158  0BEC                     i1l3754:	
  6159                           
  6160                           ;main_sync.c: 577: *payload++ = 0x02;
  6161  0BEC  3002               	movlw	2
  6162  0BED  00C0               	movwf	??_protocolo
  6163  0BEE  0858               	movf	protocolo@payload,w
  6164  0BEF  0084               	movwf	4
  6165  0BF0  0840               	movf	??_protocolo,w
  6166  0BF1  0080               	movwf	0
  6167  0BF2  3001               	movlw	1
  6168  0BF3  00C0               	movwf	??_protocolo
  6169  0BF4  0840               	movf	??_protocolo,w
  6170  0BF5  07D8               	addwf	protocolo@payload,f
  6171  0BF6  3001               	movlw	1
  6172  0BF7  07CC               	addwf	protocolo@i_360,f
  6173  0BF8  1803               	skipnc
  6174  0BF9  0ACD               	incf	protocolo@i_360+1,f
  6175  0BFA  3000               	movlw	0
  6176  0BFB  07CD               	addwf	protocolo@i_360+1,f
  6177  0BFC  3000               	movlw	0
  6178  0BFD  024D               	subwf	protocolo@i_360+1,w
  6179  0BFE  3008               	movlw	8
  6180  0BFF  1903               	skipnz
  6181  0C00  024C               	subwf	protocolo@i_360,w
  6182  0C01  1C03               	skipc
  6183  0C02  2BEC               	goto	i1l3754
  6184                           
  6185                           ;main_sync.c: 579: for(i = 0; i < 3; ++i)
  6186  0C03  01CC               	clrf	protocolo@i_360
  6187  0C04  01CD               	clrf	protocolo@i_360+1
  6188  0C05                     i1l3768:	
  6189                           
  6190                           ;main_sync.c: 580: *payload++ = 0x82;
  6191  0C05  3082               	movlw	130
  6192  0C06  00C0               	movwf	??_protocolo
  6193  0C07  0858               	movf	protocolo@payload,w
  6194  0C08  0084               	movwf	4
  6195  0C09  0840               	movf	??_protocolo,w
  6196  0C0A  0080               	movwf	0
  6197  0C0B  3001               	movlw	1
  6198  0C0C  00C0               	movwf	??_protocolo
  6199  0C0D  0840               	movf	??_protocolo,w
  6200  0C0E  07D8               	addwf	protocolo@payload,f
  6201  0C0F  3001               	movlw	1
  6202  0C10  07CC               	addwf	protocolo@i_360,f
  6203  0C11  1803               	skipnc
  6204  0C12  0ACD               	incf	protocolo@i_360+1,f
  6205  0C13  3000               	movlw	0
  6206  0C14  07CD               	addwf	protocolo@i_360+1,f
  6207  0C15  3000               	movlw	0
  6208  0C16  024D               	subwf	protocolo@i_360+1,w
  6209  0C17  3003               	movlw	3
  6210  0C18  1903               	skipnz
  6211  0C19  024C               	subwf	protocolo@i_360,w
  6212  0C1A  1C03               	skipc
  6213  0C1B  2C05               	goto	i1l3768
  6214                           
  6215                           ;main_sync.c: 582: *payload++ = 0x81;
  6216  0C1C  3081               	movlw	129
  6217  0C1D  00C0               	movwf	??_protocolo
  6218  0C1E  0858               	movf	protocolo@payload,w
  6219  0C1F  0084               	movwf	4
  6220  0C20  0840               	movf	??_protocolo,w
  6221  0C21  0080               	movwf	0
  6222  0C22  3001               	movlw	1
  6223  0C23  00C0               	movwf	??_protocolo
  6224  0C24  0840               	movf	??_protocolo,w
  6225  0C25  07D8               	addwf	protocolo@payload,f
  6226                           
  6227                           ;main_sync.c: 583: *payload++ = 0x81;
  6228  0C26  3081               	movlw	129
  6229  0C27                     L10:	
  6230  0C27  00C0               	movwf	??_protocolo
  6231  0C28  0858               	movf	protocolo@payload,w
  6232  0C29  0084               	movwf	4
  6233  0C2A  0840               	movf	??_protocolo,w
  6234  0C2B  0080               	movwf	0
  6235  0C2C                     L4:	
  6236  0C2C  3001               	movlw	1
  6237  0C2D  00C0               	movwf	??_protocolo
  6238  0C2E  0840               	movf	??_protocolo,w
  6239  0C2F  07D8               	addwf	protocolo@payload,f
  6240  0C30  2FF3               	goto	i1l4076
  6241  0C31                     i1l3782:	
  6242                           
  6243                           ;main_sync.c: 590: if(tamanho != 0)
  6244  0C31  0853               	movf	protocolo@tamanho,w
  6245  0C32  0454               	iorwf	protocolo@tamanho+1,w
  6246  0C33  1903               	btfsc	3,2
  6247  0C34  2C3C               	goto	i1l3786
  6248                           
  6249                           ;main_sync.c: 591: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  6250  0C35  30E5               	movlw	229
  6251  0C36  160A  158A  21D3  120A  158A  	fcall	_erro
  6252  0C3B  2FF3               	goto	i1l4076
  6253  0C3C                     i1l3786:	
  6254                           
  6255                           ;main_sync.c: 592: else;main_sync.c: 593: {;main_sync.c: 594: *cmd = CMD_GROUP_LIST;
  6256  0C3C  3005               	movlw	5
  6257  0C3D  00C0               	movwf	??_protocolo
  6258  0C3E  0852               	movf	protocolo@cmd,w
  6259  0C3F  0084               	movwf	4
  6260  0C40  0840               	movf	??_protocolo,w
  6261  0C41  0080               	movwf	0
  6262                           
  6263                           ;main_sync.c: 595: *tam = 3;
  6264  0C42  3003               	movlw	3
  6265  0C43  00C0               	movwf	??_protocolo
  6266  0C44  0855               	movf	protocolo@tam,w
  6267  0C45  0084               	movwf	4
  6268  0C46  0840               	movf	??_protocolo,w
  6269  0C47  0080               	movwf	0
  6270                           
  6271                           ;main_sync.c: 596: *payload++ = 0x0C;
  6272  0C48  300C               	movlw	12
  6273  0C49  00C0               	movwf	??_protocolo
  6274  0C4A  0858               	movf	protocolo@payload,w
  6275  0C4B  0084               	movwf	4
  6276  0C4C  0840               	movf	??_protocolo,w
  6277  0C4D  0080               	movwf	0
  6278  0C4E  3001               	movlw	1
  6279  0C4F  00C0               	movwf	??_protocolo
  6280  0C50  0840               	movf	??_protocolo,w
  6281  0C51  07D8               	addwf	protocolo@payload,f
  6282                           
  6283                           ;main_sync.c: 597: *payload++ = 0x08;
  6284  0C52  3008               	movlw	8
  6285  0C53  00C0               	movwf	??_protocolo
  6286  0C54  0858               	movf	protocolo@payload,w
  6287  0C55  0084               	movwf	4
  6288  0C56  0840               	movf	??_protocolo,w
  6289  0C57  0080               	movwf	0
  6290  0C58  3001               	movlw	1
  6291  0C59  00C0               	movwf	??_protocolo
  6292  0C5A  0840               	movf	??_protocolo,w
  6293  0C5B  07D8               	addwf	protocolo@payload,f
  6294                           
  6295                           ;main_sync.c: 598: *payload++ = 0x85;
  6296  0C5C  3085               	movlw	133
  6297  0C5D  2C27               	goto	L10
  6298  0C5E                     i1l3796:	
  6299                           
  6300                           ;main_sync.c: 603: {;main_sync.c: 604: uint8_t id = payload[0];
  6301  0C5E  0858               	movf	protocolo@payload,w
  6302  0C5F  0084               	movwf	4
  6303  0C60  0800               	movf	0,w
  6304  0C61  00C0               	movwf	??_protocolo
  6305  0C62  0840               	movf	??_protocolo,w
  6306  0C63  00CE               	movwf	protocolo@id
  6307                           
  6308                           ;main_sync.c: 606: if(tamanho != 1)
  6309  0C64  0353               	decf	protocolo@tamanho,w
  6310  0C65  0454               	iorwf	protocolo@tamanho+1,w
  6311  0C66  1903               	btfsc	3,2
  6312  0C67  2C6F               	goto	i1l3802
  6313                           
  6314                           ;main_sync.c: 607: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  6315  0C68  30E5               	movlw	229
  6316  0C69  160A  158A  21D3  120A  158A  	fcall	_erro
  6317  0C6E  2FF3               	goto	i1l4076
  6318  0C6F                     i1l3802:	
  6319                           
  6320                           ;main_sync.c: 608: else if(id > 2)
  6321  0C6F  3003               	movlw	3
  6322  0C70  024E               	subwf	protocolo@id,w
  6323  0C71  1C03               	skipc
  6324  0C72  2C7A               	goto	i1l3806
  6325                           
  6326                           ;main_sync.c: 609: erro(CMD_ERR_INVALID_ID);
  6327  0C73  30E3               	movlw	227
  6328  0C74  160A  158A  21D3  120A  158A  	fcall	_erro
  6329  0C79  2FF3               	goto	i1l4076
  6330  0C7A                     i1l3806:	
  6331                           
  6332                           ;main_sync.c: 610: else;main_sync.c: 611: {;main_sync.c: 612: *cmd = CMD_GROUP;
  6333  0C7A  3007               	movlw	7
  6334  0C7B  00C0               	movwf	??_protocolo
  6335  0C7C  0852               	movf	protocolo@cmd,w
  6336  0C7D  0084               	movwf	4
  6337  0C7E  0840               	movf	??_protocolo,w
  6338  0C7F  0080               	movwf	0
  6339                           
  6340                           ;main_sync.c: 613: unsigned int i = 0;
  6341  0C80  01D0               	clrf	protocolo@i_362
  6342  0C81  01D1               	clrf	protocolo@i_362+1
  6343                           
  6344                           ;main_sync.c: 615: if(id == 0 || id == 1)
  6345  0C82  084E               	movf	protocolo@id,w
  6346  0C83  1D03               	btfss	3,2
  6347  0C84  034E               	decf	protocolo@id,w
  6348  0C85  1D03               	btfss	3,2
  6349  0C86  2CA7               	goto	i1l3830
  6350                           
  6351                           ;main_sync.c: 616: {;main_sync.c: 617: *tam += 8;
  6352  0C87  3008               	movlw	8
  6353  0C88  00C0               	movwf	??_protocolo
  6354  0C89  0855               	movf	protocolo@tam,w
  6355  0C8A  0084               	movwf	4
  6356  0C8B  0840               	movf	??_protocolo,w
  6357  0C8C  0780               	addwf	0,f
  6358                           
  6359                           ;main_sync.c: 618: for(i = 0; i < 8; ++i)
  6360  0C8D  01D0               	clrf	protocolo@i_362
  6361  0C8E  01D1               	clrf	protocolo@i_362+1
  6362  0C8F                     i1l3818:	
  6363  0C8F  3000               	movlw	0
  6364  0C90  0251               	subwf	protocolo@i_362+1,w
  6365  0C91  3008               	movlw	8
  6366  0C92  1903               	skipnz
  6367  0C93  0250               	subwf	protocolo@i_362,w
  6368  0C94  1803               	btfsc	3,0
  6369  0C95  2CA7               	goto	i1l3830
  6370                           
  6371                           ;main_sync.c: 619: *payload++ = i;
  6372  0C96  0850               	movf	protocolo@i_362,w
  6373  0C97  00C0               	movwf	??_protocolo
  6374  0C98  0858               	movf	protocolo@payload,w
  6375  0C99  0084               	movwf	4
  6376  0C9A  0840               	movf	??_protocolo,w
  6377  0C9B  0080               	movwf	0
  6378  0C9C  3001               	movlw	1
  6379  0C9D  00C0               	movwf	??_protocolo
  6380  0C9E  0840               	movf	??_protocolo,w
  6381  0C9F  07D8               	addwf	protocolo@payload,f
  6382  0CA0  3001               	movlw	1
  6383  0CA1  07D0               	addwf	protocolo@i_362,f
  6384  0CA2  1803               	skipnc
  6385  0CA3  0AD1               	incf	protocolo@i_362+1,f
  6386  0CA4  3000               	movlw	0
  6387  0CA5  07D1               	addwf	protocolo@i_362+1,f
  6388  0CA6  2C8F               	goto	i1l3818
  6389  0CA7                     i1l3830:	
  6390                           
  6391                           ;main_sync.c: 620: };main_sync.c: 622: if(id == 0 || id == 2)
  6392  0CA7  084E               	movf	protocolo@id,w
  6393  0CA8  1903               	btfsc	3,2
  6394  0CA9  2CAE               	goto	i1l3834
  6395  0CAA  3002               	movlw	2
  6396  0CAB  064E               	xorwf	protocolo@id,w
  6397  0CAC  1D03               	btfss	3,2
  6398  0CAD  2FF3               	goto	i1l4076
  6399  0CAE                     i1l3834:	
  6400                           
  6401                           ;main_sync.c: 623: {;main_sync.c: 624: *tam += 4;
  6402  0CAE  3004               	movlw	4
  6403  0CAF  00C0               	movwf	??_protocolo
  6404  0CB0  0855               	movf	protocolo@tam,w
  6405  0CB1  0084               	movwf	4
  6406  0CB2  0840               	movf	??_protocolo,w
  6407  0CB3  0780               	addwf	0,f
  6408                           
  6409                           ;main_sync.c: 625: for(i = 8; i < 13; ++i)
  6410  0CB4  3008               	movlw	8
  6411  0CB5  00D0               	movwf	protocolo@i_362
  6412  0CB6  3000               	movlw	0
  6413  0CB7  00D1               	movwf	protocolo@i_362+1
  6414  0CB8                     i1l3838:	
  6415  0CB8  3000               	movlw	0
  6416  0CB9  0251               	subwf	protocolo@i_362+1,w
  6417  0CBA  300D               	movlw	13
  6418  0CBB  1903               	skipnz
  6419  0CBC  0250               	subwf	protocolo@i_362,w
  6420  0CBD  1803               	btfsc	3,0
  6421  0CBE  2FF3               	goto	i1l4076
  6422                           
  6423                           ;main_sync.c: 626: *payload++ = i;
  6424  0CBF  0850               	movf	protocolo@i_362,w
  6425  0CC0  00C0               	movwf	??_protocolo
  6426  0CC1  0858               	movf	protocolo@payload,w
  6427  0CC2  0084               	movwf	4
  6428  0CC3  0840               	movf	??_protocolo,w
  6429  0CC4  0080               	movwf	0
  6430  0CC5  3001               	movlw	1
  6431  0CC6  00C0               	movwf	??_protocolo
  6432  0CC7  0840               	movf	??_protocolo,w
  6433  0CC8  07D8               	addwf	protocolo@payload,f
  6434  0CC9  3001               	movlw	1
  6435  0CCA  07D0               	addwf	protocolo@i_362,f
  6436  0CCB  1803               	skipnc
  6437  0CCC  0AD1               	incf	protocolo@i_362+1,f
  6438  0CCD  3000               	movlw	0
  6439  0CCE  07D1               	addwf	protocolo@i_362+1,f
  6440  0CCF  2CB8               	goto	i1l3838
  6441  0CD0                     i1l3850:	
  6442                           
  6443                           ;main_sync.c: 633: *cmd = tamanho ? CMD_ERR_INVALID_PAYLOAD_SIZE : CMD_CURVE_LIST;
  6444  0CD0  0853               	movf	protocolo@tamanho,w
  6445  0CD1  0454               	iorwf	protocolo@tamanho+1,w
  6446  0CD2  1D03               	btfss	3,2
  6447  0CD3  2CD6               	goto	i1l3854
  6448  0CD4  3009               	movlw	9
  6449  0CD5  2CD7               	goto	L5
  6450  0CD6                     i1l3854:	
  6451  0CD6  30E5               	movlw	229
  6452  0CD7                     L5:	
  6453  0CD7  00C4               	movwf	_protocolo$363
  6454  0CD8  3000               	movlw	0
  6455  0CD9  00C5               	movwf	_protocolo$363+1
  6456  0CDA  0844               	movf	_protocolo$363,w
  6457  0CDB  2CE7               	goto	L6
  6458  0CDC                     i1l3858:	
  6459                           ;main_sync.c: 634: break;
  6460                           
  6461                           
  6462                           ;main_sync.c: 637: *cmd = tamanho ? CMD_ERR_INVALID_PAYLOAD_SIZE : CMD_FUNC_LIST;
  6463  0CDC  0853               	movf	protocolo@tamanho,w
  6464  0CDD  0454               	iorwf	protocolo@tamanho+1,w
  6465  0CDE  1D03               	btfss	3,2
  6466  0CDF  2CE2               	goto	i1l3862
  6467  0CE0  300D               	movlw	13
  6468  0CE1  2CE3               	goto	L7
  6469  0CE2                     i1l3862:	
  6470  0CE2  30E5               	movlw	229
  6471  0CE3                     L7:	
  6472  0CE3  00C6               	movwf	_protocolo$364
  6473  0CE4  3000               	movlw	0
  6474  0CE5  00C7               	movwf	_protocolo$364+1
  6475  0CE6  0846               	movf	_protocolo$364,w
  6476  0CE7                     L6:	
  6477  0CE7  00C0               	movwf	??_protocolo
  6478  0CE8  0852               	movf	protocolo@cmd,w
  6479  0CE9  2DB2               	goto	L9
  6480  0CEA                     i1l3866:	
  6481                           ;main_sync.c: 638: break;
  6482                           
  6483                           
  6484                           ;main_sync.c: 641: {;main_sync.c: 642: uint8_t id = payload[0];
  6485  0CEA  0858               	movf	protocolo@payload,w
  6486  0CEB  0084               	movwf	4
  6487  0CEC  0800               	movf	0,w
  6488  0CED  00C0               	movwf	??_protocolo
  6489  0CEE  0840               	movf	??_protocolo,w
  6490  0CEF  00D6               	movwf	protocolo@id_365
  6491                           
  6492                           ;main_sync.c: 644: if(tamanho != 1)
  6493  0CF0  0353               	decf	protocolo@tamanho,w
  6494  0CF1  0454               	iorwf	protocolo@tamanho+1,w
  6495  0CF2  1903               	btfsc	3,2
  6496  0CF3  2CFB               	goto	i1l3872
  6497                           
  6498                           ;main_sync.c: 645: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  6499  0CF4  30E5               	movlw	229
  6500  0CF5  160A  158A  21D3  120A  158A  	fcall	_erro
  6501  0CFA  2FF3               	goto	i1l4076
  6502  0CFB                     i1l3872:	
  6503                           
  6504                           ;main_sync.c: 646: else if(id > 18)
  6505  0CFB  3013               	movlw	19
  6506  0CFC  0256               	subwf	protocolo@id_365,w
  6507  0CFD  1C03               	skipc
  6508  0CFE  2D06               	goto	i1l3876
  6509                           
  6510                           ;main_sync.c: 647: erro(CMD_ERR_INVALID_ID);
  6511  0CFF  30E3               	movlw	227
  6512  0D00  160A  158A  21D3  120A  158A  	fcall	_erro
  6513  0D05  2FF3               	goto	i1l4076
  6514  0D06                     i1l3876:	
  6515                           
  6516                           ;main_sync.c: 648: else;main_sync.c: 649: {;main_sync.c: 650: *cmd = CMD_VAR_VALUE;
  6517  0D06  3011               	movlw	17
  6518  0D07  00C0               	movwf	??_protocolo
  6519  0D08  0852               	movf	protocolo@cmd,w
  6520  0D09  0084               	movwf	4
  6521  0D0A  0840               	movf	??_protocolo,w
  6522  0D0B  0080               	movwf	0
  6523                           
  6524                           ;main_sync.c: 651: *tam = 2;
  6525  0D0C  3002               	movlw	2
  6526  0D0D  00C0               	movwf	??_protocolo
  6527  0D0E  0855               	movf	protocolo@tam,w
  6528  0D0F  0084               	movwf	4
  6529  0D10  0840               	movf	??_protocolo,w
  6530  0D11  0080               	movwf	0
  6531                           
  6532                           ;main_sync.c: 653: if(id <= 7) le_temp(payload, id);
  6533  0D12  3008               	movlw	8
  6534  0D13  0256               	subwf	protocolo@id_365,w
  6535  0D14  1803               	skipnc
  6536  0D15  2D24               	goto	i1l3882
  6537  0D16  0856               	movf	protocolo@id_365,w
  6538  0D17  00C0               	movwf	??_protocolo
  6539  0D18  01C1               	clrf	??_protocolo+1
  6540  0D19  0840               	movf	??_protocolo,w
  6541  0D1A  00B8               	movwf	le_temp@temp_index
  6542  0D1B  0841               	movf	??_protocolo+1,w
  6543  0D1C  00B9               	movwf	le_temp@temp_index+1
  6544  0D1D  0858               	movf	protocolo@payload,w
  6545  0D1E  160A  158A  24E2  120A  158A  	fcall	_le_temp
  6546  0D23  2FF3               	goto	i1l4076
  6547  0D24                     i1l3882:	
  6548                           
  6549                           ;main_sync.c: 654: else if(id == 8 || id == 13 || id == 16) le_alpha(payload, (id-1)/5);
  6550  0D24  3008               	movlw	8
  6551  0D25  0656               	xorwf	protocolo@id_365,w
  6552  0D26  1903               	btfsc	3,2
  6553  0D27  2D30               	goto	i1l3888
  6554  0D28  300D               	movlw	13
  6555  0D29  0656               	xorwf	protocolo@id_365,w
  6556  0D2A  1903               	btfsc	3,2
  6557  0D2B  2D30               	goto	i1l3888
  6558  0D2C  3010               	movlw	16
  6559  0D2D  0656               	xorwf	protocolo@id_365,w
  6560  0D2E  1D03               	btfss	3,2
  6561  0D2F  2D4D               	goto	i1l3890
  6562  0D30                     i1l3888:	
  6563  0D30  3005               	movlw	5
  6564  0D31  00F0               	movwf	___awdiv@divisor
  6565  0D32  3000               	movlw	0
  6566  0D33  00F1               	movwf	___awdiv@divisor+1
  6567  0D34  0856               	movf	protocolo@id_365,w
  6568  0D35  3EFF               	addlw	255
  6569  0D36  00F2               	movwf	___awdiv@dividend
  6570  0D37  30FF               	movlw	255
  6571  0D38  1803               	skipnc
  6572  0D39  3000               	movlw	0
  6573  0D3A  00F3               	movwf	___awdiv@dividend+1
  6574  0D3B  160A  158A  2591  120A  158A  	fcall	___awdiv
  6575  0D40  0871               	movf	?___awdiv+1,w
  6576  0D41  00FA               	movwf	le_alpha@n+1
  6577  0D42  0870               	movf	?___awdiv,w
  6578  0D43  00F9               	movwf	le_alpha@n
  6579  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  6580  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  6581  0D46  0858               	movf	protocolo@payload,w
  6582  0D47  160A  158A  240E  120A  158A  	fcall	_le_alpha
  6583  0D4C  2FF3               	goto	i1l4076
  6584  0D4D                     i1l3890:	
  6585                           
  6586                           ;main_sync.c: 655: else if(id == 9 || id == 14 || id == 17) le_k(payload,(id-1)/5);
  6587  0D4D  3009               	movlw	9
  6588  0D4E  0656               	xorwf	protocolo@id_365,w
  6589  0D4F  1903               	btfsc	3,2
  6590  0D50  2D59               	goto	i1l3896
  6591  0D51  300E               	movlw	14
  6592  0D52  0656               	xorwf	protocolo@id_365,w
  6593  0D53  1903               	btfsc	3,2
  6594  0D54  2D59               	goto	i1l3896
  6595  0D55  3011               	movlw	17
  6596  0D56  0656               	xorwf	protocolo@id_365,w
  6597  0D57  1D03               	btfss	3,2
  6598  0D58  2D76               	goto	i1l3898
  6599  0D59                     i1l3896:	
  6600  0D59  3005               	movlw	5
  6601  0D5A  00F0               	movwf	___awdiv@divisor
  6602  0D5B  3000               	movlw	0
  6603  0D5C  00F1               	movwf	___awdiv@divisor+1
  6604  0D5D  0856               	movf	protocolo@id_365,w
  6605  0D5E  3EFF               	addlw	255
  6606  0D5F  00F2               	movwf	___awdiv@dividend
  6607  0D60  30FF               	movlw	255
  6608  0D61  1803               	skipnc
  6609  0D62  3000               	movlw	0
  6610  0D63  00F3               	movwf	___awdiv@dividend+1
  6611  0D64  160A  158A  2591  120A  158A  	fcall	___awdiv
  6612  0D69  0871               	movf	?___awdiv+1,w
  6613  0D6A  00FA               	movwf	le_k@n+1
  6614  0D6B  0870               	movf	?___awdiv,w
  6615  0D6C  00F9               	movwf	le_k@n
  6616  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0D6F  0858               	movf	protocolo@payload,w
  6619  0D70  160A  158A  230A  120A  158A  	fcall	_le_k
  6620  0D75  2FF3               	goto	i1l4076
  6621  0D76                     i1l3898:	
  6622                           
  6623                           ;main_sync.c: 656: else if(id == 10|| id == 15 || id == 18) le_b(payload,(id-1)/5);
  6624  0D76  300A               	movlw	10
  6625  0D77  0656               	xorwf	protocolo@id_365,w
  6626  0D78  1903               	btfsc	3,2
  6627  0D79  2D82               	goto	i1l3904
  6628  0D7A  300F               	movlw	15
  6629  0D7B  0656               	xorwf	protocolo@id_365,w
  6630  0D7C  1903               	btfsc	3,2
  6631  0D7D  2D82               	goto	i1l3904
  6632  0D7E  3012               	movlw	18
  6633  0D7F  0656               	xorwf	protocolo@id_365,w
  6634  0D80  1D03               	btfss	3,2
  6635  0D81  2D9F               	goto	i1l3906
  6636  0D82                     i1l3904:	
  6637  0D82  3005               	movlw	5
  6638  0D83  00F0               	movwf	___awdiv@divisor
  6639  0D84  3000               	movlw	0
  6640  0D85  00F1               	movwf	___awdiv@divisor+1
  6641  0D86  0856               	movf	protocolo@id_365,w
  6642  0D87  3EFF               	addlw	255
  6643  0D88  00F2               	movwf	___awdiv@dividend
  6644  0D89  30FF               	movlw	255
  6645  0D8A  1803               	skipnc
  6646  0D8B  3000               	movlw	0
  6647  0D8C  00F3               	movwf	___awdiv@dividend+1
  6648  0D8D  160A  158A  2591  120A  158A  	fcall	___awdiv
  6649  0D92  0871               	movf	?___awdiv+1,w
  6650  0D93  00FA               	movwf	le_b@n+1
  6651  0D94  0870               	movf	?___awdiv,w
  6652  0D95  00F9               	movwf	le_b@n
  6653  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  6654  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  6655  0D98  0858               	movf	protocolo@payload,w
  6656  0D99  160A  158A  22DE  120A  158A  	fcall	_le_b
  6657  0D9E  2FF3               	goto	i1l4076
  6658  0D9F                     i1l3906:	
  6659                           
  6660                           ;main_sync.c: 657: else;main_sync.c: 658: {;main_sync.c: 659: *tam = 1;
  6661  0D9F  0855               	movf	protocolo@tam,w
  6662  0DA0  0084               	movwf	4
  6663  0DA1  0180               	clrf	0
  6664  0DA2  0A80               	incf	0,f
  6665                           
  6666                           ;main_sync.c: 660: if(id == 11)
  6667  0DA3  300B               	movlw	11
  6668  0DA4  0656               	xorwf	protocolo@id_365,w
  6669  0DA5  1D03               	btfss	3,2
  6670  0DA6  2DAB               	goto	i1l3912
  6671                           
  6672                           ;main_sync.c: 661: payload[0] = lerADpuro;
  6673  0DA7  1683               	bsf	3,5	;RP0=1, select bank3
  6674  0DA8  1703               	bsf	3,6	;RP1=1, select bank3
  6675  0DA9  0842               	movf	_lerADpuro^(0+384),w
  6676  0DAA  2DAE               	goto	L11
  6677  0DAB                     i1l3912:	
  6678                           
  6679                           ;main_sync.c: 662: else;main_sync.c: 663: payload[0] = modoLeitura;
  6680  0DAB  1683               	bsf	3,5	;RP0=1, select bank3
  6681  0DAC  1703               	bsf	3,6	;RP1=1, select bank3
  6682  0DAD  0863               	movf	_modoLeitura^(0+384),w
  6683  0DAE                     L11:	
  6684  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  6686  0DB0  00C0               	movwf	??_protocolo
  6687  0DB1  0858               	movf	protocolo@payload,w
  6688  0DB2                     L9:	
  6689  0DB2  0084               	movwf	4
  6690  0DB3  0840               	movf	??_protocolo,w
  6691  0DB4  0080               	movwf	0
  6692  0DB5  2FF3               	goto	i1l4076
  6693  0DB6                     i1l3914:	
  6694                           
  6695                           ;main_sync.c: 670: {;main_sync.c: 671: uint8_t id = payload[0];
  6696  0DB6  0858               	movf	protocolo@payload,w
  6697  0DB7  0084               	movwf	4
  6698  0DB8  0800               	movf	0,w
  6699  0DB9  00C0               	movwf	??_protocolo
  6700  0DBA  0840               	movf	??_protocolo,w
  6701  0DBB  00CF               	movwf	protocolo@id_370
  6702                           
  6703                           ;main_sync.c: 673: if(tamanho != 1)
  6704  0DBC  0353               	decf	protocolo@tamanho,w
  6705  0DBD  0454               	iorwf	protocolo@tamanho+1,w
  6706  0DBE  1903               	btfsc	3,2
  6707  0DBF  2DC7               	goto	i1l3920
  6708                           
  6709                           ;main_sync.c: 674: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  6710  0DC0  30E5               	movlw	229
  6711  0DC1  160A  158A  21D3  120A  158A  	fcall	_erro
  6712  0DC6  2FF3               	goto	i1l4076
  6713  0DC7                     i1l3920:	
  6714                           
  6715                           ;main_sync.c: 675: else if(id > 2)
  6716  0DC7  3003               	movlw	3
  6717  0DC8  024F               	subwf	protocolo@id_370,w
  6718  0DC9  1C03               	skipc
  6719  0DCA  2DD2               	goto	i1l3924
  6720                           
  6721                           ;main_sync.c: 676: erro(CMD_ERR_INVALID_ID);
  6722  0DCB  30E3               	movlw	227
  6723  0DCC  160A  158A  21D3  120A  158A  	fcall	_erro
  6724  0DD1  2FF3               	goto	i1l4076
  6725  0DD2                     i1l3924:	
  6726                           
  6727                           ;main_sync.c: 677: else;main_sync.c: 678: {;main_sync.c: 679: *cmd = CMD_GROUP_VALUES;
  6728  0DD2  3013               	movlw	19
  6729  0DD3  00C0               	movwf	??_protocolo
  6730  0DD4  0852               	movf	protocolo@cmd,w
  6731  0DD5  0084               	movwf	4
  6732  0DD6  0840               	movf	??_protocolo,w
  6733  0DD7  0080               	movwf	0
  6734                           
  6735                           ;main_sync.c: 681: unsigned int i;;main_sync.c: 683: if(id == 0 || id == 1)
  6736  0DD8  084F               	movf	protocolo@id_370,w
  6737  0DD9  1D03               	btfss	3,2
  6738  0DDA  034F               	decf	protocolo@id_370,w
  6739  0DDB  1D03               	btfss	3,2
  6740  0DDC  2E04               	goto	i1l3946
  6741                           
  6742                           ;main_sync.c: 684: for(i = 0; i < 8; ++i)
  6743  0DDD  01CA               	clrf	protocolo@i_371
  6744  0DDE  01CB               	clrf	protocolo@i_371+1
  6745  0DDF                     i1l3932:	
  6746  0DDF  3000               	movlw	0
  6747  0DE0  024B               	subwf	protocolo@i_371+1,w
  6748  0DE1  3008               	movlw	8
  6749  0DE2  1903               	skipnz
  6750  0DE3  024A               	subwf	protocolo@i_371,w
  6751  0DE4  1803               	btfsc	3,0
  6752  0DE5  2E04               	goto	i1l3946
  6753                           
  6754                           ;main_sync.c: 685: {;main_sync.c: 686: le_temp(payload, i);
  6755  0DE6  084B               	movf	protocolo@i_371+1,w
  6756  0DE7  00B9               	movwf	le_temp@temp_index+1
  6757  0DE8  084A               	movf	protocolo@i_371,w
  6758  0DE9  00B8               	movwf	le_temp@temp_index
  6759  0DEA  0858               	movf	protocolo@payload,w
  6760  0DEB  160A  158A  24E2  120A  158A  	fcall	_le_temp
  6761                           
  6762                           ;main_sync.c: 687: payload += 2;
  6763  0DF0  3002               	movlw	2
  6764  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  6766  0DF3  00C0               	movwf	??_protocolo
  6767  0DF4  0840               	movf	??_protocolo,w
  6768  0DF5  07D8               	addwf	protocolo@payload,f
  6769                           
  6770                           ;main_sync.c: 688: *tam += 2;
  6771  0DF6  3002               	movlw	2
  6772  0DF7  00C0               	movwf	??_protocolo
  6773  0DF8  0855               	movf	protocolo@tam,w
  6774  0DF9  0084               	movwf	4
  6775  0DFA  0840               	movf	??_protocolo,w
  6776  0DFB  1783               	bsf	3,7	;select IRP bank2
  6777  0DFC  0780               	addwf	0,f
  6778  0DFD  3001               	movlw	1
  6779  0DFE  07CA               	addwf	protocolo@i_371,f
  6780  0DFF  1803               	skipnc
  6781  0E00  0ACB               	incf	protocolo@i_371+1,f
  6782  0E01  3000               	movlw	0
  6783  0E02  07CB               	addwf	protocolo@i_371+1,f
  6784  0E03  2DDF               	goto	i1l3932
  6785  0E04                     i1l3946:	
  6786                           
  6787                           ;main_sync.c: 689: };main_sync.c: 691: if(id == 0 || id == 2)
  6788  0E04  084F               	movf	protocolo@id_370,w
  6789  0E05  1903               	btfsc	3,2
  6790  0E06  2E0B               	goto	i1l3950
  6791  0E07  3002               	movlw	2
  6792  0E08  064F               	xorwf	protocolo@id_370,w
  6793  0E09  1D03               	btfss	3,2
  6794  0E0A  2FF3               	goto	i1l4076
  6795  0E0B                     i1l3950:	
  6796                           
  6797                           ;main_sync.c: 692: {;main_sync.c: 693: le_alpha(payload,1);
  6798  0E0B  3001               	movlw	1
  6799  0E0C  00F9               	movwf	le_alpha@n
  6800  0E0D  3000               	movlw	0
  6801  0E0E  00FA               	movwf	le_alpha@n+1
  6802  0E0F  0858               	movf	protocolo@payload,w
  6803  0E10  160A  158A  240E  120A  158A  	fcall	_le_alpha
  6804                           
  6805                           ;main_sync.c: 694: le_alpha(payload,2);
  6806  0E15  3002               	movlw	2
  6807  0E16  00F9               	movwf	le_alpha@n
  6808  0E17  3000               	movlw	0
  6809  0E18  00FA               	movwf	le_alpha@n+1
  6810  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  6811  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  6812  0E1B  0858               	movf	protocolo@payload,w
  6813  0E1C  160A  158A  240E  120A  158A  	fcall	_le_alpha
  6814                           
  6815                           ;main_sync.c: 695: le_alpha(payload,3);
  6816  0E21  3003               	movlw	3
  6817  0E22  00F9               	movwf	le_alpha@n
  6818  0E23  3000               	movlw	0
  6819  0E24  00FA               	movwf	le_alpha@n+1
  6820  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  6821  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  6822  0E27  0858               	movf	protocolo@payload,w
  6823  0E28  160A  158A  240E  120A  158A  	fcall	_le_alpha
  6824                           
  6825                           ;main_sync.c: 696: payload += 2;
  6826  0E2D  3002               	movlw	2
  6827  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  6828  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  6829  0E30  00C0               	movwf	??_protocolo
  6830  0E31  0840               	movf	??_protocolo,w
  6831  0E32  07D8               	addwf	protocolo@payload,f
  6832                           
  6833                           ;main_sync.c: 697: *tam += 2;
  6834  0E33  3002               	movlw	2
  6835  0E34  00C0               	movwf	??_protocolo
  6836  0E35  0855               	movf	protocolo@tam,w
  6837  0E36  0084               	movwf	4
  6838  0E37  0840               	movf	??_protocolo,w
  6839  0E38  1783               	bsf	3,7	;select IRP bank2
  6840  0E39  0780               	addwf	0,f
  6841                           
  6842                           ;main_sync.c: 699: le_k(payload,1);
  6843  0E3A  3001               	movlw	1
  6844  0E3B  00F9               	movwf	le_k@n
  6845  0E3C  3000               	movlw	0
  6846  0E3D  00FA               	movwf	le_k@n+1
  6847  0E3E  0858               	movf	protocolo@payload,w
  6848  0E3F  160A  158A  230A  120A  158A  	fcall	_le_k
  6849                           
  6850                           ;main_sync.c: 700: le_k(payload,2);
  6851  0E44  3002               	movlw	2
  6852  0E45  00F9               	movwf	le_k@n
  6853  0E46  3000               	movlw	0
  6854  0E47  00FA               	movwf	le_k@n+1
  6855  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  6856  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  6857  0E4A  0858               	movf	protocolo@payload,w
  6858  0E4B  160A  158A  230A  120A  158A  	fcall	_le_k
  6859                           
  6860                           ;main_sync.c: 701: le_k(payload,3);
  6861  0E50  3003               	movlw	3
  6862  0E51  00F9               	movwf	le_k@n
  6863  0E52  3000               	movlw	0
  6864  0E53  00FA               	movwf	le_k@n+1
  6865  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  6867  0E56  0858               	movf	protocolo@payload,w
  6868  0E57  160A  158A  230A  120A  158A  	fcall	_le_k
  6869                           
  6870                           ;main_sync.c: 702: payload += 2;
  6871  0E5C  3002               	movlw	2
  6872  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  6873  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  6874  0E5F  00C0               	movwf	??_protocolo
  6875  0E60  0840               	movf	??_protocolo,w
  6876  0E61  07D8               	addwf	protocolo@payload,f
  6877                           
  6878                           ;main_sync.c: 703: *tam += 2;
  6879  0E62  3002               	movlw	2
  6880  0E63  00C0               	movwf	??_protocolo
  6881  0E64  0855               	movf	protocolo@tam,w
  6882  0E65  0084               	movwf	4
  6883  0E66  0840               	movf	??_protocolo,w
  6884  0E67  1783               	bsf	3,7	;select IRP bank2
  6885  0E68  0780               	addwf	0,f
  6886                           
  6887                           ;main_sync.c: 705: le_b(payload,1);
  6888  0E69  3001               	movlw	1
  6889  0E6A  00F9               	movwf	le_b@n
  6890  0E6B  3000               	movlw	0
  6891  0E6C  00FA               	movwf	le_b@n+1
  6892  0E6D  0858               	movf	protocolo@payload,w
  6893  0E6E  160A  158A  22DE  120A  158A  	fcall	_le_b
  6894                           
  6895                           ;main_sync.c: 706: le_b(payload,2);
  6896  0E73  3002               	movlw	2
  6897  0E74  00F9               	movwf	le_b@n
  6898  0E75  3000               	movlw	0
  6899  0E76  00FA               	movwf	le_b@n+1
  6900  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  6901  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  6902  0E79  0858               	movf	protocolo@payload,w
  6903  0E7A  160A  158A  22DE  120A  158A  	fcall	_le_b
  6904                           
  6905                           ;main_sync.c: 707: le_b(payload,3);
  6906  0E7F  3003               	movlw	3
  6907  0E80  00F9               	movwf	le_b@n
  6908  0E81  3000               	movlw	0
  6909  0E82  00FA               	movwf	le_b@n+1
  6910  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  6911  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  6912  0E85  0858               	movf	protocolo@payload,w
  6913  0E86  160A  158A  22DE  120A  158A  	fcall	_le_b
  6914                           
  6915                           ;main_sync.c: 708: payload += 2;
  6916  0E8B  3002               	movlw	2
  6917  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  6918  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  6919  0E8E  00C0               	movwf	??_protocolo
  6920  0E8F  0840               	movf	??_protocolo,w
  6921  0E90  07D8               	addwf	protocolo@payload,f
  6922                           
  6923                           ;main_sync.c: 709: *tam += 2;
  6924  0E91  3002               	movlw	2
  6925  0E92  00C0               	movwf	??_protocolo
  6926  0E93  0855               	movf	protocolo@tam,w
  6927  0E94  0084               	movwf	4
  6928  0E95  0840               	movf	??_protocolo,w
  6929  0E96  1783               	bsf	3,7	;select IRP bank2
  6930  0E97  0780               	addwf	0,f
  6931                           
  6932                           ;main_sync.c: 711: *payload = lerADpuro;
  6933  0E98  1683               	bsf	3,5	;RP0=1, select bank3
  6934  0E99  1703               	bsf	3,6	;RP1=1, select bank3
  6935  0E9A  0842               	movf	_lerADpuro^(0+384),w
  6936  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  6937  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  6938  0E9D  00C0               	movwf	??_protocolo
  6939  0E9E  0858               	movf	protocolo@payload,w
  6940  0E9F  0084               	movwf	4
  6941  0EA0  0840               	movf	??_protocolo,w
  6942  0EA1  0080               	movwf	0
  6943                           
  6944                           ;main_sync.c: 712: payload++;
  6945  0EA2  3001               	movlw	1
  6946  0EA3  00C0               	movwf	??_protocolo
  6947  0EA4  0840               	movf	??_protocolo,w
  6948  0EA5  07D8               	addwf	protocolo@payload,f
  6949                           
  6950                           ;main_sync.c: 713: *tam++;
  6951  0EA6  3001               	movlw	1
  6952  0EA7  00C0               	movwf	??_protocolo
  6953  0EA8  0840               	movf	??_protocolo,w
  6954  0EA9  07D5               	addwf	protocolo@tam,f
  6955                           
  6956                           ;main_sync.c: 715: *payload = modoLeitura;
  6957  0EAA  1683               	bsf	3,5	;RP0=1, select bank3
  6958  0EAB  1703               	bsf	3,6	;RP1=1, select bank3
  6959  0EAC  0863               	movf	_modoLeitura^(0+384),w
  6960  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  6961  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  6962  0EAF  00C0               	movwf	??_protocolo
  6963  0EB0  0858               	movf	protocolo@payload,w
  6964  0EB1  0084               	movwf	4
  6965  0EB2  0840               	movf	??_protocolo,w
  6966  0EB3  0080               	movwf	0
  6967                           
  6968                           ;main_sync.c: 716: *tam++;
  6969  0EB4  3001               	movlw	1
  6970  0EB5  00C0               	movwf	??_protocolo
  6971  0EB6  0840               	movf	??_protocolo,w
  6972  0EB7  07D5               	addwf	protocolo@tam,f
  6973  0EB8  2FF3               	goto	i1l4076
  6974  0EB9                     i1l3984:	
  6975                           
  6976                           ;main_sync.c: 723: {;main_sync.c: 724: *cmd = CMD_OK;
  6977  0EB9  30E0               	movlw	224
  6978  0EBA  00C0               	movwf	??_protocolo
  6979  0EBB  0852               	movf	protocolo@cmd,w
  6980  0EBC  0084               	movwf	4
  6981  0EBD  0840               	movf	??_protocolo,w
  6982  0EBE  0080               	movwf	0
  6983                           
  6984                           ;main_sync.c: 725: uint8_t id = payload[0];
  6985  0EBF  0858               	movf	protocolo@payload,w
  6986  0EC0  0084               	movwf	4
  6987  0EC1  0800               	movf	0,w
  6988  0EC2  00C0               	movwf	??_protocolo
  6989  0EC3  0840               	movf	??_protocolo,w
  6990  0EC4  00D7               	movwf	protocolo@id_372
  6991                           
  6992                           ;main_sync.c: 727: if(id == 11 && tamanho != 2)
  6993  0EC5  300B               	movlw	11
  6994  0EC6  0657               	xorwf	protocolo@id_372,w
  6995  0EC7  1D03               	btfss	3,2
  6996  0EC8  2ED5               	goto	i1l3992
  6997  0EC9  3002               	movlw	2
  6998  0ECA  0653               	xorwf	protocolo@tamanho,w
  6999  0ECB  0454               	iorwf	protocolo@tamanho+1,w
  7000  0ECC  1903               	btfsc	3,2
  7001  0ECD  2ED5               	goto	i1l3992
  7002                           
  7003                           ;main_sync.c: 728: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  7004  0ECE  30E5               	movlw	229
  7005  0ECF  160A  158A  21D3  120A  158A  	fcall	_erro
  7006  0ED4  2FF3               	goto	i1l4076
  7007  0ED5                     i1l3992:	
  7008                           
  7009                           ;main_sync.c: 729: else if(id == 12 && tamanho != 2)
  7010  0ED5  300C               	movlw	12
  7011  0ED6  0657               	xorwf	protocolo@id_372,w
  7012  0ED7  1D03               	btfss	3,2
  7013  0ED8  2EE5               	goto	i1l3998
  7014  0ED9  3002               	movlw	2
  7015  0EDA  0653               	xorwf	protocolo@tamanho,w
  7016  0EDB  0454               	iorwf	protocolo@tamanho+1,w
  7017  0EDC  1903               	btfsc	3,2
  7018  0EDD  2EE5               	goto	i1l3998
  7019                           
  7020                           ;main_sync.c: 730: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  7021  0EDE  30E5               	movlw	229
  7022  0EDF  160A  158A  21D3  120A  158A  	fcall	_erro
  7023  0EE4  2FF3               	goto	i1l4076
  7024  0EE5                     i1l3998:	
  7025                           
  7026                           ;main_sync.c: 731: else if(id != 11 && id != 12 && tamanho != 3)
  7027  0EE5  300B               	movlw	11
  7028  0EE6  0657               	xorwf	protocolo@id_372,w
  7029  0EE7  1903               	btfsc	3,2
  7030  0EE8  2EF9               	goto	i1l4006
  7031  0EE9  300C               	movlw	12
  7032  0EEA  0657               	xorwf	protocolo@id_372,w
  7033  0EEB  1903               	btfsc	3,2
  7034  0EEC  2EF9               	goto	i1l4006
  7035  0EED  3003               	movlw	3
  7036  0EEE  0653               	xorwf	protocolo@tamanho,w
  7037  0EEF  0454               	iorwf	protocolo@tamanho+1,w
  7038  0EF0  1903               	btfsc	3,2
  7039  0EF1  2EF9               	goto	i1l4006
  7040                           
  7041                           ;main_sync.c: 732: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  7042  0EF2  30E5               	movlw	229
  7043  0EF3  160A  158A  21D3  120A  158A  	fcall	_erro
  7044  0EF8  2FF3               	goto	i1l4076
  7045  0EF9                     i1l4006:	
  7046                           
  7047                           ;main_sync.c: 733: else if(id > 18)
  7048  0EF9  3013               	movlw	19
  7049  0EFA  0257               	subwf	protocolo@id_372,w
  7050  0EFB  1C03               	skipc
  7051  0EFC  2F04               	goto	i1l4010
  7052                           
  7053                           ;main_sync.c: 734: erro(CMD_ERR_INVALID_ID);
  7054  0EFD  30E3               	movlw	227
  7055  0EFE  160A  158A  21D3  120A  158A  	fcall	_erro
  7056  0F03  2FF3               	goto	i1l4076
  7057  0F04                     i1l4010:	
  7058                           
  7059                           ;main_sync.c: 735: else if(id < 8)
  7060  0F04  3008               	movlw	8
  7061  0F05  0257               	subwf	protocolo@id_372,w
  7062  0F06  1803               	skipnc
  7063  0F07  2F0F               	goto	i1l4014
  7064                           
  7065                           ;main_sync.c: 736: erro(CMD_ERR_READ_ONLY);
  7066  0F08  30E6               	movlw	230
  7067  0F09  160A  158A  21D3  120A  158A  	fcall	_erro
  7068  0F0E  2FF3               	goto	i1l4076
  7069  0F0F                     i1l4014:	
  7070                           
  7071                           ;main_sync.c: 737: else;main_sync.c: 738: {;main_sync.c: 739: if(id == 8|| id == 13 || i
      +                          d == 16) escreve_alpha(&payload[1]);
  7072  0F0F  3008               	movlw	8
  7073  0F10  0657               	xorwf	protocolo@id_372,w
  7074  0F11  1903               	btfsc	3,2
  7075  0F12  2F1B               	goto	i1l4020
  7076  0F13  300D               	movlw	13
  7077  0F14  0657               	xorwf	protocolo@id_372,w
  7078  0F15  1903               	btfsc	3,2
  7079  0F16  2F1B               	goto	i1l4020
  7080  0F17  3010               	movlw	16
  7081  0F18  0657               	xorwf	protocolo@id_372,w
  7082  0F19  1D03               	btfss	3,2
  7083  0F1A  2F23               	goto	i1l4022
  7084  0F1B                     i1l4020:	
  7085  0F1B  0858               	movf	protocolo@payload,w
  7086  0F1C  3E01               	addlw	1
  7087  0F1D  160A  118A  2013  120A  158A  	fcall	_escreve_alpha
  7088  0F22  2FF3               	goto	i1l4076
  7089  0F23                     i1l4022:	
  7090                           
  7091                           ;main_sync.c: 740: else if(id == 9|| id == 14 || id == 17) escreve_k(&payload[1]);
  7092  0F23  3009               	movlw	9
  7093  0F24  0657               	xorwf	protocolo@id_372,w
  7094  0F25  1903               	btfsc	3,2
  7095  0F26  2F2F               	goto	i1l4028
  7096  0F27  300E               	movlw	14
  7097  0F28  0657               	xorwf	protocolo@id_372,w
  7098  0F29  1903               	btfsc	3,2
  7099  0F2A  2F2F               	goto	i1l4028
  7100  0F2B  3011               	movlw	17
  7101  0F2C  0657               	xorwf	protocolo@id_372,w
  7102  0F2D  1D03               	btfss	3,2
  7103  0F2E  2F37               	goto	i1l4030
  7104  0F2F                     i1l4028:	
  7105  0F2F  0858               	movf	protocolo@payload,w
  7106  0F30  3E01               	addlw	1
  7107  0F31  160A  158A  2762  120A  158A  	fcall	_escreve_k
  7108  0F36  2FF3               	goto	i1l4076
  7109  0F37                     i1l4030:	
  7110                           
  7111                           ;main_sync.c: 741: else if(id == 10|| id == 15 || id == 18) escreve_b(&payload[1]);
  7112  0F37  300A               	movlw	10
  7113  0F38  0657               	xorwf	protocolo@id_372,w
  7114  0F39  1903               	btfsc	3,2
  7115  0F3A  2F43               	goto	i1l4036
  7116  0F3B  300F               	movlw	15
  7117  0F3C  0657               	xorwf	protocolo@id_372,w
  7118  0F3D  1903               	btfsc	3,2
  7119  0F3E  2F43               	goto	i1l4036
  7120  0F3F  3012               	movlw	18
  7121  0F40  0657               	xorwf	protocolo@id_372,w
  7122  0F41  1D03               	btfss	3,2
  7123  0F42  2F4B               	goto	i1l4038
  7124  0F43                     i1l4036:	
  7125  0F43  0858               	movf	protocolo@payload,w
  7126  0F44  3E01               	addlw	1
  7127  0F45  160A  158A  26C4  120A  158A  	fcall	_escreve_b
  7128  0F4A  2FF3               	goto	i1l4076
  7129  0F4B                     i1l4038:	
  7130                           
  7131                           ;main_sync.c: 742: else if(id == 11) lerADpuro = payload[1] & 0x03;
  7132  0F4B  300B               	movlw	11
  7133  0F4C  0657               	xorwf	protocolo@id_372,w
  7134  0F4D  1D03               	btfss	3,2
  7135  0F4E  2F59               	goto	i1l4042
  7136  0F4F  0A58               	incf	protocolo@payload,w
  7137  0F50  0084               	movwf	4
  7138  0F51  0800               	movf	0,w
  7139  0F52  3903               	andlw	3
  7140  0F53  00C0               	movwf	??_protocolo
  7141  0F54  0840               	movf	??_protocolo,w
  7142  0F55  1683               	bsf	3,5	;RP0=1, select bank3
  7143  0F56  1703               	bsf	3,6	;RP1=1, select bank3
  7144  0F57  00C2               	movwf	_lerADpuro^(0+384)
  7145  0F58  2FF3               	goto	i1l4076
  7146  0F59                     i1l4042:	
  7147                           
  7148                           ;main_sync.c: 743: else modoLeitura = payload[1] & 0x0F;
  7149  0F59  0A58               	incf	protocolo@payload,w
  7150  0F5A  0084               	movwf	4
  7151  0F5B  0800               	movf	0,w
  7152  0F5C  390F               	andlw	15
  7153  0F5D  00C0               	movwf	??_protocolo
  7154  0F5E  0840               	movf	??_protocolo,w
  7155  0F5F  1683               	bsf	3,5	;RP0=1, select bank3
  7156  0F60  1703               	bsf	3,6	;RP1=1, select bank3
  7157  0F61  00E3               	movwf	_modoLeitura^(0+384)
  7158  0F62  2FF3               	goto	i1l4076
  7159  0F63                     i1l4044:	
  7160                           
  7161                           ;main_sync.c: 748: {;main_sync.c: 749: uint8_t id = payload[0];
  7162  0F63  0858               	movf	protocolo@payload,w
  7163  0F64  0084               	movwf	4
  7164  0F65  0800               	movf	0,w
  7165  0F66  00C0               	movwf	??_protocolo
  7166  0F67  0840               	movf	??_protocolo,w
  7167  0F68  00C9               	movwf	protocolo@id_376
  7168                           
  7169                           ;main_sync.c: 751: if(tamanho < 1)
  7170  0F69  0853               	movf	protocolo@tamanho,w
  7171  0F6A  0454               	iorwf	protocolo@tamanho+1,w
  7172  0F6B  1D03               	btfss	3,2
  7173  0F6C  2F74               	goto	i1l4050
  7174                           
  7175                           ;main_sync.c: 752: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  7176  0F6D  30E5               	movlw	229
  7177  0F6E  160A  158A  21D3  120A  158A  	fcall	_erro
  7178  0F73  2FF3               	goto	i1l4076
  7179  0F74                     i1l4050:	
  7180                           
  7181                           ;main_sync.c: 753: else if(id > 2)
  7182  0F74  3003               	movlw	3
  7183  0F75  0249               	subwf	protocolo@id_376,w
  7184  0F76  1C03               	skipc
  7185  0F77  2F7F               	goto	i1l4054
  7186                           
  7187                           ;main_sync.c: 754: erro(CMD_ERR_INVALID_ID);
  7188  0F78  30E3               	movlw	227
  7189  0F79  160A  158A  21D3  120A  158A  	fcall	_erro
  7190  0F7E  2FF3               	goto	i1l4076
  7191  0F7F                     i1l4054:	
  7192                           
  7193                           ;main_sync.c: 755: else if(id < 2)
  7194  0F7F  3002               	movlw	2
  7195  0F80  0249               	subwf	protocolo@id_376,w
  7196  0F81  1803               	skipnc
  7197  0F82  2F8A               	goto	i1l4058
  7198                           
  7199                           ;main_sync.c: 756: erro(CMD_ERR_READ_ONLY);
  7200  0F83  30E6               	movlw	230
  7201  0F84  160A  158A  21D3  120A  158A  	fcall	_erro
  7202  0F89  2FF3               	goto	i1l4076
  7203  0F8A                     i1l4058:	
  7204                           
  7205                           ;main_sync.c: 757: else if(tamanho != 9)
  7206  0F8A  3009               	movlw	9
  7207  0F8B  0653               	xorwf	protocolo@tamanho,w
  7208  0F8C  0454               	iorwf	protocolo@tamanho+1,w
  7209  0F8D  1903               	btfsc	3,2
  7210  0F8E  2F96               	goto	i1l4062
  7211                           
  7212                           ;main_sync.c: 758: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
  7213  0F8F  30E5               	movlw	229
  7214  0F90  160A  158A  21D3  120A  158A  	fcall	_erro
  7215  0F95  2FF3               	goto	i1l4076
  7216  0F96                     i1l4062:	
  7217                           
  7218                           ;main_sync.c: 759: else;main_sync.c: 760: {;main_sync.c: 761: escreve_alpha(&payload[1])
      +                          ;
  7219  0F96  0858               	movf	protocolo@payload,w
  7220  0F97  3E01               	addlw	1
  7221  0F98  160A  118A  2013  120A  158A  	fcall	_escreve_alpha
  7222                           
  7223                           ;main_sync.c: 762: escreve_k(&payload[3]);
  7224  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  7225  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  7226  0F9F  0858               	movf	protocolo@payload,w
  7227  0FA0  3E03               	addlw	3
  7228  0FA1  160A  158A  2762  120A  158A  	fcall	_escreve_k
  7229                           
  7230                           ;main_sync.c: 763: escreve_b(&payload[5]);
  7231  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  7232  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  7233  0FA8  0858               	movf	protocolo@payload,w
  7234  0FA9  3E05               	addlw	5
  7235  0FAA  160A  158A  26C4  120A  158A  	fcall	_escreve_b
  7236                           
  7237                           ;main_sync.c: 764: lerADpuro = payload[7];
  7238  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  7239  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  7240  0FB1  0858               	movf	protocolo@payload,w
  7241  0FB2  3E07               	addlw	7
  7242  0FB3  0084               	movwf	4
  7243  0FB4  1783               	bsf	3,7	;select IRP bank2
  7244  0FB5  0800               	movf	0,w
  7245  0FB6  00C0               	movwf	??_protocolo
  7246  0FB7  0840               	movf	??_protocolo,w
  7247  0FB8  1683               	bsf	3,5	;RP0=1, select bank3
  7248  0FB9  1703               	bsf	3,6	;RP1=1, select bank3
  7249  0FBA  00C2               	movwf	_lerADpuro^(0+384)
  7250                           
  7251                           ;main_sync.c: 765: modoLeitura = payload[8];
  7252  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  7253  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  7254  0FBD  0858               	movf	protocolo@payload,w
  7255  0FBE  3E08               	addlw	8
  7256  0FBF  0084               	movwf	4
  7257  0FC0  0800               	movf	0,w
  7258  0FC1  00C0               	movwf	??_protocolo
  7259  0FC2  0840               	movf	??_protocolo,w
  7260  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  7261  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  7262  0FC5  00E3               	movwf	_modoLeitura^(0+384)
  7263                           
  7264                           ;main_sync.c: 766: ok();
  7265  0FC6  160A  158A  21CE  120A  158A  	fcall	_ok
  7266  0FCB  2FF3               	goto	i1l4076
  7267  0FCC                     i1l4070:	
  7268                           
  7269                           ;main_sync.c: 772: erro(CMD_ERR_OP_NOT_SUPPORTED);
  7270  0FCC  30E2               	movlw	226
  7271  0FCD  160A  158A  21D3  120A  158A  	fcall	_erro
  7272                           
  7273                           ;main_sync.c: 773: break;
  7274  0FD2  2FF3               	goto	i1l4076
  7275  0FD3                     i1l4074:	
  7276  0FD3  0848               	movf	protocolo@comando,w
  7277                           
  7278                           ; Switch size 1, requested type "simple"
  7279                           ; Number of cases is 10, Range of values is 0 to 34
  7280                           ; switch strategies available:
  7281                           ; Name         Instructions Cycles
  7282                           ; simple_byte           31    16 (average)
  7283                           ; direct_byte          113     8 (fixed)
  7284                           ; jumptable            260     6 (fixed)
  7285                           ;	Chosen strategy is simple_byte
  7286  0FD4  3A00               	xorlw	0	; case 0
  7287  0FD5  1903               	skipnz
  7288  0FD6  2BA6               	goto	i1l3728
  7289  0FD7  3A02               	xorlw	2	; case 2
  7290  0FD8  1903               	skipnz
  7291  0FD9  2BD3               	goto	i1l3742
  7292  0FDA  3A06               	xorlw	6	; case 4
  7293  0FDB  1903               	skipnz
  7294  0FDC  2C31               	goto	i1l3782
  7295  0FDD  3A02               	xorlw	2	; case 6
  7296  0FDE  1903               	skipnz
  7297  0FDF  2C5E               	goto	i1l3796
  7298  0FE0  3A0E               	xorlw	14	; case 8
  7299  0FE1  1903               	skipnz
  7300  0FE2  2CD0               	goto	i1l3850
  7301  0FE3  3A04               	xorlw	4	; case 12
  7302  0FE4  1903               	skipnz
  7303  0FE5  2CDC               	goto	i1l3858
  7304  0FE6  3A1C               	xorlw	28	; case 16
  7305  0FE7  1903               	skipnz
  7306  0FE8  2CEA               	goto	i1l3866
  7307  0FE9  3A02               	xorlw	2	; case 18
  7308  0FEA  1903               	skipnz
  7309  0FEB  2DB6               	goto	i1l3914
  7310  0FEC  3A32               	xorlw	50	; case 32
  7311  0FED  1903               	skipnz
  7312  0FEE  2EB9               	goto	i1l3984
  7313  0FEF  3A02               	xorlw	2	; case 34
  7314  0FF0  1903               	skipnz
  7315  0FF1  2F63               	goto	i1l4044
  7316  0FF2  2FCC               	goto	i1l4070
  7317  0FF3                     i1l4076:	
  7318                           
  7319                           ;main_sync.c: 776: return 4+*tam;
  7320  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  7321  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  7322  0FF5  0855               	movf	protocolo@tam,w
  7323  0FF6  0084               	movwf	4
  7324  0FF7  1783               	bsf	3,7	;select IRP bank2
  7325  0FF8  0800               	movf	0,w
  7326  0FF9  3E04               	addlw	4
  7327  0FFA  00BE               	movwf	?_protocolo
  7328  0FFB  3000               	movlw	0
  7329  0FFC  1803               	skipnc
  7330  0FFD  3001               	movlw	1
  7331  0FFE  00BF               	movwf	?_protocolo+1
  7332  0FFF  0008               	return
  7333  1000                     __end_of_protocolo:	
  7334                           
  7335                           	psect	text21
  7336  19CE                     __ptext21:	
  7337 ;; *************** function _ok *****************
  7338 ;; Defined at:
  7339 ;;		line 407 in file "main_sync.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;		None
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0, pclath, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7353 ;;      Params:         0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0
  7356 ;;      Totals:         0       0       0       0       0
  7357 ;;Total ram usage:        0 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    1
  7360 ;; This function calls:
  7361 ;;		_erro
  7362 ;; This function is called by:
  7363 ;;		_protocolo
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _ok
  7369  19CE                     _ok:	
  7370                           
  7371                           ;main_sync.c: 409: erro(CMD_OK);
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _ok: [wreg+status,2+status,0+pclath+cstack]
  7375  19CE  30E0               	movlw	224
  7376  19CF  160A  158A  21D3   	fcall	_erro
  7377  19D2  0008               	return
  7378  19D3                     __end_of_ok:	
  7379                           
  7380                           	psect	text22
  7381  19D3                     __ptext22:	
  7382 ;; *************** function _erro *****************
  7383 ;; Defined at:
  7384 ;;		line 400 in file "main_sync.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  e               1    wreg     enum E1758
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  e               1    1[COMMON] enum E1758
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7398 ;;      Params:         0       0       0       0       0
  7399 ;;      Locals:         1       0       0       0       0
  7400 ;;      Temps:          1       0       0       0       0
  7401 ;;      Totals:         2       0       0       0       0
  7402 ;;Total ram usage:        2 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_ok
  7408 ;;		_protocolo
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           
  7413                           ;psect for function _erro
  7414  19D3                     _erro:	
  7415                           
  7416                           ;incstack = 0
  7417                           ; Regs used in _erro: [wreg+status,2]
  7418                           ;erro@e stored from wreg
  7419  19D3  00F1               	movwf	erro@e
  7420                           
  7421                           ;main_sync.c: 402: serial[1] = e;
  7422  19D4  0871               	movf	erro@e,w
  7423  19D5  00F0               	movwf	??_erro
  7424  19D6  0870               	movf	??_erro,w
  7425  19D7  1283               	bcf	3,5	;RP0=0, select bank2
  7426  19D8  1703               	bsf	3,6	;RP1=1, select bank2
  7427  19D9  00A1               	movwf	(_serial^(0+256)+1)
  7428                           
  7429                           ;main_sync.c: 403: serial[2] = 0;
  7430  19DA  01A2               	clrf	(_serial^(0+256)+2)
  7431                           
  7432                           ;main_sync.c: 404: serial[3] = 0;
  7433  19DB  01A3               	clrf	(_serial^(0+256)+3)
  7434  19DC  0008               	return
  7435  19DD                     __end_of_erro:	
  7436                           
  7437                           	psect	text23
  7438  1CE2                     __ptext23:	
  7439 ;; *************** function _le_temp *****************
  7440 ;; Defined at:
  7441 ;;		line 444 in file "main_sync.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  p               1    wreg     PTR unsigned char 
  7444 ;;		 -> serial(40), 
  7445 ;;  temp_index      2   24[BANK0 ] int 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  p               1   29[BANK0 ] PTR unsigned char 
  7448 ;;		 -> serial(40), 
  7449 ;;  valor           2   27[BANK0 ] int 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7459 ;;      Params:         0       2       0       0       0
  7460 ;;      Locals:         0       3       0       0       0
  7461 ;;      Temps:          0       1       0       0       0
  7462 ;;      Totals:         0       6       0       0       0
  7463 ;;Total ram usage:        6 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:    2
  7466 ;; This function calls:
  7467 ;;		___fttol
  7468 ;;		i1___bmul
  7469 ;;		i1___ftmul
  7470 ;; This function is called by:
  7471 ;;		_protocolo
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           
  7476                           ;psect for function _le_temp
  7477  1CE2                     _le_temp:	
  7478                           
  7479                           ;incstack = 0
  7480                           ; Regs used in _le_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7481                           ;le_temp@p stored from wreg
  7482  1CE2  1283               	bcf	3,5	;RP0=0, select bank0
  7483  1CE3  1303               	bcf	3,6	;RP1=0, select bank0
  7484  1CE4  00BD               	movwf	le_temp@p
  7485                           
  7486                           ;main_sync.c: 446: int valor;;main_sync.c: 448: if(lerADpuro)
  7487  1CE5  1683               	bsf	3,5	;RP0=1, select bank3
  7488  1CE6  1703               	bsf	3,6	;RP1=1, select bank3
  7489  1CE7  0842               	movf	_lerADpuro^(0+384),w
  7490  1CE8  1903               	btfsc	3,2
  7491  1CE9  2CF8               	goto	i1l3322
  7492                           
  7493                           ;main_sync.c: 449: valor = valorAD[temp_index];
  7494  1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  7495  1CEB  1303               	bcf	3,6	;RP1=0, select bank0
  7496  1CEC  0838               	movf	le_temp@temp_index,w
  7497  1CED  00BA               	movwf	??_le_temp
  7498  1CEE  073A               	addwf	??_le_temp,w
  7499  1CEF  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
  7500  1CF0  0084               	movwf	4
  7501  1CF1  1783               	bsf	3,7	;select IRP bank3
  7502  1CF2  0800               	movf	0,w
  7503  1CF3  00BB               	movwf	le_temp@valor
  7504  1CF4  0A84               	incf	4,f
  7505  1CF5  0800               	movf	0,w
  7506  1CF6  00BC               	movwf	le_temp@valor+1
  7507  1CF7  2D2B               	goto	i1l3324
  7508  1CF8                     i1l3322:	
  7509                           
  7510                           ;main_sync.c: 450: else;main_sync.c: 451: valor = (int) (temp[temp_index]*100);
  7511  1CF8  3003               	movlw	3
  7512  1CF9  1283               	bcf	3,5	;RP0=0, select bank0
  7513  1CFA  1303               	bcf	3,6	;RP1=0, select bank0
  7514  1CFB  00BA               	movwf	??_le_temp
  7515  1CFC  083A               	movf	??_le_temp,w
  7516  1CFD  00F0               	movwf	i1___bmul@multiplicand
  7517  1CFE  0838               	movf	le_temp@temp_index,w
  7518  1CFF  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  7519  1D04  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
  7520  1D05  0084               	movwf	4
  7521  1D06  1783               	bsf	3,7	;select IRP bank3
  7522  1D07  0800               	movf	0,w
  7523  1D08  00FB               	movwf	i1___ftmul@f2
  7524  1D09  0A84               	incf	4,f
  7525  1D0A  0800               	movf	0,w
  7526  1D0B  00FC               	movwf	i1___ftmul@f2+1
  7527  1D0C  0A84               	incf	4,f
  7528  1D0D  0800               	movf	0,w
  7529  1D0E  00FD               	movwf	i1___ftmul@f2+2
  7530  1D0F  3000               	movlw	0
  7531  1D10  00F8               	movwf	i1___ftmul@f1
  7532  1D11  30C8               	movlw	200
  7533  1D12  00F9               	movwf	i1___ftmul@f1+1
  7534  1D13  3042               	movlw	66
  7535  1D14  00FA               	movwf	i1___ftmul@f1+2
  7536  1D15  160A  118A  21F2  160A  158A  	fcall	i1___ftmul
  7537  1D1A  0878               	movf	?i1___ftmul,w
  7538  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  7539  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  7540  1D1D  00AA               	movwf	___fttol@f1
  7541  1D1E  0879               	movf	?i1___ftmul+1,w
  7542  1D1F  00AB               	movwf	___fttol@f1+1
  7543  1D20  087A               	movf	?i1___ftmul+2,w
  7544  1D21  00AC               	movwf	___fttol@f1+2
  7545  1D22  120A  158A  2009   	fcall	___fttol
  7546  1D25  1283               	bcf	3,5	;RP0=0, select bank0
  7547  1D26  1303               	bcf	3,6	;RP1=0, select bank0
  7548  1D27  082B               	movf	?___fttol+1,w
  7549  1D28  00BC               	movwf	le_temp@valor+1
  7550  1D29  082A               	movf	?___fttol,w
  7551  1D2A  00BB               	movwf	le_temp@valor
  7552  1D2B                     i1l3324:	
  7553                           
  7554                           ;main_sync.c: 453: p[0] = valor >> 8;
  7555  1D2B  083C               	movf	le_temp@valor+1,w
  7556  1D2C  00BA               	movwf	??_le_temp
  7557  1D2D  083D               	movf	le_temp@p,w
  7558  1D2E  0084               	movwf	4
  7559  1D2F  083A               	movf	??_le_temp,w
  7560  1D30  1783               	bsf	3,7	;select IRP bank2
  7561  1D31  0080               	movwf	0
  7562                           
  7563                           ;main_sync.c: 454: p[1] = valor;
  7564  1D32  083B               	movf	le_temp@valor,w
  7565  1D33  00BA               	movwf	??_le_temp
  7566  1D34  0A3D               	incf	le_temp@p,w
  7567  1D35  0084               	movwf	4
  7568  1D36  083A               	movf	??_le_temp,w
  7569  1D37  0080               	movwf	0
  7570  1D38  0008               	return
  7571  1D39                     __end_of_le_temp:	
  7572                           
  7573                           	psect	text24
  7574  11F2                     __ptext24:	
  7575 ;; *************** function i1___ftmul *****************
  7576 ;; Defined at:
  7577 ;;		line 62 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftmul.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  f1              3    8[COMMON] float 
  7580 ;;  f2              3   11[COMMON] float 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  __ftmul         3    5[BANK0 ] unsigned um
  7583 ;;  __ftmul         1    9[BANK0 ] unsigned char 
  7584 ;;  __ftmul         1    8[BANK0 ] unsigned char 
  7585 ;;  __ftmul         1    4[BANK0 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  3    8[COMMON] float 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7595 ;;      Params:         6       0       0       0       0
  7596 ;;      Locals:         0       6       0       0       0
  7597 ;;      Temps:          0       4       0       0       0
  7598 ;;      Totals:         6      10       0       0       0
  7599 ;;Total ram usage:       16 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    1
  7602 ;; This function calls:
  7603 ;;		i1___ftpack
  7604 ;; This function is called by:
  7605 ;;		_le_temp
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           
  7610                           ;psect for function i1___ftmul
  7611  11F2                     i1___ftmul:	
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7615  11F2  0878               	movf	i1___ftmul@f1,w
  7616  11F3  1283               	bcf	3,5	;RP0=0, select bank0
  7617  11F4  1303               	bcf	3,6	;RP1=0, select bank0
  7618  11F5  00A0               	movwf	??i1___ftmul
  7619  11F6  0879               	movf	i1___ftmul@f1+1,w
  7620  11F7  00A1               	movwf	??i1___ftmul+1
  7621  11F8  087A               	movf	i1___ftmul@f1+2,w
  7622  11F9  00A2               	movwf	??i1___ftmul+2
  7623  11FA  1003               	clrc
  7624  11FB  0D21               	rlf	??i1___ftmul+1,w
  7625  11FC  0D22               	rlf	??i1___ftmul+2,w
  7626  11FD  00A3               	movwf	??i1___ftmul+3
  7627  11FE  0823               	movf	??i1___ftmul+3,w
  7628  11FF  00A4               	movwf	i1___ftmul@exp
  7629  1200  0824               	movf	i1___ftmul@exp,w
  7630  1201  1D03               	btfss	3,2
  7631  1202  2A0A               	goto	i1l3232
  7632  1203  3000               	movlw	0
  7633  1204  00F8               	movwf	?i1___ftmul
  7634  1205  3000               	movlw	0
  7635  1206  00F9               	movwf	?i1___ftmul+1
  7636  1207  3000               	movlw	0
  7637  1208  00FA               	movwf	?i1___ftmul+2
  7638  1209  0008               	return
  7639  120A                     i1l3232:	
  7640  120A  087B               	movf	i1___ftmul@f2,w
  7641  120B  00A0               	movwf	??i1___ftmul
  7642  120C  087C               	movf	i1___ftmul@f2+1,w
  7643  120D  00A1               	movwf	??i1___ftmul+1
  7644  120E  087D               	movf	i1___ftmul@f2+2,w
  7645  120F  00A2               	movwf	??i1___ftmul+2
  7646  1210  1003               	clrc
  7647  1211  0D21               	rlf	??i1___ftmul+1,w
  7648  1212  0D22               	rlf	??i1___ftmul+2,w
  7649  1213  00A3               	movwf	??i1___ftmul+3
  7650  1214  0823               	movf	??i1___ftmul+3,w
  7651  1215  00A9               	movwf	i1___ftmul@sign
  7652  1216  0829               	movf	i1___ftmul@sign,w
  7653  1217  1D03               	btfss	3,2
  7654  1218  2A20               	goto	i1l3238
  7655  1219  3000               	movlw	0
  7656  121A  00F8               	movwf	?i1___ftmul
  7657  121B  3000               	movlw	0
  7658  121C  00F9               	movwf	?i1___ftmul+1
  7659  121D  3000               	movlw	0
  7660  121E  00FA               	movwf	?i1___ftmul+2
  7661  121F  0008               	return
  7662  1220                     i1l3238:	
  7663  1220  0829               	movf	i1___ftmul@sign,w
  7664  1221  3E7B               	addlw	123
  7665  1222  00A0               	movwf	??i1___ftmul
  7666  1223  0820               	movf	??i1___ftmul,w
  7667  1224  07A4               	addwf	i1___ftmul@exp,f
  7668  1225  0878               	movf	i1___ftmul@f1,w
  7669  1226  00A0               	movwf	??i1___ftmul
  7670  1227  0879               	movf	i1___ftmul@f1+1,w
  7671  1228  00A1               	movwf	??i1___ftmul+1
  7672  1229  087A               	movf	i1___ftmul@f1+2,w
  7673  122A  00A2               	movwf	??i1___ftmul+2
  7674  122B  3010               	movlw	16
  7675  122C                     u340_25:	
  7676  122C  1003               	clrc
  7677  122D  0CA2               	rrf	??i1___ftmul+2,f
  7678  122E  0CA1               	rrf	??i1___ftmul+1,f
  7679  122F  0CA0               	rrf	??i1___ftmul,f
  7680  1230  3EFF               	addlw	-1
  7681  1231  1D03               	skipz
  7682  1232  2A2C               	goto	u340_25
  7683  1233  0820               	movf	??i1___ftmul,w
  7684  1234  00A3               	movwf	??i1___ftmul+3
  7685  1235  0823               	movf	??i1___ftmul+3,w
  7686  1236  00A9               	movwf	i1___ftmul@sign
  7687  1237  087B               	movf	i1___ftmul@f2,w
  7688  1238  00A0               	movwf	??i1___ftmul
  7689  1239  087C               	movf	i1___ftmul@f2+1,w
  7690  123A  00A1               	movwf	??i1___ftmul+1
  7691  123B  087D               	movf	i1___ftmul@f2+2,w
  7692  123C  00A2               	movwf	??i1___ftmul+2
  7693  123D  3010               	movlw	16
  7694  123E                     u341_25:	
  7695  123E  1003               	clrc
  7696  123F  0CA2               	rrf	??i1___ftmul+2,f
  7697  1240  0CA1               	rrf	??i1___ftmul+1,f
  7698  1241  0CA0               	rrf	??i1___ftmul,f
  7699  1242  3EFF               	addlw	-1
  7700  1243  1D03               	skipz
  7701  1244  2A3E               	goto	u341_25
  7702  1245  0820               	movf	??i1___ftmul,w
  7703  1246  00A3               	movwf	??i1___ftmul+3
  7704  1247  0823               	movf	??i1___ftmul+3,w
  7705  1248  06A9               	xorwf	i1___ftmul@sign,f
  7706  1249  3080               	movlw	128
  7707  124A  00A0               	movwf	??i1___ftmul
  7708  124B  0820               	movf	??i1___ftmul,w
  7709  124C  05A9               	andwf	i1___ftmul@sign,f
  7710  124D  17F9               	bsf	i1___ftmul@f1+1,7
  7711  124E  17FC               	bsf	i1___ftmul@f2+1,7
  7712  124F  30FF               	movlw	255
  7713  1250  05FB               	andwf	i1___ftmul@f2,f
  7714  1251  30FF               	movlw	255
  7715  1252  05FC               	andwf	i1___ftmul@f2+1,f
  7716  1253  3000               	movlw	0
  7717  1254  05FD               	andwf	i1___ftmul@f2+2,f
  7718  1255  3000               	movlw	0
  7719  1256  00A5               	movwf	i1___ftmul@f3_as_product
  7720  1257  3000               	movlw	0
  7721  1258  00A6               	movwf	i1___ftmul@f3_as_product+1
  7722  1259  3000               	movlw	0
  7723  125A  00A7               	movwf	i1___ftmul@f3_as_product+2
  7724  125B  3007               	movlw	7
  7725  125C  00A0               	movwf	??i1___ftmul
  7726  125D  0820               	movf	??i1___ftmul,w
  7727  125E  00A8               	movwf	i1___ftmul@cntr
  7728  125F                     i1l3250:	
  7729  125F  1C78               	btfss	i1___ftmul@f1,0
  7730  1260  2A6F               	goto	i1l3254
  7731  1261  087B               	movf	i1___ftmul@f2,w
  7732  1262  07A5               	addwf	i1___ftmul@f3_as_product,f
  7733  1263  087C               	movf	i1___ftmul@f2+1,w
  7734  1264  1103               	clrz
  7735  1265  1803               	skipnc
  7736  1266  0A7C               	incf	i1___ftmul@f2+1,w
  7737  1267  1D03               	btfss	3,2
  7738  1268  07A6               	addwf	i1___ftmul@f3_as_product+1,f
  7739  1269  087D               	movf	i1___ftmul@f2+2,w
  7740  126A  1103               	clrz
  7741  126B  1803               	skipnc
  7742  126C  0A7D               	incf	i1___ftmul@f2+2,w
  7743  126D  1D03               	btfss	3,2
  7744  126E  07A7               	addwf	i1___ftmul@f3_as_product+2,f
  7745  126F                     i1l3254:	
  7746  126F  3001               	movlw	1
  7747  1270                     u344_25:	
  7748  1270  1003               	clrc
  7749  1271  0CFA               	rrf	i1___ftmul@f1+2,f
  7750  1272  0CF9               	rrf	i1___ftmul@f1+1,f
  7751  1273  0CF8               	rrf	i1___ftmul@f1,f
  7752  1274  3EFF               	addlw	-1
  7753  1275  1D03               	skipz
  7754  1276  2A70               	goto	u344_25
  7755  1277  3001               	movlw	1
  7756  1278                     u345_25:	
  7757  1278  1003               	clrc
  7758  1279  0DFB               	rlf	i1___ftmul@f2,f
  7759  127A  0DFC               	rlf	i1___ftmul@f2+1,f
  7760  127B  0DFD               	rlf	i1___ftmul@f2+2,f
  7761  127C  3EFF               	addlw	-1
  7762  127D  1D03               	skipz
  7763  127E  2A78               	goto	u345_25
  7764  127F  3001               	movlw	1
  7765  1280  02A8               	subwf	i1___ftmul@cntr,f
  7766  1281  1D03               	btfss	3,2
  7767  1282  2A5F               	goto	i1l3250
  7768  1283  3009               	movlw	9
  7769  1284  00A0               	movwf	??i1___ftmul
  7770  1285  0820               	movf	??i1___ftmul,w
  7771  1286  00A8               	movwf	i1___ftmul@cntr
  7772  1287                     i1l3262:	
  7773  1287  1C78               	btfss	i1___ftmul@f1,0
  7774  1288  2A97               	goto	i1l3266
  7775  1289  087B               	movf	i1___ftmul@f2,w
  7776  128A  07A5               	addwf	i1___ftmul@f3_as_product,f
  7777  128B  087C               	movf	i1___ftmul@f2+1,w
  7778  128C  1103               	clrz
  7779  128D  1803               	skipnc
  7780  128E  0A7C               	incf	i1___ftmul@f2+1,w
  7781  128F  1D03               	btfss	3,2
  7782  1290  07A6               	addwf	i1___ftmul@f3_as_product+1,f
  7783  1291  087D               	movf	i1___ftmul@f2+2,w
  7784  1292  1103               	clrz
  7785  1293  1803               	skipnc
  7786  1294  0A7D               	incf	i1___ftmul@f2+2,w
  7787  1295  1D03               	btfss	3,2
  7788  1296  07A7               	addwf	i1___ftmul@f3_as_product+2,f
  7789  1297                     i1l3266:	
  7790  1297  3001               	movlw	1
  7791  1298                     u349_25:	
  7792  1298  1003               	clrc
  7793  1299  0CFA               	rrf	i1___ftmul@f1+2,f
  7794  129A  0CF9               	rrf	i1___ftmul@f1+1,f
  7795  129B  0CF8               	rrf	i1___ftmul@f1,f
  7796  129C  3EFF               	addlw	-1
  7797  129D  1D03               	skipz
  7798  129E  2A98               	goto	u349_25
  7799  129F  3001               	movlw	1
  7800  12A0                     u350_25:	
  7801  12A0  1003               	clrc
  7802  12A1  0CA7               	rrf	i1___ftmul@f3_as_product+2,f
  7803  12A2  0CA6               	rrf	i1___ftmul@f3_as_product+1,f
  7804  12A3  0CA5               	rrf	i1___ftmul@f3_as_product,f
  7805  12A4  3EFF               	addlw	-1
  7806  12A5  1D03               	skipz
  7807  12A6  2AA0               	goto	u350_25
  7808  12A7  3001               	movlw	1
  7809  12A8  02A8               	subwf	i1___ftmul@cntr,f
  7810  12A9  1D03               	btfss	3,2
  7811  12AA  2A87               	goto	i1l3262
  7812  12AB  0825               	movf	i1___ftmul@f3_as_product,w
  7813  12AC  00F0               	movwf	i1___ftpack@arg
  7814  12AD  0826               	movf	i1___ftmul@f3_as_product+1,w
  7815  12AE  00F1               	movwf	i1___ftpack@arg+1
  7816  12AF  0827               	movf	i1___ftmul@f3_as_product+2,w
  7817  12B0  00F2               	movwf	i1___ftpack@arg+2
  7818  12B1  0824               	movf	i1___ftmul@exp,w
  7819  12B2  00A0               	movwf	??i1___ftmul
  7820  12B3  0820               	movf	??i1___ftmul,w
  7821  12B4  00F3               	movwf	i1___ftpack@exp
  7822  12B5  0829               	movf	i1___ftmul@sign,w
  7823  12B6  00A1               	movwf	??i1___ftmul+1
  7824  12B7  0821               	movf	??i1___ftmul+1,w
  7825  12B8  00F4               	movwf	i1___ftpack@sign
  7826  12B9  160A  158A  25EA   	fcall	i1___ftpack
  7827  12BC  0870               	movf	?i1___ftpack,w
  7828  12BD  00F8               	movwf	?i1___ftmul
  7829  12BE  0871               	movf	?i1___ftpack+1,w
  7830  12BF  00F9               	movwf	?i1___ftmul+1
  7831  12C0  0872               	movf	?i1___ftpack+2,w
  7832  12C1  00FA               	movwf	?i1___ftmul+2
  7833  12C2  0008               	return
  7834  12C3                     __end_ofi1___ftmul:	
  7835                           
  7836                           	psect	text25
  7837  0809                     __ptext25:	
  7838 ;; *************** function ___fttol *****************
  7839 ;; Defined at:
  7840 ;;		line 44 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/fttol.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  f1              3   10[BANK0 ] float 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  lval            4   19[BANK0 ] unsigned long 
  7845 ;;  exp1            1   23[BANK0 ] unsigned char 
  7846 ;;  sign1           1   18[BANK0 ] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  4   10[BANK0 ] long 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7856 ;;      Params:         0       4       0       0       0
  7857 ;;      Locals:         0       6       0       0       0
  7858 ;;      Temps:          0       4       0       0       0
  7859 ;;      Totals:         0      14       0       0       0
  7860 ;;Total ram usage:       14 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_le_temp
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           
  7870                           ;psect for function ___fttol
  7871  0809                     ___fttol:	
  7872                           
  7873                           ;incstack = 0
  7874                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7875  0809  1283               	bcf	3,5	;RP0=0, select bank0
  7876  080A  1303               	bcf	3,6	;RP1=0, select bank0
  7877  080B  082A               	movf	___fttol@f1,w
  7878  080C  00AE               	movwf	??___fttol
  7879  080D  082B               	movf	___fttol@f1+1,w
  7880  080E  00AF               	movwf	??___fttol+1
  7881  080F  082C               	movf	___fttol@f1+2,w
  7882  0810  00B0               	movwf	??___fttol+2
  7883  0811  1003               	clrc
  7884  0812  0D2F               	rlf	??___fttol+1,w
  7885  0813  0D30               	rlf	??___fttol+2,w
  7886  0814  00B1               	movwf	??___fttol+3
  7887  0815  0831               	movf	??___fttol+3,w
  7888  0816  00B7               	movwf	___fttol@exp1
  7889  0817  0837               	movf	___fttol@exp1,w
  7890  0818  1D03               	btfss	3,2
  7891  0819  2823               	goto	i1l3112
  7892  081A                     i1l3108:	
  7893  081A  3000               	movlw	0
  7894  081B  00AD               	movwf	?___fttol+3
  7895  081C  3000               	movlw	0
  7896  081D  00AC               	movwf	?___fttol+2
  7897  081E  3000               	movlw	0
  7898  081F  00AB               	movwf	?___fttol+1
  7899  0820  3000               	movlw	0
  7900  0821  00AA               	movwf	?___fttol
  7901  0822  0008               	return
  7902  0823                     i1l3112:	
  7903  0823  082A               	movf	___fttol@f1,w
  7904  0824  00AE               	movwf	??___fttol
  7905  0825  082B               	movf	___fttol@f1+1,w
  7906  0826  00AF               	movwf	??___fttol+1
  7907  0827  082C               	movf	___fttol@f1+2,w
  7908  0828  00B0               	movwf	??___fttol+2
  7909  0829  3017               	movlw	23
  7910  082A                     u318_25:	
  7911  082A  1003               	clrc
  7912  082B  0CB0               	rrf	??___fttol+2,f
  7913  082C  0CAF               	rrf	??___fttol+1,f
  7914  082D  0CAE               	rrf	??___fttol,f
  7915  082E  3EFF               	addlw	-1
  7916  082F  1D03               	skipz
  7917  0830  282A               	goto	u318_25
  7918  0831  082E               	movf	??___fttol,w
  7919  0832  00B1               	movwf	??___fttol+3
  7920  0833  0831               	movf	??___fttol+3,w
  7921  0834  00B2               	movwf	___fttol@sign1
  7922  0835  17AB               	bsf	___fttol@f1+1,7
  7923  0836  30FF               	movlw	255
  7924  0837  05AA               	andwf	___fttol@f1,f
  7925  0838  30FF               	movlw	255
  7926  0839  05AB               	andwf	___fttol@f1+1,f
  7927  083A  3000               	movlw	0
  7928  083B  05AC               	andwf	___fttol@f1+2,f
  7929  083C  082A               	movf	___fttol@f1,w
  7930  083D  00B3               	movwf	___fttol@lval
  7931  083E  082B               	movf	___fttol@f1+1,w
  7932  083F  00B4               	movwf	___fttol@lval+1
  7933  0840  082C               	movf	___fttol@f1+2,w
  7934  0841  00B5               	movwf	___fttol@lval+2
  7935  0842  01B6               	clrf	___fttol@lval+3
  7936  0843  308E               	movlw	142
  7937  0844  02B7               	subwf	___fttol@exp1,f
  7938  0845  1FB7               	btfss	___fttol@exp1,7
  7939  0846  285C               	goto	i1l3132
  7940  0847  0837               	movf	___fttol@exp1,w
  7941  0848  3A80               	xorlw	128
  7942  0849  3E8F               	addlw	143
  7943  084A  1C03               	btfss	3,0
  7944  084B  281A               	goto	i1l3108
  7945  084C                     i1l3130:	
  7946  084C  3001               	movlw	1
  7947  084D                     u321_25:	
  7948  084D  1003               	clrc
  7949  084E  0CB6               	rrf	___fttol@lval+3,f
  7950  084F  0CB5               	rrf	___fttol@lval+2,f
  7951  0850  0CB4               	rrf	___fttol@lval+1,f
  7952  0851  0CB3               	rrf	___fttol@lval,f
  7953  0852  3EFF               	addlw	-1
  7954  0853  1D03               	skipz
  7955  0854  284D               	goto	u321_25
  7956  0855  3001               	movlw	1
  7957  0856  00AE               	movwf	??___fttol
  7958  0857  082E               	movf	??___fttol,w
  7959  0858  07B7               	addwf	___fttol@exp1,f
  7960  0859  1903               	btfsc	3,2
  7961  085A  286F               	goto	i1l3140
  7962  085B  284C               	goto	i1l3130
  7963  085C                     i1l3132:	
  7964  085C  3018               	movlw	24
  7965  085D  0237               	subwf	___fttol@exp1,w
  7966  085E  1803               	btfsc	3,0
  7967  085F  281A               	goto	i1l3108
  7968  0860                     i1l890:	
  7969  0860  0837               	movf	___fttol@exp1,w
  7970  0861  1903               	btfsc	3,2
  7971  0862  286F               	goto	i1l3140
  7972  0863  3001               	movlw	1
  7973  0864  00AE               	movwf	??___fttol
  7974  0865                     u324_25:	
  7975  0865  1003               	clrc
  7976  0866  0DB3               	rlf	___fttol@lval,f
  7977  0867  0DB4               	rlf	___fttol@lval+1,f
  7978  0868  0DB5               	rlf	___fttol@lval+2,f
  7979  0869  0DB6               	rlf	___fttol@lval+3,f
  7980  086A  0BAE               	decfsz	??___fttol,f
  7981  086B  2865               	goto	u324_25
  7982  086C  3001               	movlw	1
  7983  086D  02B7               	subwf	___fttol@exp1,f
  7984  086E  2860               	goto	i1l890
  7985  086F                     i1l3140:	
  7986  086F  0832               	movf	___fttol@sign1,w
  7987  0870  1903               	btfsc	3,2
  7988  0871  287D               	goto	i1l3144
  7989  0872  09B3               	comf	___fttol@lval,f
  7990  0873  09B4               	comf	___fttol@lval+1,f
  7991  0874  09B5               	comf	___fttol@lval+2,f
  7992  0875  09B6               	comf	___fttol@lval+3,f
  7993  0876  0AB3               	incf	___fttol@lval,f
  7994  0877  1903               	skipnz
  7995  0878  0AB4               	incf	___fttol@lval+1,f
  7996  0879  1903               	skipnz
  7997  087A  0AB5               	incf	___fttol@lval+2,f
  7998  087B  1903               	skipnz
  7999  087C  0AB6               	incf	___fttol@lval+3,f
  8000  087D                     i1l3144:	
  8001  087D  0836               	movf	___fttol@lval+3,w
  8002  087E  00AD               	movwf	?___fttol+3
  8003  087F  0835               	movf	___fttol@lval+2,w
  8004  0880  00AC               	movwf	?___fttol+2
  8005  0881  0834               	movf	___fttol@lval+1,w
  8006  0882  00AB               	movwf	?___fttol+1
  8007  0883  0833               	movf	___fttol@lval,w
  8008  0884  00AA               	movwf	?___fttol
  8009  0885  0008               	return
  8010  0886                     __end_of___fttol:	
  8011                           
  8012                           	psect	text26
  8013  1B0A                     __ptext26:	
  8014 ;; *************** function _le_k *****************
  8015 ;; Defined at:
  8016 ;;		line 492 in file "main_sync.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  p               1    wreg     PTR unsigned char 
  8019 ;;		 -> serial(40), 
  8020 ;;  n               2    9[COMMON] int 
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;  p               1   13[COMMON] PTR unsigned char 
  8023 ;;		 -> serial(40), 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1    wreg      void 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8033 ;;      Params:         2       0       0       0       0
  8034 ;;      Locals:         1       0       0       0       0
  8035 ;;      Temps:          2       0       0       0       0
  8036 ;;      Totals:         5       0       0       0       0
  8037 ;;Total ram usage:        5 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    1
  8040 ;; This function calls:
  8041 ;;		i1___bmul
  8042 ;;		i1_getEEPROM
  8043 ;; This function is called by:
  8044 ;;		_protocolo
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           
  8049                           ;psect for function _le_k
  8050  1B0A                     _le_k:	
  8051                           
  8052                           ;incstack = 0
  8053                           ; Regs used in _le_k: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8054                           ;le_k@p stored from wreg
  8055  1B0A  00FD               	movwf	le_k@p
  8056                           
  8057                           ;main_sync.c: 494: p[0] = getEEPROM(0+(n-1)*100);
  8058  1B0B  3064               	movlw	100
  8059  1B0C  00FB               	movwf	??_le_k
  8060  1B0D  087B               	movf	??_le_k,w
  8061  1B0E  00F0               	movwf	i1___bmul@multiplicand
  8062  1B0F  0879               	movf	le_k@n,w
  8063  1B10  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8064  1B15  3E9C               	addlw	156
  8065  1B16  160A  158A  21F8  160A  158A  	fcall	i1_getEEPROM
  8066  1B1B  00FC               	movwf	??_le_k+1
  8067  1B1C  087D               	movf	le_k@p,w
  8068  1B1D  0084               	movwf	4
  8069  1B1E  087C               	movf	??_le_k+1,w
  8070  1B1F  1783               	bsf	3,7	;select IRP bank2
  8071  1B20  0080               	movwf	0
  8072                           
  8073                           ;main_sync.c: 495: p[1] = getEEPROM(1+(n-1)*100);
  8074  1B21  3064               	movlw	100
  8075  1B22  00FB               	movwf	??_le_k
  8076  1B23  087B               	movf	??_le_k,w
  8077  1B24  00F0               	movwf	i1___bmul@multiplicand
  8078  1B25  0879               	movf	le_k@n,w
  8079  1B26  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8080  1B2B  3E9D               	addlw	157
  8081  1B2C  160A  158A  21F8   	fcall	i1_getEEPROM
  8082  1B2F  00FC               	movwf	??_le_k+1
  8083  1B30  0A7D               	incf	le_k@p,w
  8084  1B31  0084               	movwf	4
  8085  1B32  087C               	movf	??_le_k+1,w
  8086  1B33  1783               	bsf	3,7	;select IRP bank2
  8087  1B34  0080               	movwf	0
  8088  1B35  0008               	return
  8089  1B36                     __end_of_le_k:	
  8090                           
  8091                           	psect	text27
  8092  1ADE                     __ptext27:	
  8093 ;; *************** function _le_b *****************
  8094 ;; Defined at:
  8095 ;;		line 512 in file "main_sync.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  p               1    wreg     PTR unsigned char 
  8098 ;;		 -> serial(40), 
  8099 ;;  n               2    9[COMMON] int 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;  p               1   13[COMMON] PTR unsigned char 
  8102 ;;		 -> serial(40), 
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8112 ;;      Params:         2       0       0       0       0
  8113 ;;      Locals:         1       0       0       0       0
  8114 ;;      Temps:          2       0       0       0       0
  8115 ;;      Totals:         5       0       0       0       0
  8116 ;;Total ram usage:        5 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; Hardware stack levels required when called:    1
  8119 ;; This function calls:
  8120 ;;		i1___bmul
  8121 ;;		i1_getEEPROM
  8122 ;; This function is called by:
  8123 ;;		_protocolo
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _le_b
  8129  1ADE                     _le_b:	
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _le_b: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8133                           ;le_b@p stored from wreg
  8134  1ADE  00FD               	movwf	le_b@p
  8135                           
  8136                           ;main_sync.c: 514: p[0] = getEEPROM(2+(n-1)*100);
  8137  1ADF  3064               	movlw	100
  8138  1AE0  00FB               	movwf	??_le_b
  8139  1AE1  087B               	movf	??_le_b,w
  8140  1AE2  00F0               	movwf	i1___bmul@multiplicand
  8141  1AE3  0879               	movf	le_b@n,w
  8142  1AE4  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8143  1AE9  3E9E               	addlw	158
  8144  1AEA  160A  158A  21F8  160A  158A  	fcall	i1_getEEPROM
  8145  1AEF  00FC               	movwf	??_le_b+1
  8146  1AF0  087D               	movf	le_b@p,w
  8147  1AF1  0084               	movwf	4
  8148  1AF2  087C               	movf	??_le_b+1,w
  8149  1AF3  1783               	bsf	3,7	;select IRP bank2
  8150  1AF4  0080               	movwf	0
  8151                           
  8152                           ;main_sync.c: 515: p[1] = getEEPROM(3+(n-1)*100);
  8153  1AF5  3064               	movlw	100
  8154  1AF6  00FB               	movwf	??_le_b
  8155  1AF7  087B               	movf	??_le_b,w
  8156  1AF8  00F0               	movwf	i1___bmul@multiplicand
  8157  1AF9  0879               	movf	le_b@n,w
  8158  1AFA  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8159  1AFF  3E9F               	addlw	159
  8160  1B00  160A  158A  21F8   	fcall	i1_getEEPROM
  8161  1B03  00FC               	movwf	??_le_b+1
  8162  1B04  0A7D               	incf	le_b@p,w
  8163  1B05  0084               	movwf	4
  8164  1B06  087C               	movf	??_le_b+1,w
  8165  1B07  1783               	bsf	3,7	;select IRP bank2
  8166  1B08  0080               	movwf	0
  8167  1B09  0008               	return
  8168  1B0A                     __end_of_le_b:	
  8169                           
  8170                           	psect	text28
  8171  1C0E                     __ptext28:	
  8172 ;; *************** function _le_alpha *****************
  8173 ;; Defined at:
  8174 ;;		line 457 in file "main_sync.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  p               1    wreg     PTR unsigned char 
  8177 ;;		 -> serial(40), 
  8178 ;;  n               2    9[COMMON] int 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  p               1   13[COMMON] PTR unsigned char 
  8181 ;;		 -> serial(40), 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8191 ;;      Params:         2       0       0       0       0
  8192 ;;      Locals:         1       0       0       0       0
  8193 ;;      Temps:          2       0       0       0       0
  8194 ;;      Totals:         5       0       0       0       0
  8195 ;;Total ram usage:        5 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    1
  8198 ;; This function calls:
  8199 ;;		i1___bmul
  8200 ;;		i1_getEEPROM
  8201 ;; This function is called by:
  8202 ;;		_protocolo
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _le_alpha
  8208  1C0E                     _le_alpha:	
  8209                           
  8210                           ;incstack = 0
  8211                           ; Regs used in _le_alpha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8212                           ;le_alpha@p stored from wreg
  8213  1C0E  00FD               	movwf	le_alpha@p
  8214                           
  8215                           ;main_sync.c: 459: if(n == 1)
  8216  1C0F  0379               	decf	le_alpha@n,w
  8217  1C10  047A               	iorwf	le_alpha@n+1,w
  8218  1C11  1D03               	btfss	3,2
  8219  1C12  2C23               	goto	i1l3336
  8220                           
  8221                           ;main_sync.c: 460: {;main_sync.c: 461: p[0] = fator1;
  8222  1C13  1683               	bsf	3,5	;RP0=1, select bank3
  8223  1C14  1703               	bsf	3,6	;RP1=1, select bank3
  8224  1C15  0844               	movf	_fator1^(0+384),w
  8225  1C16  00FB               	movwf	??_le_alpha
  8226  1C17  087D               	movf	le_alpha@p,w
  8227  1C18  0084               	movwf	4
  8228  1C19  087B               	movf	??_le_alpha,w
  8229  1C1A  1783               	bsf	3,7	;select IRP bank2
  8230  1C1B  0080               	movwf	0
  8231                           
  8232                           ;main_sync.c: 462: p[1] = fator2;
  8233  1C1C  0843               	movf	_fator2^(0+384),w
  8234  1C1D  00FB               	movwf	??_le_alpha
  8235  1C1E  0A7D               	incf	le_alpha@p,w
  8236  1C1F  0084               	movwf	4
  8237  1C20  087B               	movf	??_le_alpha,w
  8238  1C21  0080               	movwf	0
  8239  1C22  0008               	return
  8240  1C23                     i1l3336:	
  8241                           
  8242                           ;main_sync.c: 465: else{;main_sync.c: 466: p[0] = getEEPROM(4+(n-1)*100);
  8243  1C23  3064               	movlw	100
  8244  1C24  00FB               	movwf	??_le_alpha
  8245  1C25  087B               	movf	??_le_alpha,w
  8246  1C26  00F0               	movwf	i1___bmul@multiplicand
  8247  1C27  0879               	movf	le_alpha@n,w
  8248  1C28  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8249  1C2D  3EA0               	addlw	160
  8250  1C2E  160A  158A  21F8  160A  158A  	fcall	i1_getEEPROM
  8251  1C33  00FC               	movwf	??_le_alpha+1
  8252  1C34  087D               	movf	le_alpha@p,w
  8253  1C35  0084               	movwf	4
  8254  1C36  087C               	movf	??_le_alpha+1,w
  8255  1C37  1783               	bsf	3,7	;select IRP bank2
  8256  1C38  0080               	movwf	0
  8257                           
  8258                           ;main_sync.c: 467: p[1] = getEEPROM(5+(n-1)*100);
  8259  1C39  3064               	movlw	100
  8260  1C3A  00FB               	movwf	??_le_alpha
  8261  1C3B  087B               	movf	??_le_alpha,w
  8262  1C3C  00F0               	movwf	i1___bmul@multiplicand
  8263  1C3D  0879               	movf	le_alpha@n,w
  8264  1C3E  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8265  1C43  3EA1               	addlw	161
  8266  1C44  160A  158A  21F8   	fcall	i1_getEEPROM
  8267  1C47  00FC               	movwf	??_le_alpha+1
  8268  1C48  0A7D               	incf	le_alpha@p,w
  8269  1C49  0084               	movwf	4
  8270  1C4A  087C               	movf	??_le_alpha+1,w
  8271  1C4B  1783               	bsf	3,7	;select IRP bank2
  8272  1C4C  0080               	movwf	0
  8273  1C4D  0008               	return
  8274  1C4E                     __end_of_le_alpha:	
  8275                           
  8276                           	psect	text29
  8277  19F8                     __ptext29:	
  8278 ;; *************** function i1_getEEPROM *****************
  8279 ;; Defined at:
  8280 ;;		line 815 in file "main_sync.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  c               1    wreg     unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  c               1    1[COMMON] unsigned char 
  8285 ;;  getEEPROM       1    2[COMMON] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      unsigned char 
  8288 ;; Registers used:
  8289 ;;		wreg
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8295 ;;      Params:         0       0       0       0       0
  8296 ;;      Locals:         2       0       0       0       0
  8297 ;;      Temps:          1       0       0       0       0
  8298 ;;      Totals:         3       0       0       0       0
  8299 ;;Total ram usage:        3 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_le_alpha
  8305 ;;		_le_k
  8306 ;;		_le_b
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function i1_getEEPROM
  8312  19F8                     i1_getEEPROM:	
  8313                           
  8314                           ;incstack = 0
  8315                           ; Regs used in i1_getEEPROM: [wreg]
  8316                           ;i1getEEPROM@c stored from wreg
  8317  19F8  00F1               	movwf	i1getEEPROM@c
  8318                           
  8319                           ;main_sync.c: 817: uint8_t aux;;main_sync.c: 819: RP0 = 0;
  8320  19F9  1283               	bcf	3,5	;RP0=0, select bank0
  8321  19FA  1303               	bcf	3,6	;RP1=0, select bank0
  8322  19FB  1283               	bcf	3,5	;volatile
  8323                           
  8324                           ;main_sync.c: 820: RP1 = 0;
  8325  19FC  1303               	bcf	3,6	;volatile
  8326                           
  8327                           ;main_sync.c: 821: EEADR = c;
  8328  19FD  0871               	movf	i1getEEPROM@c,w
  8329  19FE  1283               	bcf	3,5	;RP0=0, select bank2
  8330  19FF  1703               	bsf	3,6	;RP1=1, select bank2
  8331  1A00  008D               	movwf	13	;volatile
  8332                           
  8333                           ;main_sync.c: 822: EEPGD = 0;
  8334  1A01  1683               	bsf	3,5	;RP0=1, select bank3
  8335  1A02  1703               	bsf	3,6	;RP1=1, select bank3
  8336  1A03  138C               	bcf	12,7	;volsfr
  8337                           
  8338                           ;main_sync.c: 823: RD = 1;
  8339  1A04  140C               	bsf	12,0	;volsfr
  8340  1A05                     i1l437:	
  8341                           ;main_sync.c: 824: while(RD);
  8342                           
  8343  1A05  180C               	btfsc	12,0	;volsfr
  8344  1A06  2A05               	goto	i1l437
  8345                           
  8346                           ;main_sync.c: 825: aux = EEDAT;
  8347  1A07  1283               	bcf	3,5	;RP0=0, select bank2
  8348  1A08  1703               	bsf	3,6	;RP1=1, select bank2
  8349  1A09  080C               	movf	12,w	;volatile
  8350  1A0A  00F0               	movwf	??i1_getEEPROM
  8351  1A0B  0870               	movf	??i1_getEEPROM,w
  8352  1A0C  00F2               	movwf	i1getEEPROM@aux
  8353                           
  8354                           ;main_sync.c: 826: return aux;
  8355  1A0D  0872               	movf	i1getEEPROM@aux,w
  8356  1A0E  0008               	return
  8357  1A0F                     __end_ofi1_getEEPROM:	
  8358                           
  8359                           	psect	text30
  8360  1F62                     __ptext30:	
  8361 ;; *************** function _escreve_k *****************
  8362 ;; Defined at:
  8363 ;;		line 498 in file "main_sync.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  p               1    wreg     PTR unsigned char 
  8366 ;;		 -> serial(40), 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  p               1   18[BANK0 ] PTR unsigned char 
  8369 ;;		 -> serial(40), 
  8370 ;;  write_k         2   19[BANK0 ] int 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8380 ;;      Params:         0       0       0       0       0
  8381 ;;      Locals:         0       3       0       0       0
  8382 ;;      Temps:          0       2       0       0       0
  8383 ;;      Totals:         0       5       0       0       0
  8384 ;;Total ram usage:        5 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    2
  8387 ;; This function calls:
  8388 ;;		i1___awtoft
  8389 ;;		i1___bmul
  8390 ;;		i1___ftdiv
  8391 ;;		i1_setEEPROM
  8392 ;; This function is called by:
  8393 ;;		_protocolo
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           
  8398                           ;psect for function _escreve_k
  8399  1F62                     _escreve_k:	
  8400                           
  8401                           ;incstack = 0
  8402                           ; Regs used in _escreve_k: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8403                           ;escreve_k@p stored from wreg
  8404  1F62  1283               	bcf	3,5	;RP0=0, select bank0
  8405  1F63  1303               	bcf	3,6	;RP1=0, select bank0
  8406  1F64  00B2               	movwf	escreve_k@p
  8407                           
  8408                           ;main_sync.c: 500: int write_k;;main_sync.c: 502: k1 = p[0];
  8409  1F65  0832               	movf	escreve_k@p,w
  8410  1F66  0084               	movwf	4
  8411  1F67  1783               	bsf	3,7	;select IRP bank2
  8412  1F68  0800               	movf	0,w
  8413  1F69  00B0               	movwf	??_escreve_k
  8414  1F6A  0830               	movf	??_escreve_k,w
  8415  1F6B  1683               	bsf	3,5	;RP0=1, select bank3
  8416  1F6C  1703               	bsf	3,6	;RP1=1, select bank3
  8417  1F6D  00C8               	movwf	_k1^(0+384)
  8418                           
  8419                           ;main_sync.c: 503: k2 = p[1];
  8420  1F6E  1283               	bcf	3,5	;RP0=0, select bank0
  8421  1F6F  1303               	bcf	3,6	;RP1=0, select bank0
  8422  1F70  0A32               	incf	escreve_k@p,w
  8423  1F71  0084               	movwf	4
  8424  1F72  0800               	movf	0,w
  8425  1F73  00B0               	movwf	??_escreve_k
  8426  1F74  0830               	movf	??_escreve_k,w
  8427  1F75  1683               	bsf	3,5	;RP0=1, select bank3
  8428  1F76  1703               	bsf	3,6	;RP1=1, select bank3
  8429  1F77  00C7               	movwf	_k2^(0+384)
  8430                           
  8431                           ;main_sync.c: 505: for (write_k=0; write_k<3; write_k+=1){
  8432  1F78  1283               	bcf	3,5	;RP0=0, select bank0
  8433  1F79  1303               	bcf	3,6	;RP1=0, select bank0
  8434  1F7A  01B3               	clrf	escreve_k@write_k
  8435  1F7B  01B4               	clrf	escreve_k@write_k+1
  8436  1F7C                     i1l3364:	
  8437  1F7C  0834               	movf	escreve_k@write_k+1,w
  8438  1F7D  3A80               	xorlw	128
  8439  1F7E  00FF               	movwf	127
  8440  1F7F  3080               	movlw	128
  8441  1F80  027F               	subwf	127,w
  8442  1F81  1D03               	skipz
  8443  1F82  2F85               	goto	u360_25
  8444  1F83  3003               	movlw	3
  8445  1F84  0233               	subwf	escreve_k@write_k,w
  8446  1F85                     u360_25:	
  8447  1F85  1803               	btfsc	3,0
  8448  1F86  2FBF               	goto	i1l3374
  8449                           
  8450                           ;main_sync.c: 506: setEEPROM(0+(write_k)*100, k1);
  8451  1F87  1683               	bsf	3,5	;RP0=1, select bank3
  8452  1F88  1703               	bsf	3,6	;RP1=1, select bank3
  8453  1F89  0848               	movf	_k1^(0+384),w
  8454  1F8A  1283               	bcf	3,5	;RP0=0, select bank0
  8455  1F8B  1303               	bcf	3,6	;RP1=0, select bank0
  8456  1F8C  00B0               	movwf	??_escreve_k
  8457  1F8D  0830               	movf	??_escreve_k,w
  8458  1F8E  00F4               	movwf	i1setEEPROM@valor
  8459  1F8F  3064               	movlw	100
  8460  1F90  00B1               	movwf	??_escreve_k+1
  8461  1F91  0831               	movf	??_escreve_k+1,w
  8462  1F92  00F0               	movwf	i1___bmul@multiplicand
  8463  1F93  0833               	movf	escreve_k@write_k,w
  8464  1F94  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8465  1F99  120A  118A  27E6  160A  158A  	fcall	i1_setEEPROM
  8466                           
  8467                           ;main_sync.c: 507: setEEPROM(1+(write_k)*100, k2);
  8468  1F9E  1683               	bsf	3,5	;RP0=1, select bank3
  8469  1F9F  1703               	bsf	3,6	;RP1=1, select bank3
  8470  1FA0  0847               	movf	_k2^(0+384),w
  8471  1FA1  1283               	bcf	3,5	;RP0=0, select bank0
  8472  1FA2  1303               	bcf	3,6	;RP1=0, select bank0
  8473  1FA3  00B0               	movwf	??_escreve_k
  8474  1FA4  0830               	movf	??_escreve_k,w
  8475  1FA5  00F4               	movwf	i1setEEPROM@valor
  8476  1FA6  3064               	movlw	100
  8477  1FA7  00B1               	movwf	??_escreve_k+1
  8478  1FA8  0831               	movf	??_escreve_k+1,w
  8479  1FA9  00F0               	movwf	i1___bmul@multiplicand
  8480  1FAA  0833               	movf	escreve_k@write_k,w
  8481  1FAB  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8482  1FB0  3E01               	addlw	1
  8483  1FB1  120A  118A  27E6  160A  158A  	fcall	i1_setEEPROM
  8484  1FB6  3001               	movlw	1
  8485  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
  8486  1FB8  1303               	bcf	3,6	;RP1=0, select bank0
  8487  1FB9  07B3               	addwf	escreve_k@write_k,f
  8488  1FBA  1803               	skipnc
  8489  1FBB  0AB4               	incf	escreve_k@write_k+1,f
  8490  1FBC  3000               	movlw	0
  8491  1FBD  07B4               	addwf	escreve_k@write_k+1,f
  8492  1FBE  2F7C               	goto	i1l3364
  8493  1FBF                     i1l3374:	
  8494                           
  8495                           ;main_sync.c: 508: };main_sync.c: 509: k = ((float)((k1 << 8) + k2))/100;
  8496  1FBF  3000               	movlw	0
  8497  1FC0  1283               	bcf	3,5	;RP0=0, select bank0
  8498  1FC1  1303               	bcf	3,6	;RP1=0, select bank0
  8499  1FC2  00A0               	movwf	i1___ftdiv@f2
  8500  1FC3  30C8               	movlw	200
  8501  1FC4  00A1               	movwf	i1___ftdiv@f2+1
  8502  1FC5  3042               	movlw	66
  8503  1FC6  00A2               	movwf	i1___ftdiv@f2+2
  8504  1FC7  1683               	bsf	3,5	;RP0=1, select bank3
  8505  1FC8  1703               	bsf	3,6	;RP1=1, select bank3
  8506  1FC9  0848               	movf	_k1^(0+384),w
  8507  1FCA  1283               	bcf	3,5	;RP0=0, select bank0
  8508  1FCB  1303               	bcf	3,6	;RP1=0, select bank0
  8509  1FCC  00B0               	movwf	??_escreve_k
  8510  1FCD  01B1               	clrf	??_escreve_k+1
  8511  1FCE  0830               	movf	??_escreve_k,w
  8512  1FCF  00B1               	movwf	??_escreve_k+1
  8513  1FD0  01B0               	clrf	??_escreve_k
  8514  1FD1  1683               	bsf	3,5	;RP0=1, select bank3
  8515  1FD2  1703               	bsf	3,6	;RP1=1, select bank3
  8516  1FD3  0847               	movf	_k2^(0+384),w
  8517  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  8518  1FD5  1303               	bcf	3,6	;RP1=0, select bank0
  8519  1FD6  0730               	addwf	??_escreve_k,w
  8520  1FD7  00F8               	movwf	i1___awtoft@c
  8521  1FD8  3000               	movlw	0
  8522  1FD9  1803               	skipnc
  8523  1FDA  3001               	movlw	1
  8524  1FDB  0731               	addwf	??_escreve_k+1,w
  8525  1FDC  00F9               	movwf	i1___awtoft@c+1
  8526  1FDD  160A  158A  222C  160A  158A  	fcall	i1___awtoft
  8527  1FE2  0878               	movf	?i1___awtoft,w
  8528  1FE3  1283               	bcf	3,5	;RP0=0, select bank0
  8529  1FE4  1303               	bcf	3,6	;RP1=0, select bank0
  8530  1FE5  00A3               	movwf	i1___ftdiv@f1
  8531  1FE6  0879               	movf	?i1___awtoft+1,w
  8532  1FE7  00A4               	movwf	i1___ftdiv@f1+1
  8533  1FE8  087A               	movf	?i1___awtoft+2,w
  8534  1FE9  00A5               	movwf	i1___ftdiv@f1+2
  8535  1FEA  160A  118A  2082   	fcall	i1___ftdiv
  8536  1FED  1283               	bcf	3,5	;RP0=0, select bank0
  8537  1FEE  1303               	bcf	3,6	;RP1=0, select bank0
  8538  1FEF  0820               	movf	?i1___ftdiv,w
  8539  1FF0  1683               	bsf	3,5	;RP0=1, select bank3
  8540  1FF1  1703               	bsf	3,6	;RP1=1, select bank3
  8541  1FF2  00BF               	movwf	_k^(0+384)
  8542  1FF3  1283               	bcf	3,5	;RP0=0, select bank0
  8543  1FF4  1303               	bcf	3,6	;RP1=0, select bank0
  8544  1FF5  0821               	movf	?i1___ftdiv+1,w
  8545  1FF6  1683               	bsf	3,5	;RP0=1, select bank3
  8546  1FF7  1703               	bsf	3,6	;RP1=1, select bank3
  8547  1FF8  00C0               	movwf	(_k+1)^(0+384)
  8548  1FF9  1283               	bcf	3,5	;RP0=0, select bank0
  8549  1FFA  1303               	bcf	3,6	;RP1=0, select bank0
  8550  1FFB  0822               	movf	?i1___ftdiv+2,w
  8551  1FFC  1683               	bsf	3,5	;RP0=1, select bank3
  8552  1FFD  1703               	bsf	3,6	;RP1=1, select bank3
  8553  1FFE  00C1               	movwf	(_k+2)^(0+384)
  8554  1FFF  0008               	return
  8555  2000                     __end_of_escreve_k:	
  8556                           
  8557                           	psect	text31
  8558  1EC4                     __ptext31:	
  8559 ;; *************** function _escreve_b *****************
  8560 ;; Defined at:
  8561 ;;		line 518 in file "main_sync.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  p               1    wreg     PTR unsigned char 
  8564 ;;		 -> serial(40), 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  p               1   18[BANK0 ] PTR unsigned char 
  8567 ;;		 -> serial(40), 
  8568 ;;  write_b         2   19[BANK0 ] int 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8578 ;;      Params:         0       0       0       0       0
  8579 ;;      Locals:         0       3       0       0       0
  8580 ;;      Temps:          0       2       0       0       0
  8581 ;;      Totals:         0       5       0       0       0
  8582 ;;Total ram usage:        5 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    2
  8585 ;; This function calls:
  8586 ;;		i1___awtoft
  8587 ;;		i1___bmul
  8588 ;;		i1___ftdiv
  8589 ;;		i1_setEEPROM
  8590 ;; This function is called by:
  8591 ;;		_protocolo
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function _escreve_b
  8597  1EC4                     _escreve_b:	
  8598                           
  8599                           ;incstack = 0
  8600                           ; Regs used in _escreve_b: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8601                           ;escreve_b@p stored from wreg
  8602  1EC4  1283               	bcf	3,5	;RP0=0, select bank0
  8603  1EC5  1303               	bcf	3,6	;RP1=0, select bank0
  8604  1EC6  00B2               	movwf	escreve_b@p
  8605                           
  8606                           ;main_sync.c: 520: int write_b;;main_sync.c: 521: b1 = p[0];
  8607  1EC7  0832               	movf	escreve_b@p,w
  8608  1EC8  0084               	movwf	4
  8609  1EC9  1783               	bsf	3,7	;select IRP bank2
  8610  1ECA  0800               	movf	0,w
  8611  1ECB  00B0               	movwf	??_escreve_b
  8612  1ECC  0830               	movf	??_escreve_b,w
  8613  1ECD  1683               	bsf	3,5	;RP0=1, select bank3
  8614  1ECE  1703               	bsf	3,6	;RP1=1, select bank3
  8615  1ECF  00C6               	movwf	_b1^(0+384)
  8616                           
  8617                           ;main_sync.c: 522: b2 = p[1];
  8618  1ED0  1283               	bcf	3,5	;RP0=0, select bank0
  8619  1ED1  1303               	bcf	3,6	;RP1=0, select bank0
  8620  1ED2  0A32               	incf	escreve_b@p,w
  8621  1ED3  0084               	movwf	4
  8622  1ED4  0800               	movf	0,w
  8623  1ED5  00B0               	movwf	??_escreve_b
  8624  1ED6  0830               	movf	??_escreve_b,w
  8625  1ED7  1683               	bsf	3,5	;RP0=1, select bank3
  8626  1ED8  1703               	bsf	3,6	;RP1=1, select bank3
  8627  1ED9  00C5               	movwf	_b2^(0+384)
  8628                           
  8629                           ;main_sync.c: 524: for (write_b=0; write_b<3; write_b+=1){
  8630  1EDA  1283               	bcf	3,5	;RP0=0, select bank0
  8631  1EDB  1303               	bcf	3,6	;RP1=0, select bank0
  8632  1EDC  01B3               	clrf	escreve_b@write_b
  8633  1EDD  01B4               	clrf	escreve_b@write_b+1
  8634  1EDE                     i1l3386:	
  8635                           
  8636                           ;main_sync.c: 525: setEEPROM(2+(write_b)*100, b1);
  8637  1EDE  1683               	bsf	3,5	;RP0=1, select bank3
  8638  1EDF  1703               	bsf	3,6	;RP1=1, select bank3
  8639  1EE0  0846               	movf	_b1^(0+384),w
  8640  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  8641  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  8642  1EE3  00B0               	movwf	??_escreve_b
  8643  1EE4  0830               	movf	??_escreve_b,w
  8644  1EE5  00F4               	movwf	i1setEEPROM@valor
  8645  1EE6  3064               	movlw	100
  8646  1EE7  00B1               	movwf	??_escreve_b+1
  8647  1EE8  0831               	movf	??_escreve_b+1,w
  8648  1EE9  00F0               	movwf	i1___bmul@multiplicand
  8649  1EEA  0833               	movf	escreve_b@write_b,w
  8650  1EEB  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8651  1EF0  3E02               	addlw	2
  8652  1EF1  120A  118A  27E6  160A  158A  	fcall	i1_setEEPROM
  8653                           
  8654                           ;main_sync.c: 526: setEEPROM(3+(write_b)*100, b2);
  8655  1EF6  1683               	bsf	3,5	;RP0=1, select bank3
  8656  1EF7  1703               	bsf	3,6	;RP1=1, select bank3
  8657  1EF8  0845               	movf	_b2^(0+384),w
  8658  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  8659  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  8660  1EFB  00B0               	movwf	??_escreve_b
  8661  1EFC  0830               	movf	??_escreve_b,w
  8662  1EFD  00F4               	movwf	i1setEEPROM@valor
  8663  1EFE  3064               	movlw	100
  8664  1EFF  00B1               	movwf	??_escreve_b+1
  8665  1F00  0831               	movf	??_escreve_b+1,w
  8666  1F01  00F0               	movwf	i1___bmul@multiplicand
  8667  1F02  0833               	movf	escreve_b@write_b,w
  8668  1F03  160A  158A  21E7  160A  158A  	fcall	i1___bmul
  8669  1F08  3E03               	addlw	3
  8670  1F09  120A  118A  27E6  160A  158A  	fcall	i1_setEEPROM
  8671  1F0E  3001               	movlw	1
  8672  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  8673  1F10  1303               	bcf	3,6	;RP1=0, select bank0
  8674  1F11  07B3               	addwf	escreve_b@write_b,f
  8675  1F12  1803               	skipnc
  8676  1F13  0AB4               	incf	escreve_b@write_b+1,f
  8677  1F14  3000               	movlw	0
  8678  1F15  07B4               	addwf	escreve_b@write_b+1,f
  8679  1F16  0834               	movf	escreve_b@write_b+1,w
  8680  1F17  3A80               	xorlw	128
  8681  1F18  00FF               	movwf	127
  8682  1F19  3080               	movlw	128
  8683  1F1A  027F               	subwf	127,w
  8684  1F1B  1D03               	skipz
  8685  1F1C  2F1F               	goto	u361_25
  8686  1F1D  3003               	movlw	3
  8687  1F1E  0233               	subwf	escreve_b@write_b,w
  8688  1F1F                     u361_25:	
  8689  1F1F  1C03               	skipc
  8690  1F20  2EDE               	goto	i1l3386
  8691                           
  8692                           ;main_sync.c: 527: };main_sync.c: 528: b = ((float)((b1 << 8) + b2))/100;
  8693  1F21  3000               	movlw	0
  8694  1F22  1283               	bcf	3,5	;RP0=0, select bank0
  8695  1F23  1303               	bcf	3,6	;RP1=0, select bank0
  8696  1F24  00A0               	movwf	i1___ftdiv@f2
  8697  1F25  30C8               	movlw	200
  8698  1F26  00A1               	movwf	i1___ftdiv@f2+1
  8699  1F27  3042               	movlw	66
  8700  1F28  00A2               	movwf	i1___ftdiv@f2+2
  8701  1F29  1683               	bsf	3,5	;RP0=1, select bank3
  8702  1F2A  1703               	bsf	3,6	;RP1=1, select bank3
  8703  1F2B  0846               	movf	_b1^(0+384),w
  8704  1F2C  1283               	bcf	3,5	;RP0=0, select bank0
  8705  1F2D  1303               	bcf	3,6	;RP1=0, select bank0
  8706  1F2E  00B0               	movwf	??_escreve_b
  8707  1F2F  01B1               	clrf	??_escreve_b+1
  8708  1F30  0830               	movf	??_escreve_b,w
  8709  1F31  00B1               	movwf	??_escreve_b+1
  8710  1F32  01B0               	clrf	??_escreve_b
  8711  1F33  1683               	bsf	3,5	;RP0=1, select bank3
  8712  1F34  1703               	bsf	3,6	;RP1=1, select bank3
  8713  1F35  0845               	movf	_b2^(0+384),w
  8714  1F36  1283               	bcf	3,5	;RP0=0, select bank0
  8715  1F37  1303               	bcf	3,6	;RP1=0, select bank0
  8716  1F38  0730               	addwf	??_escreve_b,w
  8717  1F39  00F8               	movwf	i1___awtoft@c
  8718  1F3A  3000               	movlw	0
  8719  1F3B  1803               	skipnc
  8720  1F3C  3001               	movlw	1
  8721  1F3D  0731               	addwf	??_escreve_b+1,w
  8722  1F3E  00F9               	movwf	i1___awtoft@c+1
  8723  1F3F  160A  158A  222C  160A  158A  	fcall	i1___awtoft
  8724  1F44  0878               	movf	?i1___awtoft,w
  8725  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  8726  1F46  1303               	bcf	3,6	;RP1=0, select bank0
  8727  1F47  00A3               	movwf	i1___ftdiv@f1
  8728  1F48  0879               	movf	?i1___awtoft+1,w
  8729  1F49  00A4               	movwf	i1___ftdiv@f1+1
  8730  1F4A  087A               	movf	?i1___awtoft+2,w
  8731  1F4B  00A5               	movwf	i1___ftdiv@f1+2
  8732  1F4C  160A  118A  2082   	fcall	i1___ftdiv
  8733  1F4F  1283               	bcf	3,5	;RP0=0, select bank0
  8734  1F50  1303               	bcf	3,6	;RP1=0, select bank0
  8735  1F51  0820               	movf	?i1___ftdiv,w
  8736  1F52  1683               	bsf	3,5	;RP0=1, select bank3
  8737  1F53  1703               	bsf	3,6	;RP1=1, select bank3
  8738  1F54  00BC               	movwf	_b^(0+384)
  8739  1F55  1283               	bcf	3,5	;RP0=0, select bank0
  8740  1F56  1303               	bcf	3,6	;RP1=0, select bank0
  8741  1F57  0821               	movf	?i1___ftdiv+1,w
  8742  1F58  1683               	bsf	3,5	;RP0=1, select bank3
  8743  1F59  1703               	bsf	3,6	;RP1=1, select bank3
  8744  1F5A  00BD               	movwf	(_b+1)^(0+384)
  8745  1F5B  1283               	bcf	3,5	;RP0=0, select bank0
  8746  1F5C  1303               	bcf	3,6	;RP1=0, select bank0
  8747  1F5D  0822               	movf	?i1___ftdiv+2,w
  8748  1F5E  1683               	bsf	3,5	;RP0=1, select bank3
  8749  1F5F  1703               	bsf	3,6	;RP1=1, select bank3
  8750  1F60  00BE               	movwf	(_b+2)^(0+384)
  8751  1F61  0008               	return
  8752  1F62                     __end_of_escreve_b:	
  8753                           
  8754                           	psect	text32
  8755  1082                     __ptext32:	
  8756 ;; *************** function i1___ftdiv *****************
  8757 ;; Defined at:
  8758 ;;		line 56 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/ftdiv.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  f2              3    0[BANK0 ] float 
  8761 ;;  f1              3    3[BANK0 ] float 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  __ftdiv         3   11[BANK0 ] float 
  8764 ;;  __ftdiv         1   15[BANK0 ] unsigned char 
  8765 ;;  __ftdiv         1   14[BANK0 ] unsigned char 
  8766 ;;  __ftdiv         1   10[BANK0 ] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  3    0[BANK0 ] float 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2, status,0, pclath, cstack
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8776 ;;      Params:         0       6       0       0       0
  8777 ;;      Locals:         0       6       0       0       0
  8778 ;;      Temps:          0       4       0       0       0
  8779 ;;      Totals:         0      16       0       0       0
  8780 ;;Total ram usage:       16 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    1
  8783 ;; This function calls:
  8784 ;;		i1___ftpack
  8785 ;; This function is called by:
  8786 ;;		_escreve_k
  8787 ;;		_escreve_b
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function i1___ftdiv
  8793  1082                     i1___ftdiv:	
  8794                           
  8795                           ;incstack = 0
  8796                           ; Regs used in i1___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8797  1082  1283               	bcf	3,5	;RP0=0, select bank0
  8798  1083  1303               	bcf	3,6	;RP1=0, select bank0
  8799  1084  0823               	movf	i1___ftdiv@f1,w
  8800  1085  00A6               	movwf	??i1___ftdiv
  8801  1086  0824               	movf	i1___ftdiv@f1+1,w
  8802  1087  00A7               	movwf	??i1___ftdiv+1
  8803  1088  0825               	movf	i1___ftdiv@f1+2,w
  8804  1089  00A8               	movwf	??i1___ftdiv+2
  8805  108A  1003               	clrc
  8806  108B  0D27               	rlf	??i1___ftdiv+1,w
  8807  108C  0D28               	rlf	??i1___ftdiv+2,w
  8808  108D  00A9               	movwf	??i1___ftdiv+3
  8809  108E  0829               	movf	??i1___ftdiv+3,w
  8810  108F  00AE               	movwf	i1___ftdiv@exp
  8811  1090  082E               	movf	i1___ftdiv@exp,w
  8812  1091  1D03               	btfss	3,2
  8813  1092  289A               	goto	i1l3190
  8814  1093  3000               	movlw	0
  8815  1094  00A0               	movwf	?i1___ftdiv
  8816  1095  3000               	movlw	0
  8817  1096  00A1               	movwf	?i1___ftdiv+1
  8818  1097  3000               	movlw	0
  8819  1098  00A2               	movwf	?i1___ftdiv+2
  8820  1099  0008               	return
  8821  109A                     i1l3190:	
  8822  109A  0820               	movf	i1___ftdiv@f2,w
  8823  109B  00A6               	movwf	??i1___ftdiv
  8824  109C  0821               	movf	i1___ftdiv@f2+1,w
  8825  109D  00A7               	movwf	??i1___ftdiv+1
  8826  109E  0822               	movf	i1___ftdiv@f2+2,w
  8827  109F  00A8               	movwf	??i1___ftdiv+2
  8828  10A0  1003               	clrc
  8829  10A1  0D27               	rlf	??i1___ftdiv+1,w
  8830  10A2  0D28               	rlf	??i1___ftdiv+2,w
  8831  10A3  00A9               	movwf	??i1___ftdiv+3
  8832  10A4  0829               	movf	??i1___ftdiv+3,w
  8833  10A5  00AF               	movwf	i1___ftdiv@sign
  8834  10A6  082F               	movf	i1___ftdiv@sign,w
  8835  10A7  1D03               	btfss	3,2
  8836  10A8  28B0               	goto	i1l3196
  8837  10A9  3000               	movlw	0
  8838  10AA  00A0               	movwf	?i1___ftdiv
  8839  10AB  3000               	movlw	0
  8840  10AC  00A1               	movwf	?i1___ftdiv+1
  8841  10AD  3000               	movlw	0
  8842  10AE  00A2               	movwf	?i1___ftdiv+2
  8843  10AF  0008               	return
  8844  10B0                     i1l3196:	
  8845  10B0  3000               	movlw	0
  8846  10B1  00AB               	movwf	i1___ftdiv@f3
  8847  10B2  3000               	movlw	0
  8848  10B3  00AC               	movwf	i1___ftdiv@f3+1
  8849  10B4  3000               	movlw	0
  8850  10B5  00AD               	movwf	i1___ftdiv@f3+2
  8851  10B6  3089               	movlw	137
  8852  10B7  072F               	addwf	i1___ftdiv@sign,w
  8853  10B8  00A6               	movwf	??i1___ftdiv
  8854  10B9  0826               	movf	??i1___ftdiv,w
  8855  10BA  02AE               	subwf	i1___ftdiv@exp,f
  8856  10BB  0823               	movf	i1___ftdiv@f1,w
  8857  10BC  00A6               	movwf	??i1___ftdiv
  8858  10BD  0824               	movf	i1___ftdiv@f1+1,w
  8859  10BE  00A7               	movwf	??i1___ftdiv+1
  8860  10BF  0825               	movf	i1___ftdiv@f1+2,w
  8861  10C0  00A8               	movwf	??i1___ftdiv+2
  8862  10C1  3010               	movlw	16
  8863  10C2                     u332_25:	
  8864  10C2  1003               	clrc
  8865  10C3  0CA8               	rrf	??i1___ftdiv+2,f
  8866  10C4  0CA7               	rrf	??i1___ftdiv+1,f
  8867  10C5  0CA6               	rrf	??i1___ftdiv,f
  8868  10C6  3EFF               	addlw	-1
  8869  10C7  1D03               	skipz
  8870  10C8  28C2               	goto	u332_25
  8871  10C9  0826               	movf	??i1___ftdiv,w
  8872  10CA  00A9               	movwf	??i1___ftdiv+3
  8873  10CB  0829               	movf	??i1___ftdiv+3,w
  8874  10CC  00AF               	movwf	i1___ftdiv@sign
  8875  10CD  0820               	movf	i1___ftdiv@f2,w
  8876  10CE  00A6               	movwf	??i1___ftdiv
  8877  10CF  0821               	movf	i1___ftdiv@f2+1,w
  8878  10D0  00A7               	movwf	??i1___ftdiv+1
  8879  10D1  0822               	movf	i1___ftdiv@f2+2,w
  8880  10D2  00A8               	movwf	??i1___ftdiv+2
  8881  10D3  3010               	movlw	16
  8882  10D4                     u333_25:	
  8883  10D4  1003               	clrc
  8884  10D5  0CA8               	rrf	??i1___ftdiv+2,f
  8885  10D6  0CA7               	rrf	??i1___ftdiv+1,f
  8886  10D7  0CA6               	rrf	??i1___ftdiv,f
  8887  10D8  3EFF               	addlw	-1
  8888  10D9  1D03               	skipz
  8889  10DA  28D4               	goto	u333_25
  8890  10DB  0826               	movf	??i1___ftdiv,w
  8891  10DC  00A9               	movwf	??i1___ftdiv+3
  8892  10DD  0829               	movf	??i1___ftdiv+3,w
  8893  10DE  06AF               	xorwf	i1___ftdiv@sign,f
  8894  10DF  3080               	movlw	128
  8895  10E0  00A6               	movwf	??i1___ftdiv
  8896  10E1  0826               	movf	??i1___ftdiv,w
  8897  10E2  05AF               	andwf	i1___ftdiv@sign,f
  8898  10E3  17A4               	bsf	i1___ftdiv@f1+1,7
  8899  10E4  30FF               	movlw	255
  8900  10E5  05A3               	andwf	i1___ftdiv@f1,f
  8901  10E6  30FF               	movlw	255
  8902  10E7  05A4               	andwf	i1___ftdiv@f1+1,f
  8903  10E8  3000               	movlw	0
  8904  10E9  05A5               	andwf	i1___ftdiv@f1+2,f
  8905  10EA  17A1               	bsf	i1___ftdiv@f2+1,7
  8906  10EB  30FF               	movlw	255
  8907  10EC  05A0               	andwf	i1___ftdiv@f2,f
  8908  10ED  30FF               	movlw	255
  8909  10EE  05A1               	andwf	i1___ftdiv@f2+1,f
  8910  10EF  3000               	movlw	0
  8911  10F0  05A2               	andwf	i1___ftdiv@f2+2,f
  8912  10F1  3018               	movlw	24
  8913  10F2  00A6               	movwf	??i1___ftdiv
  8914  10F3  0826               	movf	??i1___ftdiv,w
  8915  10F4  00AA               	movwf	i1___ftdiv@cntr
  8916  10F5                     i1l3210:	
  8917  10F5  3001               	movlw	1
  8918  10F6                     u334_25:	
  8919  10F6  1003               	clrc
  8920  10F7  0DAB               	rlf	i1___ftdiv@f3,f
  8921  10F8  0DAC               	rlf	i1___ftdiv@f3+1,f
  8922  10F9  0DAD               	rlf	i1___ftdiv@f3+2,f
  8923  10FA  3EFF               	addlw	-1
  8924  10FB  1D03               	skipz
  8925  10FC  28F6               	goto	u334_25
  8926  10FD  0822               	movf	i1___ftdiv@f2+2,w
  8927  10FE  0225               	subwf	i1___ftdiv@f1+2,w
  8928  10FF  1D03               	skipz
  8929  1100  2907               	goto	u335_25
  8930  1101  0821               	movf	i1___ftdiv@f2+1,w
  8931  1102  0224               	subwf	i1___ftdiv@f1+1,w
  8932  1103  1D03               	skipz
  8933  1104  2907               	goto	u335_25
  8934  1105  0820               	movf	i1___ftdiv@f2,w
  8935  1106  0223               	subwf	i1___ftdiv@f1,w
  8936  1107                     u335_25:	
  8937  1107  1C03               	skipc
  8938  1108  2914               	goto	i1l3218
  8939  1109  0820               	movf	i1___ftdiv@f2,w
  8940  110A  02A3               	subwf	i1___ftdiv@f1,f
  8941  110B  0821               	movf	i1___ftdiv@f2+1,w
  8942  110C  1C03               	skipc
  8943  110D  0F21               	incfsz	i1___ftdiv@f2+1,w
  8944  110E  02A4               	subwf	i1___ftdiv@f1+1,f
  8945  110F  0822               	movf	i1___ftdiv@f2+2,w
  8946  1110  1C03               	skipc
  8947  1111  0A22               	incf	i1___ftdiv@f2+2,w
  8948  1112  02A5               	subwf	i1___ftdiv@f1+2,f
  8949  1113  142B               	bsf	i1___ftdiv@f3,0
  8950  1114                     i1l3218:	
  8951  1114  3001               	movlw	1
  8952  1115                     u336_25:	
  8953  1115  1003               	clrc
  8954  1116  0DA3               	rlf	i1___ftdiv@f1,f
  8955  1117  0DA4               	rlf	i1___ftdiv@f1+1,f
  8956  1118  0DA5               	rlf	i1___ftdiv@f1+2,f
  8957  1119  3EFF               	addlw	-1
  8958  111A  1D03               	skipz
  8959  111B  2915               	goto	u336_25
  8960  111C  3001               	movlw	1
  8961  111D  02AA               	subwf	i1___ftdiv@cntr,f
  8962  111E  1D03               	btfss	3,2
  8963  111F  28F5               	goto	i1l3210
  8964  1120  082B               	movf	i1___ftdiv@f3,w
  8965  1121  00F0               	movwf	i1___ftpack@arg
  8966  1122  082C               	movf	i1___ftdiv@f3+1,w
  8967  1123  00F1               	movwf	i1___ftpack@arg+1
  8968  1124  082D               	movf	i1___ftdiv@f3+2,w
  8969  1125  00F2               	movwf	i1___ftpack@arg+2
  8970  1126  082E               	movf	i1___ftdiv@exp,w
  8971  1127  00A6               	movwf	??i1___ftdiv
  8972  1128  0826               	movf	??i1___ftdiv,w
  8973  1129  00F3               	movwf	i1___ftpack@exp
  8974  112A  082F               	movf	i1___ftdiv@sign,w
  8975  112B  00A7               	movwf	??i1___ftdiv+1
  8976  112C  0827               	movf	??i1___ftdiv+1,w
  8977  112D  00F4               	movwf	i1___ftpack@sign
  8978  112E  160A  158A  25EA   	fcall	i1___ftpack
  8979  1131  0870               	movf	?i1___ftpack,w
  8980  1132  1283               	bcf	3,5	;RP0=0, select bank0
  8981  1133  1303               	bcf	3,6	;RP1=0, select bank0
  8982  1134  00A0               	movwf	?i1___ftdiv
  8983  1135  0871               	movf	?i1___ftpack+1,w
  8984  1136  00A1               	movwf	?i1___ftdiv+1
  8985  1137  0872               	movf	?i1___ftpack+2,w
  8986  1138  00A2               	movwf	?i1___ftdiv+2
  8987  1139  0008               	return
  8988  113A                     __end_ofi1___ftdiv:	
  8989                           
  8990                           	psect	text33
  8991  1A2C                     __ptext33:	
  8992 ;; *************** function i1___awtoft *****************
  8993 ;; Defined at:
  8994 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awtoft.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  c               2    8[COMMON] int 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  __awtoft        1   13[COMMON] unsigned char 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  3    8[COMMON] float 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0, pclath, cstack
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9008 ;;      Params:         3       0       0       0       0
  9009 ;;      Locals:         1       0       0       0       0
  9010 ;;      Temps:          2       0       0       0       0
  9011 ;;      Totals:         6       0       0       0       0
  9012 ;;Total ram usage:        6 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:    1
  9015 ;; This function calls:
  9016 ;;		i1___ftpack
  9017 ;; This function is called by:
  9018 ;;		_escreve_k
  9019 ;;		_escreve_b
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function i1___awtoft
  9025  1A2C                     i1___awtoft:	
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in i1___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9029  1A2C  01FD               	clrf	i1___awtoft@sign
  9030  1A2D  1FF9               	btfss	i1___awtoft@c+1,7
  9031  1A2E  2A36               	goto	i1l3180
  9032  1A2F  09F8               	comf	i1___awtoft@c,f
  9033  1A30  09F9               	comf	i1___awtoft@c+1,f
  9034  1A31  0AF8               	incf	i1___awtoft@c,f
  9035  1A32  1903               	skipnz
  9036  1A33  0AF9               	incf	i1___awtoft@c+1,f
  9037  1A34  01FD               	clrf	i1___awtoft@sign
  9038  1A35  0AFD               	incf	i1___awtoft@sign,f
  9039  1A36                     i1l3180:	
  9040  1A36  0878               	movf	i1___awtoft@c,w
  9041  1A37  00F0               	movwf	i1___ftpack@arg
  9042  1A38  0879               	movf	i1___awtoft@c+1,w
  9043  1A39  00F1               	movwf	i1___ftpack@arg+1
  9044  1A3A  01F2               	clrf	i1___ftpack@arg+2
  9045  1A3B  308E               	movlw	142
  9046  1A3C  00FB               	movwf	??i1___awtoft
  9047  1A3D  087B               	movf	??i1___awtoft,w
  9048  1A3E  00F3               	movwf	i1___ftpack@exp
  9049  1A3F  087D               	movf	i1___awtoft@sign,w
  9050  1A40  00FC               	movwf	??i1___awtoft+1
  9051  1A41  087C               	movf	??i1___awtoft+1,w
  9052  1A42  00F4               	movwf	i1___ftpack@sign
  9053  1A43  160A  158A  25EA   	fcall	i1___ftpack
  9054  1A46  0870               	movf	?i1___ftpack,w
  9055  1A47  00F8               	movwf	?i1___awtoft
  9056  1A48  0871               	movf	?i1___ftpack+1,w
  9057  1A49  00F9               	movwf	?i1___awtoft+1
  9058  1A4A  0872               	movf	?i1___ftpack+2,w
  9059  1A4B  00FA               	movwf	?i1___awtoft+2
  9060  1A4C  0008               	return
  9061  1A4D                     __end_ofi1___awtoft:	
  9062                           
  9063                           	psect	text34
  9064  1DEA                     __ptext34:	
  9065 ;; *************** function i1___ftpack *****************
  9066 ;; Defined at:
  9067 ;;		line 62 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/float.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  arg             3    0[COMMON] unsigned um
  9070 ;;  exp             1    3[COMMON] unsigned char 
  9071 ;;  sign            1    4[COMMON] unsigned char 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  3    0[COMMON] float 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         5       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0
  9085 ;;      Temps:          3       0       0       0       0
  9086 ;;      Totals:         8       0       0       0       0
  9087 ;;Total ram usage:        8 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		i1___awtoft
  9093 ;;		i1___ftdiv
  9094 ;;		i1___ftmul
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           
  9099                           ;psect for function i1___ftpack
  9100  1DEA                     i1___ftpack:	
  9101                           
  9102                           ;incstack = 0
  9103                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  9104  1DEA  0873               	movf	i1___ftpack@exp,w
  9105  1DEB  1903               	btfsc	3,2
  9106  1DEC  2DF2               	goto	i1l2788
  9107  1DED  0872               	movf	i1___ftpack@arg+2,w
  9108  1DEE  0471               	iorwf	i1___ftpack@arg+1,w
  9109  1DEF  0470               	iorwf	i1___ftpack@arg,w
  9110  1DF0  1D03               	skipz
  9111  1DF1  2E05               	goto	i1l2794
  9112  1DF2                     i1l2788:	
  9113  1DF2  3000               	movlw	0
  9114  1DF3  00F0               	movwf	?i1___ftpack
  9115  1DF4  3000               	movlw	0
  9116  1DF5  00F1               	movwf	?i1___ftpack+1
  9117  1DF6  3000               	movlw	0
  9118  1DF7  00F2               	movwf	?i1___ftpack+2
  9119  1DF8  0008               	return
  9120  1DF9                     i1l2792:	
  9121  1DF9  3001               	movlw	1
  9122  1DFA  00F5               	movwf	??i1___ftpack
  9123  1DFB  0875               	movf	??i1___ftpack,w
  9124  1DFC  07F3               	addwf	i1___ftpack@exp,f
  9125  1DFD  3001               	movlw	1
  9126  1DFE                     u266_25:	
  9127  1DFE  1003               	clrc
  9128  1DFF  0CF2               	rrf	i1___ftpack@arg+2,f
  9129  1E00  0CF1               	rrf	i1___ftpack@arg+1,f
  9130  1E01  0CF0               	rrf	i1___ftpack@arg,f
  9131  1E02  3EFF               	addlw	-1
  9132  1E03  1D03               	skipz
  9133  1E04  2DFE               	goto	u266_25
  9134  1E05                     i1l2794:	
  9135  1E05  30FE               	movlw	254
  9136  1E06  0572               	andwf	i1___ftpack@arg+2,w
  9137  1E07  1903               	btfsc	3,2
  9138  1E08  2E20               	goto	i1l799
  9139  1E09  2DF9               	goto	i1l2792
  9140  1E0A                     i1l2796:	
  9141  1E0A  3001               	movlw	1
  9142  1E0B  00F5               	movwf	??i1___ftpack
  9143  1E0C  0875               	movf	??i1___ftpack,w
  9144  1E0D  07F3               	addwf	i1___ftpack@exp,f
  9145  1E0E  3001               	movlw	1
  9146  1E0F  07F0               	addwf	i1___ftpack@arg,f
  9147  1E10  3000               	movlw	0
  9148  1E11  1803               	skipnc
  9149  1E12  3001               	movlw	1
  9150  1E13  07F1               	addwf	i1___ftpack@arg+1,f
  9151  1E14  3000               	movlw	0
  9152  1E15  1803               	skipnc
  9153  1E16  3001               	movlw	1
  9154  1E17  07F2               	addwf	i1___ftpack@arg+2,f
  9155  1E18  3001               	movlw	1
  9156  1E19                     u268_25:	
  9157  1E19  1003               	clrc
  9158  1E1A  0CF2               	rrf	i1___ftpack@arg+2,f
  9159  1E1B  0CF1               	rrf	i1___ftpack@arg+1,f
  9160  1E1C  0CF0               	rrf	i1___ftpack@arg,f
  9161  1E1D  3EFF               	addlw	-1
  9162  1E1E  1D03               	skipz
  9163  1E1F  2E19               	goto	u268_25
  9164  1E20                     i1l799:	
  9165  1E20  30FF               	movlw	255
  9166  1E21  0572               	andwf	i1___ftpack@arg+2,w
  9167  1E22  1903               	btfsc	3,2
  9168  1E23  2E33               	goto	i1l2804
  9169  1E24  2E0A               	goto	i1l2796
  9170  1E25                     i1l2806:	
  9171  1E25  3002               	movlw	2
  9172  1E26  0273               	subwf	i1___ftpack@exp,w
  9173  1E27  1C03               	btfss	3,0
  9174  1E28  2E35               	goto	i1l806
  9175  1E29  3001               	movlw	1
  9176  1E2A  02F3               	subwf	i1___ftpack@exp,f
  9177  1E2B  3001               	movlw	1
  9178  1E2C                     u270_25:	
  9179  1E2C  1003               	clrc
  9180  1E2D  0DF0               	rlf	i1___ftpack@arg,f
  9181  1E2E  0DF1               	rlf	i1___ftpack@arg+1,f
  9182  1E2F  0DF2               	rlf	i1___ftpack@arg+2,f
  9183  1E30  3EFF               	addlw	-1
  9184  1E31  1D03               	skipz
  9185  1E32  2E2C               	goto	u270_25
  9186  1E33                     i1l2804:	
  9187  1E33  1FF1               	btfss	i1___ftpack@arg+1,7
  9188  1E34  2E25               	goto	i1l2806
  9189  1E35                     i1l806:	
  9190  1E35  1873               	btfsc	i1___ftpack@exp,0
  9191  1E36  2E3D               	goto	i1l807
  9192  1E37  30FF               	movlw	255
  9193  1E38  05F0               	andwf	i1___ftpack@arg,f
  9194  1E39  307F               	movlw	127
  9195  1E3A  05F1               	andwf	i1___ftpack@arg+1,f
  9196  1E3B  30FF               	movlw	255
  9197  1E3C  05F2               	andwf	i1___ftpack@arg+2,f
  9198  1E3D                     i1l807:	
  9199  1E3D  1003               	clrc
  9200  1E3E  0CF3               	rrf	i1___ftpack@exp,f
  9201  1E3F  0873               	movf	i1___ftpack@exp,w
  9202  1E40  00F5               	movwf	??i1___ftpack
  9203  1E41  01F6               	clrf	??i1___ftpack+1
  9204  1E42  01F7               	clrf	??i1___ftpack+2
  9205  1E43  3010               	movlw	16
  9206  1E44                     u274_25:	
  9207  1E44  1003               	clrc
  9208  1E45  0DF5               	rlf	??i1___ftpack,f
  9209  1E46  0DF6               	rlf	??i1___ftpack+1,f
  9210  1E47  0DF7               	rlf	??i1___ftpack+2,f
  9211  1E48  3EFF               	addlw	-1
  9212  1E49  1D03               	skipz
  9213  1E4A  2E44               	goto	u274_25
  9214  1E4B  0875               	movf	??i1___ftpack,w
  9215  1E4C  04F0               	iorwf	i1___ftpack@arg,f
  9216  1E4D  0876               	movf	??i1___ftpack+1,w
  9217  1E4E  04F1               	iorwf	i1___ftpack@arg+1,f
  9218  1E4F  0877               	movf	??i1___ftpack+2,w
  9219  1E50  04F2               	iorwf	i1___ftpack@arg+2,f
  9220  1E51  0874               	movf	i1___ftpack@sign,w
  9221  1E52  1903               	btfsc	3,2
  9222  1E53  0008               	return
  9223  1E54  17F2               	bsf	i1___ftpack@arg+2,7
  9224  1E55  0008               	return
  9225  1E56                     __end_ofi1___ftpack:	
  9226                           
  9227                           	psect	text35
  9228  1013                     __ptext35:	
  9229 ;; *************** function _escreve_alpha *****************
  9230 ;; Defined at:
  9231 ;;		line 472 in file "main_sync.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  p               1    wreg     PTR unsigned char 
  9234 ;;		 -> serial(40), 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  p               1   10[COMMON] PTR unsigned char 
  9237 ;;		 -> serial(40), 
  9238 ;;  w_alpha         2   11[COMMON] int 
  9239 ;;  novo_fator      2    8[COMMON] int 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9249 ;;      Params:         0       0       0       0       0
  9250 ;;      Locals:         5       0       0       0       0
  9251 ;;      Temps:          2       0       0       0       0
  9252 ;;      Totals:         7       0       0       0       0
  9253 ;;Total ram usage:        7 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    1
  9256 ;; This function calls:
  9257 ;;		i1___bmul
  9258 ;;		i1_setEEPROM
  9259 ;; This function is called by:
  9260 ;;		_protocolo
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function _escreve_alpha
  9266  1013                     _escreve_alpha:	
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in _escreve_alpha: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9270                           ;escreve_alpha@p stored from wreg
  9271  1013  00FA               	movwf	escreve_alpha@p
  9272                           
  9273                           ;main_sync.c: 474: int w_alpha;;main_sync.c: 476: fator1 = p[0];
  9274  1014  087A               	movf	escreve_alpha@p,w
  9275  1015  0084               	movwf	4
  9276  1016  1783               	bsf	3,7	;select IRP bank2
  9277  1017  0800               	movf	0,w
  9278  1018  00F6               	movwf	??_escreve_alpha
  9279  1019  0876               	movf	??_escreve_alpha,w
  9280  101A  1683               	bsf	3,5	;RP0=1, select bank3
  9281  101B  1703               	bsf	3,6	;RP1=1, select bank3
  9282  101C  00C4               	movwf	_fator1^(0+384)
  9283                           
  9284                           ;main_sync.c: 477: fator2 = p[1];
  9285  101D  0A7A               	incf	escreve_alpha@p,w
  9286  101E  0084               	movwf	4
  9287  101F  0800               	movf	0,w
  9288  1020  00F6               	movwf	??_escreve_alpha
  9289  1021  0876               	movf	??_escreve_alpha,w
  9290  1022  00C3               	movwf	_fator2^(0+384)
  9291                           
  9292                           ;main_sync.c: 479: int novo_fator = (fator1 << 8) + fator2;
  9293  1023  0844               	movf	_fator1^(0+384),w
  9294  1024  00F6               	movwf	??_escreve_alpha
  9295  1025  01F7               	clrf	??_escreve_alpha+1
  9296  1026  0876               	movf	??_escreve_alpha,w
  9297  1027  00F7               	movwf	??_escreve_alpha+1
  9298  1028  01F6               	clrf	??_escreve_alpha
  9299  1029  0843               	movf	_fator2^(0+384),w
  9300  102A  0776               	addwf	??_escreve_alpha,w
  9301  102B  00F8               	movwf	escreve_alpha@novo_fator
  9302  102C  3000               	movlw	0
  9303  102D  1803               	skipnc
  9304  102E  3001               	movlw	1
  9305  102F  0777               	addwf	??_escreve_alpha+1,w
  9306  1030  00F9               	movwf	escreve_alpha@novo_fator+1
  9307                           
  9308                           ;main_sync.c: 480: if(novo_fator < 1000)
  9309  1031  0879               	movf	escreve_alpha@novo_fator+1,w
  9310  1032  3A80               	xorlw	128
  9311  1033  00FF               	movwf	127
  9312  1034  3083               	movlw	131
  9313  1035  027F               	subwf	127,w
  9314  1036  1D03               	skipz
  9315  1037  283A               	goto	u358_25
  9316  1038  30E8               	movlw	232
  9317  1039  0278               	subwf	escreve_alpha@novo_fator,w
  9318  103A                     u358_25:	
  9319  103A  1803               	skipnc
  9320  103B  2842               	goto	i1l3346
  9321                           
  9322                           ;main_sync.c: 481: {;main_sync.c: 482: fator = novo_fator;
  9323  103C  0879               	movf	escreve_alpha@novo_fator+1,w
  9324  103D  1683               	bsf	3,5	;RP0=1, select bank3
  9325  103E  1703               	bsf	3,6	;RP1=1, select bank3
  9326  103F  00E2               	movwf	(_fator+1)^(0+384)
  9327  1040  0878               	movf	escreve_alpha@novo_fator,w
  9328  1041  00E1               	movwf	_fator^(0+384)
  9329  1042                     i1l3346:	
  9330                           
  9331                           ;main_sync.c: 483: };main_sync.c: 485: for (w_alpha=0; w_alpha<3; w_alpha+=1)
  9332  1042  01FB               	clrf	escreve_alpha@w_alpha
  9333  1043  01FC               	clrf	escreve_alpha@w_alpha+1
  9334  1044                     i1l3352:	
  9335                           
  9336                           ;main_sync.c: 486: {;main_sync.c: 487: setEEPROM(4+(w_alpha)*100, fator1);
  9337  1044  1683               	bsf	3,5	;RP0=1, select bank3
  9338  1045  1703               	bsf	3,6	;RP1=1, select bank3
  9339  1046  0844               	movf	_fator1^(0+384),w
  9340  1047  00F6               	movwf	??_escreve_alpha
  9341  1048  0876               	movf	??_escreve_alpha,w
  9342  1049  00F4               	movwf	i1setEEPROM@valor
  9343  104A  3064               	movlw	100
  9344  104B  00F7               	movwf	??_escreve_alpha+1
  9345  104C  0877               	movf	??_escreve_alpha+1,w
  9346  104D  00F0               	movwf	i1___bmul@multiplicand
  9347  104E  087B               	movf	escreve_alpha@w_alpha,w
  9348  104F  160A  158A  21E7  160A  118A  	fcall	i1___bmul
  9349  1054  3E04               	addlw	4
  9350  1055  120A  118A  27E6  160A  118A  	fcall	i1_setEEPROM
  9351                           
  9352                           ;main_sync.c: 488: setEEPROM(5+(w_alpha)*100, fator2);
  9353  105A  1683               	bsf	3,5	;RP0=1, select bank3
  9354  105B  1703               	bsf	3,6	;RP1=1, select bank3
  9355  105C  0843               	movf	_fator2^(0+384),w
  9356  105D  00F6               	movwf	??_escreve_alpha
  9357  105E  0876               	movf	??_escreve_alpha,w
  9358  105F  00F4               	movwf	i1setEEPROM@valor
  9359  1060  3064               	movlw	100
  9360  1061  00F7               	movwf	??_escreve_alpha+1
  9361  1062  0877               	movf	??_escreve_alpha+1,w
  9362  1063  00F0               	movwf	i1___bmul@multiplicand
  9363  1064  087B               	movf	escreve_alpha@w_alpha,w
  9364  1065  160A  158A  21E7  160A  118A  	fcall	i1___bmul
  9365  106A  3E05               	addlw	5
  9366  106B  120A  118A  27E6  160A  118A  	fcall	i1_setEEPROM
  9367  1070  3001               	movlw	1
  9368  1071  07FB               	addwf	escreve_alpha@w_alpha,f
  9369  1072  1803               	skipnc
  9370  1073  0AFC               	incf	escreve_alpha@w_alpha+1,f
  9371  1074  3000               	movlw	0
  9372  1075  07FC               	addwf	escreve_alpha@w_alpha+1,f
  9373  1076  087C               	movf	escreve_alpha@w_alpha+1,w
  9374  1077  3A80               	xorlw	128
  9375  1078  00FF               	movwf	127
  9376  1079  3080               	movlw	128
  9377  107A  027F               	subwf	127,w
  9378  107B  1D03               	skipz
  9379  107C  287F               	goto	u359_25
  9380  107D  3003               	movlw	3
  9381  107E  027B               	subwf	escreve_alpha@w_alpha,w
  9382  107F                     u359_25:	
  9383  107F  1803               	btfsc	3,0
  9384  1080  0008               	return
  9385  1081  2844               	goto	i1l3352
  9386  1082                     __end_of_escreve_alpha:	
  9387                           
  9388                           	psect	text36
  9389  07E6                     __ptext36:	
  9390 ;; *************** function i1_setEEPROM *****************
  9391 ;; Defined at:
  9392 ;;		line 829 in file "main_sync.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  addr            1    wreg     unsigned char 
  9395 ;;  valor           1    4[COMMON] unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  addr            1    5[COMMON] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9407 ;;      Params:         1       0       0       0       0
  9408 ;;      Locals:         1       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0
  9410 ;;      Totals:         2       0       0       0       0
  9411 ;;Total ram usage:        2 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_escreve_alpha
  9417 ;;		_escreve_k
  9418 ;;		_escreve_b
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function i1_setEEPROM
  9424  07E6                     i1_setEEPROM:	
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in i1_setEEPROM: [wreg]
  9428                           ;i1setEEPROM@addr stored from wreg
  9429  07E6  00F5               	movwf	i1setEEPROM@addr
  9430                           
  9431                           ;main_sync.c: 831: RP0 = 0;
  9432  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  9433  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  9434  07E9  1283               	bcf	3,5	;volatile
  9435                           
  9436                           ;main_sync.c: 832: RP1 = 0;
  9437  07EA  1303               	bcf	3,6	;volatile
  9438                           
  9439                           ;main_sync.c: 833: EEADR = addr;
  9440  07EB  0875               	movf	i1setEEPROM@addr,w
  9441  07EC  1283               	bcf	3,5	;RP0=0, select bank2
  9442  07ED  1703               	bsf	3,6	;RP1=1, select bank2
  9443  07EE  008D               	movwf	13	;volatile
  9444                           
  9445                           ;main_sync.c: 834: EEDAT = valor;
  9446  07EF  0874               	movf	i1setEEPROM@valor,w
  9447  07F0  008C               	movwf	12	;volatile
  9448                           
  9449                           ;main_sync.c: 835: EEPGD = 0;
  9450  07F1  1683               	bsf	3,5	;RP0=1, select bank3
  9451  07F2  1703               	bsf	3,6	;RP1=1, select bank3
  9452  07F3  138C               	bcf	12,7	;volsfr
  9453                           
  9454                           ;main_sync.c: 836: WREN = 1;
  9455  07F4  150C               	bsf	12,2	;volsfr
  9456                           
  9457                           ;main_sync.c: 837: INTCONbits.GIE = 0;
  9458  07F5  138B               	bcf	11,7	;volatile
  9459                           
  9460                           ;main_sync.c: 838: EECON2 = 0x55;
  9461  07F6  3055               	movlw	85
  9462  07F7  008D               	movwf	13	;volsfr
  9463                           
  9464                           ;main_sync.c: 839: EECON2 = 0xAA;
  9465  07F8  30AA               	movlw	170
  9466  07F9  008D               	movwf	13	;volsfr
  9467                           
  9468                           ;main_sync.c: 840: WR = 1;
  9469  07FA  148C               	bsf	12,1	;volsfr
  9470  07FB                     i1l443:	
  9471                           ;main_sync.c: 842: while(WR);
  9472                           
  9473  07FB  188C               	btfsc	12,1	;volsfr
  9474  07FC  2FFB               	goto	i1l443
  9475                           
  9476                           ;main_sync.c: 844: INTCONbits.GIE = 1;
  9477  07FD  178B               	bsf	11,7	;volatile
  9478                           
  9479                           ;main_sync.c: 845: WREN = 0;
  9480  07FE  110C               	bcf	12,2	;volsfr
  9481  07FF  0008               	return
  9482  0800                     __end_ofi1_setEEPROM:	
  9483                           
  9484                           	psect	text37
  9485  19E7                     __ptext37:	
  9486 ;; *************** function i1___bmul *****************
  9487 ;; Defined at:
  9488 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul8.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  multiplier      1    wreg     unsigned char 
  9491 ;;  multiplicand    1    0[COMMON] unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  multiplier      1    2[COMMON] unsigned char 
  9494 ;;  __bmul          1    3[COMMON] unsigned char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      unsigned char 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9504 ;;      Params:         1       0       0       0       0
  9505 ;;      Locals:         2       0       0       0       0
  9506 ;;      Temps:          1       0       0       0       0
  9507 ;;      Totals:         4       0       0       0       0
  9508 ;;Total ram usage:        4 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_le_temp
  9514 ;;		_le_alpha
  9515 ;;		_escreve_alpha
  9516 ;;		_le_k
  9517 ;;		_escreve_k
  9518 ;;		_le_b
  9519 ;;		_escreve_b
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           
  9524                           ;psect for function i1___bmul
  9525  19E7                     i1___bmul:	
  9526                           
  9527                           ;incstack = 0
  9528                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  9529                           ;i1___bmul@multiplier stored from wreg
  9530  19E7  00F2               	movwf	i1___bmul@multiplier
  9531  19E8  01F3               	clrf	i1___bmul@product
  9532  19E9                     i1l3278:	
  9533  19E9  1C72               	btfss	i1___bmul@multiplier,0
  9534  19EA  29EF               	goto	i1l3282
  9535  19EB  0870               	movf	i1___bmul@multiplicand,w
  9536  19EC  00F1               	movwf	??i1___bmul
  9537  19ED  0871               	movf	??i1___bmul,w
  9538  19EE  07F3               	addwf	i1___bmul@product,f
  9539  19EF                     i1l3282:	
  9540  19EF  1003               	clrc
  9541  19F0  0DF0               	rlf	i1___bmul@multiplicand,f
  9542  19F1  1003               	clrc
  9543  19F2  0CF2               	rrf	i1___bmul@multiplier,f
  9544  19F3  0872               	movf	i1___bmul@multiplier,w
  9545  19F4  1D03               	btfss	3,2
  9546  19F5  29E9               	goto	i1l3278
  9547  19F6  0873               	movf	i1___bmul@product,w
  9548  19F7  0008               	return
  9549  19F8                     __end_ofi1___bmul:	
  9550                           
  9551                           	psect	text38
  9552  1D91                     __ptext38:	
  9553 ;; *************** function ___awdiv *****************
  9554 ;; Defined at:
  9555 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  divisor         2    0[COMMON] int 
  9558 ;;  dividend        2    2[COMMON] int 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  quotient        2    7[COMMON] int 
  9561 ;;  sign            1    6[COMMON] unsigned char 
  9562 ;;  counter         1    5[COMMON] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  2    0[COMMON] int 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9572 ;;      Params:         4       0       0       0       0
  9573 ;;      Locals:         4       0       0       0       0
  9574 ;;      Temps:          1       0       0       0       0
  9575 ;;      Totals:         9       0       0       0       0
  9576 ;;Total ram usage:        9 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; This function calls:
  9579 ;;		Nothing
  9580 ;; This function is called by:
  9581 ;;		_protocolo
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function ___awdiv
  9587  1D91                     ___awdiv:	
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9591  1D91  01F6               	clrf	___awdiv@sign
  9592  1D92  1FF1               	btfss	___awdiv@divisor+1,7
  9593  1D93  2D9B               	goto	i1l3402
  9594  1D94  09F0               	comf	___awdiv@divisor,f
  9595  1D95  09F1               	comf	___awdiv@divisor+1,f
  9596  1D96  0AF0               	incf	___awdiv@divisor,f
  9597  1D97  1903               	skipnz
  9598  1D98  0AF1               	incf	___awdiv@divisor+1,f
  9599  1D99  01F6               	clrf	___awdiv@sign
  9600  1D9A  0AF6               	incf	___awdiv@sign,f
  9601  1D9B                     i1l3402:	
  9602  1D9B  1FF3               	btfss	___awdiv@dividend+1,7
  9603  1D9C  2DA6               	goto	i1l3408
  9604  1D9D  09F2               	comf	___awdiv@dividend,f
  9605  1D9E  09F3               	comf	___awdiv@dividend+1,f
  9606  1D9F  0AF2               	incf	___awdiv@dividend,f
  9607  1DA0  1903               	skipnz
  9608  1DA1  0AF3               	incf	___awdiv@dividend+1,f
  9609  1DA2  3001               	movlw	1
  9610  1DA3  00F4               	movwf	??___awdiv
  9611  1DA4  0874               	movf	??___awdiv,w
  9612  1DA5  06F6               	xorwf	___awdiv@sign,f
  9613  1DA6                     i1l3408:	
  9614  1DA6  01F7               	clrf	___awdiv@quotient
  9615  1DA7  01F8               	clrf	___awdiv@quotient+1
  9616  1DA8  0870               	movf	___awdiv@divisor,w
  9617  1DA9  0471               	iorwf	___awdiv@divisor+1,w
  9618  1DAA  1903               	btfsc	3,2
  9619  1DAB  2DDD               	goto	i1l3430
  9620  1DAC  01F5               	clrf	___awdiv@counter
  9621  1DAD  0AF5               	incf	___awdiv@counter,f
  9622  1DAE                     i1l3418:	
  9623  1DAE  1BF1               	btfsc	___awdiv@divisor+1,7
  9624  1DAF  2DBC               	goto	i1l3420
  9625  1DB0  3001               	movlw	1
  9626  1DB1                     u365_25:	
  9627  1DB1  1003               	clrc
  9628  1DB2  0DF0               	rlf	___awdiv@divisor,f
  9629  1DB3  0DF1               	rlf	___awdiv@divisor+1,f
  9630  1DB4  3EFF               	addlw	-1
  9631  1DB5  1D03               	skipz
  9632  1DB6  2DB1               	goto	u365_25
  9633  1DB7  3001               	movlw	1
  9634  1DB8  00F4               	movwf	??___awdiv
  9635  1DB9  0874               	movf	??___awdiv,w
  9636  1DBA  07F5               	addwf	___awdiv@counter,f
  9637  1DBB  2DAE               	goto	i1l3418
  9638  1DBC                     i1l3420:	
  9639  1DBC  3001               	movlw	1
  9640  1DBD                     u367_25:	
  9641  1DBD  1003               	clrc
  9642  1DBE  0DF7               	rlf	___awdiv@quotient,f
  9643  1DBF  0DF8               	rlf	___awdiv@quotient+1,f
  9644  1DC0  3EFF               	addlw	-1
  9645  1DC1  1D03               	skipz
  9646  1DC2  2DBD               	goto	u367_25
  9647  1DC3  0871               	movf	___awdiv@divisor+1,w
  9648  1DC4  0273               	subwf	___awdiv@dividend+1,w
  9649  1DC5  1D03               	skipz
  9650  1DC6  2DC9               	goto	u368_25
  9651  1DC7  0870               	movf	___awdiv@divisor,w
  9652  1DC8  0272               	subwf	___awdiv@dividend,w
  9653  1DC9                     u368_25:	
  9654  1DC9  1C03               	skipc
  9655  1DCA  2DD2               	goto	i1l3426
  9656  1DCB  0870               	movf	___awdiv@divisor,w
  9657  1DCC  02F2               	subwf	___awdiv@dividend,f
  9658  1DCD  0871               	movf	___awdiv@divisor+1,w
  9659  1DCE  1C03               	skipc
  9660  1DCF  03F3               	decf	___awdiv@dividend+1,f
  9661  1DD0  02F3               	subwf	___awdiv@dividend+1,f
  9662  1DD1  1477               	bsf	___awdiv@quotient,0
  9663  1DD2                     i1l3426:	
  9664  1DD2  3001               	movlw	1
  9665  1DD3                     u369_25:	
  9666  1DD3  1003               	clrc
  9667  1DD4  0CF1               	rrf	___awdiv@divisor+1,f
  9668  1DD5  0CF0               	rrf	___awdiv@divisor,f
  9669  1DD6  3EFF               	addlw	-1
  9670  1DD7  1D03               	skipz
  9671  1DD8  2DD3               	goto	u369_25
  9672  1DD9  3001               	movlw	1
  9673  1DDA  02F5               	subwf	___awdiv@counter,f
  9674  1DDB  1D03               	btfss	3,2
  9675  1DDC  2DBC               	goto	i1l3420
  9676  1DDD                     i1l3430:	
  9677  1DDD  0876               	movf	___awdiv@sign,w
  9678  1DDE  1903               	btfsc	3,2
  9679  1DDF  2DE5               	goto	i1l3434
  9680  1DE0  09F7               	comf	___awdiv@quotient,f
  9681  1DE1  09F8               	comf	___awdiv@quotient+1,f
  9682  1DE2  0AF7               	incf	___awdiv@quotient,f
  9683  1DE3  1903               	skipnz
  9684  1DE4  0AF8               	incf	___awdiv@quotient+1,f
  9685  1DE5                     i1l3434:	
  9686  1DE5  0878               	movf	___awdiv@quotient+1,w
  9687  1DE6  00F1               	movwf	?___awdiv+1
  9688  1DE7  0877               	movf	___awdiv@quotient,w
  9689  1DE8  00F0               	movwf	?___awdiv
  9690  1DE9  0008               	return
  9691  1DEA                     __end_of___awdiv:	
  9692                           
  9693                           	psect	text39
  9694  1B94                     __ptext39:	
  9695 ;; *************** function _enviar *****************
  9696 ;; Defined at:
  9697 ;;		line 779 in file "main_sync.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  envia           1    wreg     PTR unsigned char 
  9700 ;;		 -> serial(40), 
  9701 ;;  n               2    0[COMMON] int 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  envia           1    4[COMMON] PTR unsigned char 
  9704 ;;		 -> serial(40), 
  9705 ;;  i               2    6[COMMON] int 
  9706 ;;  cs              1    5[COMMON] unsigned char 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9716 ;;      Params:         2       0       0       0       0
  9717 ;;      Locals:         4       0       0       0       0
  9718 ;;      Temps:          2       0       0       0       0
  9719 ;;      Totals:         8       0       0       0       0
  9720 ;;Total ram usage:        8 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; This function calls:
  9723 ;;		Nothing
  9724 ;; This function is called by:
  9725 ;;		_interruption
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           
  9730                           ;psect for function _enviar
  9731  1B94                     _enviar:	
  9732                           
  9733                           ;incstack = 0
  9734                           ; Regs used in _enviar: [wreg-fsr0h+status,2+status,0]
  9735                           ;enviar@envia stored from wreg
  9736  1B94  00F4               	movwf	enviar@envia
  9737                           
  9738                           ;main_sync.c: 781: int i;;main_sync.c: 782: char cs = 0;
  9739  1B95  01F5               	clrf	enviar@cs
  9740                           
  9741                           ;main_sync.c: 783: for (i = 0; i < n; ++i){
  9742  1B96  01F6               	clrf	enviar@i
  9743  1B97  01F7               	clrf	enviar@i+1
  9744  1B98                     i1l416:	
  9745  1B98  0877               	movf	enviar@i+1,w
  9746  1B99  3A80               	xorlw	128
  9747  1B9A  00F2               	movwf	??_enviar
  9748  1B9B  0871               	movf	enviar@n+1,w
  9749  1B9C  3A80               	xorlw	128
  9750  1B9D  0272               	subwf	??_enviar,w
  9751  1B9E  1D03               	skipz
  9752  1B9F  2BA2               	goto	u471_25
  9753  1BA0  0870               	movf	enviar@n,w
  9754  1BA1  0276               	subwf	enviar@i,w
  9755  1BA2                     u471_25:	
  9756  1BA2  1803               	btfsc	3,0
  9757  1BA3  2BC2               	goto	i1l4086
  9758                           
  9759                           ;main_sync.c: 784: cs += envia[i];
  9760  1BA4  0876               	movf	enviar@i,w
  9761  1BA5  0774               	addwf	enviar@envia,w
  9762  1BA6  00F2               	movwf	??_enviar
  9763  1BA7  0872               	movf	??_enviar,w
  9764  1BA8  0084               	movwf	4
  9765  1BA9  1783               	bsf	3,7	;select IRP bank2
  9766  1BAA  0800               	movf	0,w
  9767  1BAB  00F3               	movwf	??_enviar+1
  9768  1BAC  0873               	movf	??_enviar+1,w
  9769  1BAD  07F5               	addwf	enviar@cs,f
  9770                           
  9771                           ;main_sync.c: 785: TXREG = envia[i];
  9772  1BAE  0876               	movf	enviar@i,w
  9773  1BAF  0774               	addwf	enviar@envia,w
  9774  1BB0  00F2               	movwf	??_enviar
  9775  1BB1  0872               	movf	??_enviar,w
  9776  1BB2  0084               	movwf	4
  9777  1BB3  0800               	movf	0,w
  9778  1BB4  1283               	bcf	3,5	;RP0=0, select bank0
  9779  1BB5  1303               	bcf	3,6	;RP1=0, select bank0
  9780  1BB6  0099               	movwf	25	;volatile
  9781  1BB7                     i1l418:	
  9782                           ;main_sync.c: 786: while (!TRMT);
  9783                           
  9784  1BB7  1683               	bsf	3,5	;RP0=1, select bank1
  9785  1BB8  1303               	bcf	3,6	;RP1=0, select bank1
  9786  1BB9  1C98               	btfss	24,1	;volatile
  9787  1BBA  2BB7               	goto	i1l418
  9788  1BBB  3001               	movlw	1
  9789  1BBC  07F6               	addwf	enviar@i,f
  9790  1BBD  1803               	skipnc
  9791  1BBE  0AF7               	incf	enviar@i+1,f
  9792  1BBF  3000               	movlw	0
  9793  1BC0  07F7               	addwf	enviar@i+1,f
  9794  1BC1  2B98               	goto	i1l416
  9795  1BC2                     i1l4086:	
  9796                           
  9797                           ;main_sync.c: 787: };main_sync.c: 788: cs = 0x100 - cs;
  9798  1BC2  0875               	movf	enviar@cs,w
  9799  1BC3  3C00               	sublw	0
  9800  1BC4  00F2               	movwf	??_enviar
  9801  1BC5  0872               	movf	??_enviar,w
  9802  1BC6  00F5               	movwf	enviar@cs
  9803                           
  9804                           ;main_sync.c: 789: TXREG = cs;
  9805  1BC7  0875               	movf	enviar@cs,w
  9806  1BC8  1283               	bcf	3,5	;RP0=0, select bank0
  9807  1BC9  1303               	bcf	3,6	;RP1=0, select bank0
  9808  1BCA  0099               	movwf	25	;volatile
  9809  1BCB                     i1l422:	
  9810                           ;main_sync.c: 790: while (!TRMT);
  9811                           
  9812  1BCB  1683               	bsf	3,5	;RP0=1, select bank1
  9813  1BCC  1303               	bcf	3,6	;RP1=0, select bank1
  9814  1BCD  1898               	btfsc	24,1	;volatile
  9815  1BCE  0008               	return
  9816  1BCF  2BCB               	goto	i1l422
  9817  1BD0                     __end_of_enviar:	
  9818  007E                     btemp	set	126	;btemp
  9819  007E                     wtemp0	set	126
  9820                           
  9821                           	psect	maintext_split_1
  9822  0041                     l4314:	
  9823                           
  9824                           ;main_sync.c: 159: PORTB = SelectChannel(i);
  9825  0041  1683               	bsf	3,5	;RP0=1, select bank3
  9826  0042  1703               	bsf	3,6	;RP1=1, select bank3
  9827  0043  0860               	movf	(main@i+1)^(0+384),w
  9828  0044  1683               	bsf	3,5	;RP0=1, select bank1
  9829  0045  1303               	bcf	3,6	;RP1=0, select bank1
  9830  0046  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
  9831  0047  1683               	bsf	3,5	;RP0=1, select bank3
  9832  0048  1703               	bsf	3,6	;RP1=1, select bank3
  9833  0049  085F               	movf	main@i^(0+384),w
  9834  004A  1683               	bsf	3,5	;RP0=1, select bank1
  9835  004B  1303               	bcf	3,6	;RP1=0, select bank1
  9836  004C  00A0               	movwf	SelectChannel@ch^(0+128)
  9837  004D  160A  158A  244E  120A  118A  	fcall	_SelectChannel
  9838  0052  1683               	bsf	3,5	;RP0=1, select bank1
  9839  0053  1303               	bcf	3,6	;RP1=0, select bank1
  9840  0054  0820               	movf	?_SelectChannel^(0+128),w
  9841  0055  1283               	bcf	3,5	;RP0=0, select bank0
  9842  0056  1303               	bcf	3,6	;RP1=0, select bank0
  9843  0057  0086               	movwf	6	;volatile
  9844                           
  9845                           ;main_sync.c: 160: for(p = 1; p < 6980; p++);
  9846  0058  3001               	movlw	1
  9847  0059  1683               	bsf	3,5	;RP0=1, select bank3
  9848  005A  1703               	bsf	3,6	;RP1=1, select bank3
  9849  005B  00DD               	movwf	main@p^(0+384)
  9850  005C  3000               	movlw	0
  9851  005D  00DE               	movwf	(main@p^(0+384)+1)
  9852  005E                     l4322:	
  9853  005E  3001               	movlw	1
  9854  005F  1683               	bsf	3,5	;RP0=1, select bank3
  9855  0060  1703               	bsf	3,6	;RP1=1, select bank3
  9856  0061  07DD               	addwf	main@p^(0+384),f
  9857  0062  1803               	skipnc
  9858  0063  0ADE               	incf	(main@p+1)^(0+384),f
  9859  0064  3000               	movlw	0
  9860  0065  07DE               	addwf	(main@p+1)^(0+384),f
  9861  0066  085E               	movf	(main@p+1)^(0+384),w
  9862  0067  3A80               	xorlw	128
  9863  0068  00FF               	movwf	127
  9864  0069  309B               	movlw	155
  9865  006A  027F               	subwf	127,w
  9866  006B  1D03               	skipz
  9867  006C  286F               	goto	u5065
  9868  006D  3044               	movlw	68
  9869  006E  025D               	subwf	main@p^(0+384),w
  9870  006F                     u5065:	
  9871  006F  1C03               	skipc
  9872  0070  285E               	goto	l4322
  9873                           
  9874                           ;main_sync.c: 161: j = ad();
  9875  0071  160A  158A  23D0  120A  118A  	fcall	_ad
  9876  0076  1683               	bsf	3,5	;RP0=1, select bank1
  9877  0077  1303               	bcf	3,6	;RP1=0, select bank1
  9878  0078  0821               	movf	(?_ad+1)^(0+128),w
  9879  0079  1683               	bsf	3,5	;RP0=1, select bank3
  9880  007A  1703               	bsf	3,6	;RP1=1, select bank3
  9881  007B  00DC               	movwf	(main@j+1)^(0+384)
  9882  007C  1683               	bsf	3,5	;RP0=1, select bank1
  9883  007D  1303               	bcf	3,6	;RP1=0, select bank1
  9884  007E  0820               	movf	?_ad^(0+128),w
  9885  007F  1683               	bsf	3,5	;RP0=1, select bank3
  9886  0080  1703               	bsf	3,6	;RP1=1, select bank3
  9887  0081  00DB               	movwf	main@j^(0+384)
  9888                           
  9889                           ;main_sync.c: 163: PORTB = SelectChannel(i) + 8;
  9890  0082  0860               	movf	(main@i+1)^(0+384),w
  9891  0083  1683               	bsf	3,5	;RP0=1, select bank1
  9892  0084  1303               	bcf	3,6	;RP1=0, select bank1
  9893  0085  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
  9894  0086  1683               	bsf	3,5	;RP0=1, select bank3
  9895  0087  1703               	bsf	3,6	;RP1=1, select bank3
  9896  0088  085F               	movf	main@i^(0+384),w
  9897  0089  1683               	bsf	3,5	;RP0=1, select bank1
  9898  008A  1303               	bcf	3,6	;RP1=0, select bank1
  9899  008B  00A0               	movwf	SelectChannel@ch^(0+128)
  9900  008C  160A  158A  244E  120A  118A  	fcall	_SelectChannel
  9901  0091  1683               	bsf	3,5	;RP0=1, select bank1
  9902  0092  1303               	bcf	3,6	;RP1=0, select bank1
  9903  0093  0820               	movf	?_SelectChannel^(0+128),w
  9904  0094  3E08               	addlw	8
  9905  0095  1283               	bcf	3,5	;RP0=0, select bank0
  9906  0096  1303               	bcf	3,6	;RP1=0, select bank0
  9907  0097  0086               	movwf	6	;volatile
  9908                           
  9909                           ;main_sync.c: 164: for(p = 1; p < 6980; p++);
  9910  0098  3001               	movlw	1
  9911  0099  1683               	bsf	3,5	;RP0=1, select bank3
  9912  009A  1703               	bsf	3,6	;RP1=1, select bank3
  9913  009B  00DD               	movwf	main@p^(0+384)
  9914  009C  3000               	movlw	0
  9915  009D  00DE               	movwf	(main@p^(0+384)+1)
  9916  009E                     l4336:	
  9917  009E  3001               	movlw	1
  9918  009F  1683               	bsf	3,5	;RP0=1, select bank3
  9919  00A0  1703               	bsf	3,6	;RP1=1, select bank3
  9920  00A1  07DD               	addwf	main@p^(0+384),f
  9921  00A2  1803               	skipnc
  9922  00A3  0ADE               	incf	(main@p+1)^(0+384),f
  9923  00A4  3000               	movlw	0
  9924  00A5  07DE               	addwf	(main@p+1)^(0+384),f
  9925  00A6  085E               	movf	(main@p+1)^(0+384),w
  9926  00A7  3A80               	xorlw	128
  9927  00A8  00FF               	movwf	127
  9928  00A9  309B               	movlw	155
  9929  00AA  027F               	subwf	127,w
  9930  00AB  1D03               	skipz
  9931  00AC  28AF               	goto	u5075
  9932  00AD  3044               	movlw	68
  9933  00AE  025D               	subwf	main@p^(0+384),w
  9934  00AF                     u5075:	
  9935  00AF  1C03               	skipc
  9936  00B0  289E               	goto	l4336
  9937                           
  9938                           ;main_sync.c: 165: valorAD[i] = j - ad();
  9939  00B1  160A  158A  23D0  120A  118A  	fcall	_ad
  9940  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  9941  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  9942  00B8  0820               	movf	?_ad^(0+128),w
  9943  00B9  1683               	bsf	3,5	;RP0=1, select bank3
  9944  00BA  1703               	bsf	3,6	;RP1=1, select bank3
  9945  00BB  025B               	subwf	main@j^(0+384),w
  9946  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  9947  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  9948  00BE  00E1               	movwf	??_main^(0+128)
  9949  00BF  0821               	movf	(?_ad+1)^(0+128),w
  9950  00C0  1C03               	skipc
  9951  00C1  0A21               	incf	(?_ad+1)^(0+128),w
  9952  00C2  1683               	bsf	3,5	;RP0=1, select bank3
  9953  00C3  1703               	bsf	3,6	;RP1=1, select bank3
  9954  00C4  025C               	subwf	(main@j+1)^(0+384),w
  9955  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  9956  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  9957  00C7  00E2               	movwf	(??_main+1)^(0+128)
  9958  00C8  1683               	bsf	3,5	;RP0=1, select bank3
  9959  00C9  1703               	bsf	3,6	;RP1=1, select bank3
  9960  00CA  085F               	movf	main@i^(0+384),w
  9961  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  9962  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  9963  00CD  00E3               	movwf	(??_main+2)^(0+128)
  9964  00CE  0763               	addwf	(??_main+2)^(0+128),w
  9965  00CF  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
  9966  00D0  0084               	movwf	4
  9967  00D1  0861               	movf	??_main^(0+128),w
  9968  00D2  1783               	bsf	3,7	;select IRP bank3
  9969  00D3  0080               	movwf	0
  9970  00D4  0A84               	incf	4,f
  9971  00D5  0862               	movf	(??_main+1)^(0+128),w
  9972  00D6  0080               	movwf	0
  9973                           
  9974                           ;main_sync.c: 167: t = ((float)(valorAD[i])/ k) - b;
  9975  00D7  1683               	bsf	3,5	;RP0=1, select bank3
  9976  00D8  1703               	bsf	3,6	;RP1=1, select bank3
  9977  00D9  083C               	movf	_b^(0+384),w
  9978  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9979  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9980  00DC  00CB               	movwf	___ftsub@f2^(0+128)
  9981  00DD  1683               	bsf	3,5	;RP0=1, select bank3
  9982  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  9983  00DF  083D               	movf	(_b+1)^(0+384),w
  9984  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9985  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9986  00E2  00CC               	movwf	(___ftsub@f2+1)^(0+128)
  9987  00E3  1683               	bsf	3,5	;RP0=1, select bank3
  9988  00E4  1703               	bsf	3,6	;RP1=1, select bank3
  9989  00E5  083E               	movf	(_b+2)^(0+384),w
  9990  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9991  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9992  00E8  00CD               	movwf	(___ftsub@f2+2)^(0+128)
  9993  00E9  1683               	bsf	3,5	;RP0=1, select bank3
  9994  00EA  1703               	bsf	3,6	;RP1=1, select bank3
  9995  00EB  083F               	movf	_k^(0+384),w
  9996  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  9997  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  9998  00EE  00BB               	movwf	___ftdiv@f2^(0+128)
  9999  00EF  1683               	bsf	3,5	;RP0=1, select bank3
 10000  00F0  1703               	bsf	3,6	;RP1=1, select bank3
 10001  00F1  0840               	movf	(_k+1)^(0+384),w
 10002  00F2  1683               	bsf	3,5	;RP0=1, select bank1
 10003  00F3  1303               	bcf	3,6	;RP1=0, select bank1
 10004  00F4  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
 10005  00F5  1683               	bsf	3,5	;RP0=1, select bank3
 10006  00F6  1703               	bsf	3,6	;RP1=1, select bank3
 10007  00F7  0841               	movf	(_k+2)^(0+384),w
 10008  00F8  1683               	bsf	3,5	;RP0=1, select bank1
 10009  00F9  1303               	bcf	3,6	;RP1=0, select bank1
 10010  00FA  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
 10011  00FB  1683               	bsf	3,5	;RP0=1, select bank3
 10012  00FC  1703               	bsf	3,6	;RP1=1, select bank3
 10013  00FD  085F               	movf	main@i^(0+384),w
 10014  00FE  1683               	bsf	3,5	;RP0=1, select bank1
 10015  00FF  1303               	bcf	3,6	;RP1=0, select bank1
 10016  0100  00E1               	movwf	??_main^(0+128)
 10017  0101  0761               	addwf	??_main^(0+128),w
 10018  0102  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
 10019  0103  0084               	movwf	4
 10020  0104  0800               	movf	0,w
 10021  0105  00A8               	movwf	___awtoft@c^(0+128)
 10022  0106  0A84               	incf	4,f
 10023  0107  0800               	movf	0,w
 10024  0108  00A9               	movwf	(___awtoft@c+1)^(0+128)
 10025  0109  160A  158A  2290  120A  118A  	fcall	___awtoft
 10026  010E  1683               	bsf	3,5	;RP0=1, select bank1
 10027  010F  1303               	bcf	3,6	;RP1=0, select bank1
 10028  0110  0828               	movf	?___awtoft^(0+128),w
 10029  0111  00BE               	movwf	___ftdiv@f1^(0+128)
 10030  0112  0829               	movf	(?___awtoft+1)^(0+128),w
 10031  0113  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
 10032  0114  082A               	movf	(?___awtoft+2)^(0+128),w
 10033  0115  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
 10034  0116  160A  118A  213A  120A  118A  	fcall	___ftdiv
 10035  011B  1683               	bsf	3,5	;RP0=1, select bank1
 10036  011C  1303               	bcf	3,6	;RP1=0, select bank1
 10037  011D  083B               	movf	?___ftdiv^(0+128),w
 10038  011E  00CE               	movwf	___ftsub@f1^(0+128)
 10039  011F  083C               	movf	(?___ftdiv+1)^(0+128),w
 10040  0120  00CF               	movwf	(___ftsub@f1+1)^(0+128)
 10041  0121  083D               	movf	(?___ftdiv+2)^(0+128),w
 10042  0122  00D0               	movwf	(___ftsub@f1+2)^(0+128)
 10043  0123  160A  158A  224D  120A  118A  	fcall	___ftsub
 10044  0128  1683               	bsf	3,5	;RP0=1, select bank1
 10045  0129  1303               	bcf	3,6	;RP1=0, select bank1
 10046  012A  084B               	movf	?___ftsub^(0+128),w
 10047  012B  1683               	bsf	3,5	;RP0=1, select bank3
 10048  012C  1703               	bsf	3,6	;RP1=1, select bank3
 10049  012D  00D8               	movwf	main@t^(0+384)
 10050  012E  1683               	bsf	3,5	;RP0=1, select bank1
 10051  012F  1303               	bcf	3,6	;RP1=0, select bank1
 10052  0130  084C               	movf	(?___ftsub+1)^(0+128),w
 10053  0131  1683               	bsf	3,5	;RP0=1, select bank3
 10054  0132  1703               	bsf	3,6	;RP1=1, select bank3
 10055  0133  00D9               	movwf	(main@t+1)^(0+384)
 10056  0134  1683               	bsf	3,5	;RP0=1, select bank1
 10057  0135  1303               	bcf	3,6	;RP1=0, select bank1
 10058  0136  084D               	movf	(?___ftsub+2)^(0+128),w
 10059  0137  1683               	bsf	3,5	;RP0=1, select bank3
 10060  0138  1703               	bsf	3,6	;RP1=1, select bank3
 10061  0139  00DA               	movwf	(main@t+2)^(0+384)
 10062                           
 10063                           ;main_sync.c: 169: if(fabs(temp[i] - t) <= difTemp){
 10064  013A  0858               	movf	main@t^(0+384),w
 10065  013B  1683               	bsf	3,5	;RP0=1, select bank1
 10066  013C  1303               	bcf	3,6	;RP1=0, select bank1
 10067  013D  00CB               	movwf	___ftsub@f2^(0+128)
 10068  013E  1683               	bsf	3,5	;RP0=1, select bank3
 10069  013F  1703               	bsf	3,6	;RP1=1, select bank3
 10070  0140  0859               	movf	(main@t+1)^(0+384),w
 10071  0141  1683               	bsf	3,5	;RP0=1, select bank1
 10072  0142  1303               	bcf	3,6	;RP1=0, select bank1
 10073  0143  00CC               	movwf	(___ftsub@f2+1)^(0+128)
 10074  0144  1683               	bsf	3,5	;RP0=1, select bank3
 10075  0145  1703               	bsf	3,6	;RP1=1, select bank3
 10076  0146  085A               	movf	(main@t+2)^(0+384),w
 10077  0147  1683               	bsf	3,5	;RP0=1, select bank1
 10078  0148  1303               	bcf	3,6	;RP1=0, select bank1
 10079  0149  00CD               	movwf	(___ftsub@f2+2)^(0+128)
 10080  014A  3003               	movlw	3
 10081  014B  00E1               	movwf	??_main^(0+128)
 10082  014C  0861               	movf	??_main^(0+128),w
 10083  014D  00A0               	movwf	___bmul@multiplicand^(0+128)
 10084  014E  1683               	bsf	3,5	;RP0=1, select bank3
 10085  014F  1703               	bsf	3,6	;RP1=1, select bank3
 10086  0150  085F               	movf	main@i^(0+384),w
 10087  0151  160A  118A  2000  120A  118A  	fcall	___bmul
 10088  0156  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
 10089  0157  0084               	movwf	4
 10090  0158  1783               	bsf	3,7	;select IRP bank3
 10091  0159  0800               	movf	0,w
 10092  015A  1683               	bsf	3,5	;RP0=1, select bank1
 10093  015B  1303               	bcf	3,6	;RP1=0, select bank1
 10094  015C  00CE               	movwf	___ftsub@f1^(0+128)
 10095  015D  0A84               	incf	4,f
 10096  015E  0800               	movf	0,w
 10097  015F  00CF               	movwf	(___ftsub@f1+1)^(0+128)
 10098  0160  0A84               	incf	4,f
 10099  0161  0800               	movf	0,w
 10100  0162  00D0               	movwf	(___ftsub@f1+2)^(0+128)
 10101  0163  160A  158A  224D  120A  118A  	fcall	___ftsub
 10102  0168  1683               	bsf	3,5	;RP0=1, select bank1
 10103  0169  1303               	bcf	3,6	;RP1=0, select bank1
 10104  016A  084B               	movf	?___ftsub^(0+128),w
 10105  016B  00D7               	movwf	fabs@d^(0+128)
 10106  016C  084C               	movf	(?___ftsub+1)^(0+128),w
 10107  016D  00D8               	movwf	(fabs@d+1)^(0+128)
 10108  016E  084D               	movf	(?___ftsub+2)^(0+128),w
 10109  016F  00D9               	movwf	(fabs@d+2)^(0+128)
 10110  0170  160A  158A  22B5  120A  118A  	fcall	_fabs
 10111  0175  1683               	bsf	3,5	;RP0=1, select bank1
 10112  0176  1303               	bcf	3,6	;RP1=0, select bank1
 10113  0177  0857               	movf	?_fabs^(0+128),w
 10114  0178  1683               	bsf	3,5	;RP0=1, select bank3
 10115  0179  1703               	bsf	3,6	;RP1=1, select bank3
 10116  017A  00CE               	movwf	_main$962^(0+384)
 10117  017B  1683               	bsf	3,5	;RP0=1, select bank1
 10118  017C  1303               	bcf	3,6	;RP1=0, select bank1
 10119  017D  0858               	movf	(?_fabs+1)^(0+128),w
 10120  017E  1683               	bsf	3,5	;RP0=1, select bank3
 10121  017F  1703               	bsf	3,6	;RP1=1, select bank3
 10122  0180  00CF               	movwf	(_main$962+1)^(0+384)
 10123  0181  1683               	bsf	3,5	;RP0=1, select bank1
 10124  0182  1303               	bcf	3,6	;RP1=0, select bank1
 10125  0183  0859               	movf	(?_fabs+2)^(0+128),w
 10126  0184  1683               	bsf	3,5	;RP0=1, select bank3
 10127  0185  1703               	bsf	3,6	;RP1=1, select bank3
 10128  0186  00D0               	movwf	(_main$962+2)^(0+384)
 10129                           
 10130                           ;main_sync.c: 169: if(fabs(temp[i] - t) <= difTemp){
 10131  0187  084B               	movf	main@difTemp^(0+384),w
 10132  0188  1683               	bsf	3,5	;RP0=1, select bank1
 10133  0189  1303               	bcf	3,6	;RP1=0, select bank1
 10134  018A  00D1               	movwf	___ftge@ff1^(0+128)
 10135  018B  1683               	bsf	3,5	;RP0=1, select bank3
 10136  018C  1703               	bsf	3,6	;RP1=1, select bank3
 10137  018D  084C               	movf	(main@difTemp+1)^(0+384),w
 10138  018E  1683               	bsf	3,5	;RP0=1, select bank1
 10139  018F  1303               	bcf	3,6	;RP1=0, select bank1
 10140  0190  00D2               	movwf	(___ftge@ff1+1)^(0+128)
 10141  0191  1683               	bsf	3,5	;RP0=1, select bank3
 10142  0192  1703               	bsf	3,6	;RP1=1, select bank3
 10143  0193  084D               	movf	(main@difTemp+2)^(0+384),w
 10144  0194  1683               	bsf	3,5	;RP0=1, select bank1
 10145  0195  1303               	bcf	3,6	;RP1=0, select bank1
 10146  0196  00D3               	movwf	(___ftge@ff1+2)^(0+128)
 10147  0197  1683               	bsf	3,5	;RP0=1, select bank3
 10148  0198  1703               	bsf	3,6	;RP1=1, select bank3
 10149  0199  084E               	movf	_main$962^(0+384),w
 10150  019A  1683               	bsf	3,5	;RP0=1, select bank1
 10151  019B  1303               	bcf	3,6	;RP1=0, select bank1
 10152  019C  00D4               	movwf	___ftge@ff2^(0+128)
 10153  019D  1683               	bsf	3,5	;RP0=1, select bank3
 10154  019E  1703               	bsf	3,6	;RP1=1, select bank3
 10155  019F  084F               	movf	(_main$962+1)^(0+384),w
 10156  01A0  1683               	bsf	3,5	;RP0=1, select bank1
 10157  01A1  1303               	bcf	3,6	;RP1=0, select bank1
 10158  01A2  00D5               	movwf	(___ftge@ff2+1)^(0+128)
 10159  01A3  1683               	bsf	3,5	;RP0=1, select bank3
 10160  01A4  1703               	bsf	3,6	;RP1=1, select bank3
 10161  01A5  0850               	movf	(_main$962+2)^(0+384),w
 10162  01A6  1683               	bsf	3,5	;RP0=1, select bank1
 10163  01A7  1303               	bcf	3,6	;RP1=0, select bank1
 10164  01A8  00D6               	movwf	(___ftge@ff2+2)^(0+128)
 10165  01A9  160A  158A  2336  120A  118A  	fcall	___ftge
 10166  01AE  1C03               	btfss	3,0
 10167  01AF  2A91               	goto	l4350
 10168                           
 10169                           ;main_sync.c: 170: temp[i] = ((temp[i] * (float)(fator)) + (t * (1000 - (float)(fator)))
      +                          )/1000.0;
 10170  01B0  1683               	bsf	3,5	;RP0=1, select bank3
 10171  01B1  1703               	bsf	3,6	;RP1=1, select bank3
 10172  01B2  0858               	movf	main@t^(0+384),w
 10173  01B3  1683               	bsf	3,5	;RP0=1, select bank1
 10174  01B4  1303               	bcf	3,6	;RP1=0, select bank1
 10175  01B5  00D1               	movwf	___ftmul@f1^(0+128)
 10176  01B6  1683               	bsf	3,5	;RP0=1, select bank3
 10177  01B7  1703               	bsf	3,6	;RP1=1, select bank3
 10178  01B8  0859               	movf	(main@t+1)^(0+384),w
 10179  01B9  1683               	bsf	3,5	;RP0=1, select bank1
 10180  01BA  1303               	bcf	3,6	;RP1=0, select bank1
 10181  01BB  00D2               	movwf	(___ftmul@f1+1)^(0+128)
 10182  01BC  1683               	bsf	3,5	;RP0=1, select bank3
 10183  01BD  1703               	bsf	3,6	;RP1=1, select bank3
 10184  01BE  085A               	movf	(main@t+2)^(0+384),w
 10185  01BF  1683               	bsf	3,5	;RP0=1, select bank1
 10186  01C0  1303               	bcf	3,6	;RP1=0, select bank1
 10187  01C1  00D3               	movwf	(___ftmul@f1+2)^(0+128)
 10188  01C2  1683               	bsf	3,5	;RP0=1, select bank3
 10189  01C3  1703               	bsf	3,6	;RP1=1, select bank3
 10190  01C4  0862               	movf	(_fator+1)^(0+384),w
 10191  01C5  1683               	bsf	3,5	;RP0=1, select bank1
 10192  01C6  1303               	bcf	3,6	;RP1=0, select bank1
 10193  01C7  00A9               	movwf	(___awtoft@c+1)^(0+128)
 10194  01C8  1683               	bsf	3,5	;RP0=1, select bank3
 10195  01C9  1703               	bsf	3,6	;RP1=1, select bank3
 10196  01CA  0861               	movf	_fator^(0+384),w
 10197  01CB  1683               	bsf	3,5	;RP0=1, select bank1
 10198  01CC  1303               	bcf	3,6	;RP1=0, select bank1
 10199  01CD  00A8               	movwf	___awtoft@c^(0+128)
 10200  01CE  160A  158A  2290  120A  118A  	fcall	___awtoft
 10201  01D3  1683               	bsf	3,5	;RP0=1, select bank1
 10202  01D4  1303               	bcf	3,6	;RP1=0, select bank1
 10203  01D5  0828               	movf	?___awtoft^(0+128),w
 10204  01D6  00CB               	movwf	___ftsub@f2^(0+128)
 10205  01D7  0829               	movf	(?___awtoft+1)^(0+128),w
 10206  01D8  00CC               	movwf	(___ftsub@f2+1)^(0+128)
 10207  01D9  082A               	movf	(?___awtoft+2)^(0+128),w
 10208  01DA  00CD               	movwf	(___ftsub@f2+2)^(0+128)
 10209  01DB  3000               	movlw	0
 10210  01DC  00CE               	movwf	___ftsub@f1^(0+128)
 10211  01DD  307A               	movlw	122
 10212  01DE  00CF               	movwf	(___ftsub@f1+1)^(0+128)
 10213  01DF  3044               	movlw	68
 10214  01E0  00D0               	movwf	(___ftsub@f1+2)^(0+128)
 10215  01E1  160A  158A  224D  120A  118A  	fcall	___ftsub
 10216  01E6  1683               	bsf	3,5	;RP0=1, select bank1
 10217  01E7  1303               	bcf	3,6	;RP1=0, select bank1
 10218  01E8  084B               	movf	?___ftsub^(0+128),w
 10219  01E9  00D4               	movwf	___ftmul@f2^(0+128)
 10220  01EA  084C               	movf	(?___ftsub+1)^(0+128),w
 10221  01EB  00D5               	movwf	(___ftmul@f2+1)^(0+128)
 10222  01EC  084D               	movf	(?___ftsub+2)^(0+128),w
 10223  01ED  00D6               	movwf	(___ftmul@f2+2)^(0+128)
 10224  01EE  160A  118A  22C3  120A  118A  	fcall	___ftmul
 10225  01F3  1683               	bsf	3,5	;RP0=1, select bank1
 10226  01F4  1303               	bcf	3,6	;RP1=0, select bank1
 10227  01F5  0851               	movf	?___ftmul^(0+128),w
 10228  01F6  1683               	bsf	3,5	;RP0=1, select bank3
 10229  01F7  1703               	bsf	3,6	;RP1=1, select bank3
 10230  01F8  00D1               	movwf	_main$963^(0+384)
 10231  01F9  1683               	bsf	3,5	;RP0=1, select bank1
 10232  01FA  1303               	bcf	3,6	;RP1=0, select bank1
 10233  01FB  0852               	movf	(?___ftmul+1)^(0+128),w
 10234  01FC  1683               	bsf	3,5	;RP0=1, select bank3
 10235  01FD  1703               	bsf	3,6	;RP1=1, select bank3
 10236  01FE  00D2               	movwf	(_main$963+1)^(0+384)
 10237  01FF  1683               	bsf	3,5	;RP0=1, select bank1
 10238  0200  1303               	bcf	3,6	;RP1=0, select bank1
 10239  0201  0853               	movf	(?___ftmul+2)^(0+128),w
 10240  0202  1683               	bsf	3,5	;RP0=1, select bank3
 10241  0203  1703               	bsf	3,6	;RP1=1, select bank3
 10242  0204  00D3               	movwf	(_main$963+2)^(0+384)
 10243                           
 10244                           ;main_sync.c: 170: temp[i] = ((temp[i] * (float)(fator)) + (t * (1000 - (float)(fator)))
      +                          )/1000.0;
 10245  0205  3000               	movlw	0
 10246  0206  1683               	bsf	3,5	;RP0=1, select bank1
 10247  0207  1303               	bcf	3,6	;RP1=0, select bank1
 10248  0208  00BB               	movwf	___ftdiv@f2^(0+128)
 10249  0209  307A               	movlw	122
 10250  020A  00BC               	movwf	(___ftdiv@f2+1)^(0+128)
 10251  020B  3044               	movlw	68
 10252  020C  00BD               	movwf	(___ftdiv@f2+2)^(0+128)
 10253  020D  1683               	bsf	3,5	;RP0=1, select bank3
 10254  020E  1703               	bsf	3,6	;RP1=1, select bank3
 10255  020F  0851               	movf	_main$963^(0+384),w
 10256  0210  1683               	bsf	3,5	;RP0=1, select bank1
 10257  0211  1303               	bcf	3,6	;RP1=0, select bank1
 10258  0212  00AE               	movwf	___ftadd@f1^(0+128)
 10259  0213  1683               	bsf	3,5	;RP0=1, select bank3
 10260  0214  1703               	bsf	3,6	;RP1=1, select bank3
 10261  0215  0852               	movf	(_main$963+1)^(0+384),w
 10262  0216  1683               	bsf	3,5	;RP0=1, select bank1
 10263  0217  1303               	bcf	3,6	;RP1=0, select bank1
 10264  0218  00AF               	movwf	(___ftadd@f1+1)^(0+128)
 10265  0219  1683               	bsf	3,5	;RP0=1, select bank3
 10266  021A  1703               	bsf	3,6	;RP1=1, select bank3
 10267  021B  0853               	movf	(_main$963+2)^(0+384),w
 10268  021C  1683               	bsf	3,5	;RP0=1, select bank1
 10269  021D  1303               	bcf	3,6	;RP1=0, select bank1
 10270  021E  00B0               	movwf	(___ftadd@f1+2)^(0+128)
 10271  021F  3003               	movlw	3
 10272  0220  00E1               	movwf	??_main^(0+128)
 10273  0221  0861               	movf	??_main^(0+128),w
 10274  0222  00A0               	movwf	___bmul@multiplicand^(0+128)
 10275  0223  1683               	bsf	3,5	;RP0=1, select bank3
 10276  0224  1703               	bsf	3,6	;RP1=1, select bank3
 10277  0225  085F               	movf	main@i^(0+384),w
 10278  0226  160A  118A  2000  120A  118A  	fcall	___bmul
 10279  022B  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
 10280  022C  0084               	movwf	4
 10281  022D  1783               	bsf	3,7	;select IRP bank3
 10282  022E  0800               	movf	0,w
 10283  022F  1683               	bsf	3,5	;RP0=1, select bank1
 10284  0230  1303               	bcf	3,6	;RP1=0, select bank1
 10285  0231  00D1               	movwf	___ftmul@f1^(0+128)
 10286  0232  0A84               	incf	4,f
 10287  0233  0800               	movf	0,w
 10288  0234  00D2               	movwf	(___ftmul@f1+1)^(0+128)
 10289  0235  0A84               	incf	4,f
 10290  0236  0800               	movf	0,w
 10291  0237  00D3               	movwf	(___ftmul@f1+2)^(0+128)
 10292  0238  1683               	bsf	3,5	;RP0=1, select bank3
 10293  0239  1703               	bsf	3,6	;RP1=1, select bank3
 10294  023A  0862               	movf	(_fator+1)^(0+384),w
 10295  023B  1683               	bsf	3,5	;RP0=1, select bank1
 10296  023C  1303               	bcf	3,6	;RP1=0, select bank1
 10297  023D  00A9               	movwf	(___awtoft@c+1)^(0+128)
 10298  023E  1683               	bsf	3,5	;RP0=1, select bank3
 10299  023F  1703               	bsf	3,6	;RP1=1, select bank3
 10300  0240  0861               	movf	_fator^(0+384),w
 10301  0241  1683               	bsf	3,5	;RP0=1, select bank1
 10302  0242  1303               	bcf	3,6	;RP1=0, select bank1
 10303  0243  00A8               	movwf	___awtoft@c^(0+128)
 10304  0244  160A  158A  2290  120A  118A  	fcall	___awtoft
 10305  0249  1683               	bsf	3,5	;RP0=1, select bank1
 10306  024A  1303               	bcf	3,6	;RP1=0, select bank1
 10307  024B  0828               	movf	?___awtoft^(0+128),w
 10308  024C  00D4               	movwf	___ftmul@f2^(0+128)
 10309  024D  0829               	movf	(?___awtoft+1)^(0+128),w
 10310  024E  00D5               	movwf	(___ftmul@f2+1)^(0+128)
 10311  024F  082A               	movf	(?___awtoft+2)^(0+128),w
 10312  0250  00D6               	movwf	(___ftmul@f2+2)^(0+128)
 10313  0251  160A  118A  22C3  120A  118A  	fcall	___ftmul
 10314  0256  1683               	bsf	3,5	;RP0=1, select bank1
 10315  0257  1303               	bcf	3,6	;RP1=0, select bank1
 10316  0258  0851               	movf	?___ftmul^(0+128),w
 10317  0259  00B1               	movwf	___ftadd@f2^(0+128)
 10318  025A  0852               	movf	(?___ftmul+1)^(0+128),w
 10319  025B  00B2               	movwf	(___ftadd@f2+1)^(0+128)
 10320  025C  0853               	movf	(?___ftmul+2)^(0+128),w
 10321  025D  00B3               	movwf	(___ftadd@f2+2)^(0+128)
 10322  025E  120A  158A  2086  120A  118A  	fcall	___ftadd
 10323  0263  1683               	bsf	3,5	;RP0=1, select bank1
 10324  0264  1303               	bcf	3,6	;RP1=0, select bank1
 10325  0265  082E               	movf	?___ftadd^(0+128),w
 10326  0266  00BE               	movwf	___ftdiv@f1^(0+128)
 10327  0267  082F               	movf	(?___ftadd+1)^(0+128),w
 10328  0268  00BF               	movwf	(___ftdiv@f1+1)^(0+128)
 10329  0269  0830               	movf	(?___ftadd+2)^(0+128),w
 10330  026A  00C0               	movwf	(___ftdiv@f1+2)^(0+128)
 10331  026B  160A  118A  213A  120A  118A  	fcall	___ftdiv
 10332  0270  1683               	bsf	3,5	;RP0=1, select bank1
 10333  0271  1303               	bcf	3,6	;RP1=0, select bank1
 10334  0272  083B               	movf	?___ftdiv^(0+128),w
 10335  0273  00E2               	movwf	(??_main+1)^(0+128)
 10336  0274  083C               	movf	(?___ftdiv+1)^(0+128),w
 10337  0275  00E3               	movwf	((??_main+1)^(0+128)+1)
 10338  0276  083D               	movf	(?___ftdiv+2)^(0+128),w
 10339  0277  00E4               	movwf	((??_main+1)^(0+128)+2)
 10340  0278  3003               	movlw	3
 10341  0279  00E5               	movwf	(??_main+4)^(0+128)
 10342  027A  0865               	movf	(??_main+4)^(0+128),w
 10343  027B  00A0               	movwf	___bmul@multiplicand^(0+128)
 10344  027C  1683               	bsf	3,5	;RP0=1, select bank3
 10345  027D  1703               	bsf	3,6	;RP1=1, select bank3
 10346  027E  085F               	movf	main@i^(0+384),w
 10347  027F  160A  118A  2000  120A  118A  	fcall	___bmul
 10348  0284  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
 10349  0285  0084               	movwf	4
 10350  0286  1683               	bsf	3,5	;RP0=1, select bank1
 10351  0287  1303               	bcf	3,6	;RP1=0, select bank1
 10352  0288  0862               	movf	(??_main+1)^(0+128),w
 10353  0289  1783               	bsf	3,7	;select IRP bank3
 10354  028A  0080               	movwf	0
 10355  028B  0A84               	incf	4,f
 10356  028C  0863               	movf	(??_main+2)^(0+128),w
 10357  028D  0080               	movwf	0
 10358  028E  0A84               	incf	4,f
 10359  028F  0864               	movf	(??_main+3)^(0+128),w
 10360  0290  2ACB               	goto	L1
 10361  0291                     l4350:	
 10362                           ;main_sync.c: 172: }
 10363                           
 10364                           
 10365                           ;main_sync.c: 173: else{;main_sync.c: 174: erros[i]++;
 10366  0291  1683               	bsf	3,5	;RP0=1, select bank3
 10367  0292  1703               	bsf	3,6	;RP1=1, select bank3
 10368  0293  085F               	movf	main@i^(0+384),w
 10369  0294  1683               	bsf	3,5	;RP0=1, select bank1
 10370  0295  1303               	bcf	3,6	;RP1=0, select bank1
 10371  0296  00E1               	movwf	??_main^(0+128)
 10372  0297  0761               	addwf	??_main^(0+128),w
 10373  0298  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
 10374  0299  0084               	movwf	4
 10375  029A  3001               	movlw	1
 10376  029B  1783               	bsf	3,7	;select IRP bank2
 10377  029C  0780               	addwf	0,f
 10378  029D  0A84               	incf	4,f
 10379  029E  1803               	skipnc
 10380  029F  0A80               	incf	0,f
 10381                           
 10382                           ;main_sync.c: 175: if(erros[i] == 4){
 10383  02A0  1683               	bsf	3,5	;RP0=1, select bank3
 10384  02A1  1703               	bsf	3,6	;RP1=1, select bank3
 10385  02A2  085F               	movf	main@i^(0+384),w
 10386  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10387  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10388  02A5  00E1               	movwf	??_main^(0+128)
 10389  02A6  0761               	addwf	??_main^(0+128),w
 10390  02A7  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
 10391  02A8  0084               	movwf	4
 10392  02A9  0800               	movf	0,w
 10393  02AA  00E2               	movwf	(??_main+1)^(0+128)
 10394  02AB  0A84               	incf	4,f
 10395  02AC  0800               	movf	0,w
 10396  02AD  00E3               	movwf	((??_main+1)^(0+128)+1)
 10397  02AE  3004               	movlw	4
 10398  02AF  0662               	xorwf	(??_main+1)^(0+128),w
 10399  02B0  0463               	iorwf	((??_main+1)^(0+128)+1),w
 10400  02B1  1D03               	btfss	3,2
 10401  02B2  2AD8               	goto	l4356
 10402                           
 10403                           ;main_sync.c: 176: temp[i] = t;
 10404  02B3  3003               	movlw	3
 10405  02B4  00E1               	movwf	??_main^(0+128)
 10406  02B5  0861               	movf	??_main^(0+128),w
 10407  02B6  00A0               	movwf	___bmul@multiplicand^(0+128)
 10408  02B7  1683               	bsf	3,5	;RP0=1, select bank3
 10409  02B8  1703               	bsf	3,6	;RP1=1, select bank3
 10410  02B9  085F               	movf	main@i^(0+384),w
 10411  02BA  160A  118A  2000  120A  118A  	fcall	___bmul
 10412  02BF  3E90               	addlw	(low (_temp| (0+256)))& (0+255)
 10413  02C0  0084               	movwf	4
 10414  02C1  1683               	bsf	3,5	;RP0=1, select bank3
 10415  02C2  1703               	bsf	3,6	;RP1=1, select bank3
 10416  02C3  0858               	movf	main@t^(0+384),w
 10417  02C4  1783               	bsf	3,7	;select IRP bank3
 10418  02C5  0080               	movwf	0
 10419  02C6  0A84               	incf	4,f
 10420  02C7  0859               	movf	(main@t+1)^(0+384),w
 10421  02C8  0080               	movwf	0
 10422  02C9  0A84               	incf	4,f
 10423  02CA  085A               	movf	(main@t+2)^(0+384),w
 10424  02CB                     L1:	
 10425  02CB  0080               	movwf	0
 10426                           
 10427                           ;main_sync.c: 171: erros[i] = 0;
 10428  02CC  1683               	bsf	3,5	;RP0=1, select bank3
 10429  02CD  1703               	bsf	3,6	;RP1=1, select bank3
 10430  02CE  085F               	movf	main@i^(0+384),w
 10431  02CF  1683               	bsf	3,5	;RP0=1, select bank1
 10432  02D0  1303               	bcf	3,6	;RP1=0, select bank1
 10433  02D1  00E1               	movwf	??_main^(0+128)
 10434  02D2  0761               	addwf	??_main^(0+128),w
 10435  02D3  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
 10436  02D4  0084               	movwf	4
 10437  02D5  0180               	clrf	0
 10438  02D6  0A84               	incf	4,f
 10439  02D7  0180               	clrf	0
 10440  02D8                     l4356:	
 10441  02D8  1683               	bsf	3,5	;RP0=1, select bank3
 10442  02D9  1703               	bsf	3,6	;RP1=1, select bank3
 10443  02DA  085F               	movf	main@i^(0+384),w
 10444  02DB  1683               	bsf	3,5	;RP0=1, select bank1
 10445  02DC  1303               	bcf	3,6	;RP1=0, select bank1
 10446  02DD  00E1               	movwf	??_main^(0+128)
 10447  02DE  0761               	addwf	??_main^(0+128),w
 10448  02DF  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
 10449  02E0  0084               	movwf	4
 10450  02E1  0800               	movf	0,w
 10451  02E2  00E2               	movwf	(??_main+1)^(0+128)
 10452  02E3  0A84               	incf	4,f
 10453  02E4  0800               	movf	0,w
 10454  02E5  00E3               	movwf	((??_main+1)^(0+128)+1)
 10455  02E6  0863               	movf	(??_main+2)^(0+128),w
 10456  02E7  3A80               	xorlw	128
 10457  02E8  00FF               	movwf	127
 10458  02E9  3080               	movlw	128
 10459  02EA  027F               	subwf	127,w
 10460  02EB  1D03               	skipz
 10461  02EC  2AEF               	goto	u5105
 10462  02ED  3004               	movlw	4
 10463  02EE  0262               	subwf	(??_main+1)^(0+128),w
 10464  02EF                     u5105:	
 10465  02EF  1803               	skipnc
 10466  02F0  2B04               	goto	l4360
 10467  02F1  1683               	bsf	3,5	;RP0=1, select bank3
 10468  02F2  1703               	bsf	3,6	;RP1=1, select bank3
 10469  02F3  085F               	movf	main@i^(0+384),w
 10470  02F4  1683               	bsf	3,5	;RP0=1, select bank1
 10471  02F5  1303               	bcf	3,6	;RP1=0, select bank1
 10472  02F6  00E1               	movwf	??_main^(0+128)
 10473  02F7  0761               	addwf	??_main^(0+128),w
 10474  02F8  3E10               	addlw	(low (_erros| (0+256)))& (0+255)
 10475  02F9  0084               	movwf	4
 10476  02FA  1783               	bsf	3,7	;select IRP bank2
 10477  02FB  0800               	movf	0,w
 10478  02FC  00E2               	movwf	(??_main+1)^(0+128)
 10479  02FD  0A84               	incf	4,f
 10480  02FE  0800               	movf	0,w
 10481  02FF  00E3               	movwf	((??_main+1)^(0+128)+1)
 10482  0300  0862               	movf	(??_main+1)^(0+128),w
 10483  0301  0463               	iorwf	((??_main+1)^(0+128)+1),w
 10484  0302  1D03               	btfss	3,2
 10485  0303  2841               	goto	l4314
 10486  0304                     l4360:	
 10487  0304  3001               	movlw	1
 10488  0305  1683               	bsf	3,5	;RP0=1, select bank3
 10489  0306  1703               	bsf	3,6	;RP1=1, select bank3
 10490  0307  07DF               	addwf	main@i^(0+384),f
 10491  0308  1803               	skipnc
 10492  0309  0AE0               	incf	(main@i+1)^(0+384),f
 10493  030A  3000               	movlw	0
 10494  030B  07E0               	addwf	(main@i+1)^(0+384),f
 10495  030C  0860               	movf	(main@i+1)^(0+384),w
 10496  030D  3A80               	xorlw	128
 10497  030E  00FF               	movwf	127
 10498  030F  3080               	movlw	128
 10499  0310  027F               	subwf	127,w
 10500  0311  1D03               	skipz
 10501  0312  2B15               	goto	u5125
 10502  0313  3008               	movlw	8
 10503  0314  025F               	subwf	main@i^(0+384),w
 10504  0315                     u5125:	
 10505  0315  160A  118A  1C03   	skipc
 10506  0318  2D8A  120A  118A   	goto	l4274
 10507  031B                     l4266:	
 10508                           
 10509                           ;main_sync.c: 131: if(modoLeitura == 8){
 10510  031B  3008               	movlw	8
 10511  031C  1683               	bsf	3,5	;RP0=1, select bank3
 10512  031D  1703               	bsf	3,6	;RP1=1, select bank3
 10513  031E  0663               	xorwf	_modoLeitura^(0+384),w
 10514  031F  1903               	btfsc	3,2
 10515  0320  2D31               	goto	L14
 10516                           
 10517                           ;main_sync.c: 186: else{;main_sync.c: 187: if(channel != modoLeitura){
 10518  0321  0863               	movf	_modoLeitura^(0+384),w
 10519  0322  1683               	bsf	3,5	;RP0=1, select bank1
 10520  0323  1303               	bcf	3,6	;RP1=0, select bank1
 10521  0324  00E1               	movwf	??_main^(0+128)
 10522  0325  01E2               	clrf	(??_main^(0+128)+1)
 10523  0326  1683               	bsf	3,5	;RP0=1, select bank3
 10524  0327  1703               	bsf	3,6	;RP1=1, select bank3
 10525  0328  084A               	movf	(main@channel+1)^(0+384),w
 10526  0329  1683               	bsf	3,5	;RP0=1, select bank1
 10527  032A  1303               	bcf	3,6	;RP1=0, select bank1
 10528  032B  0662               	xorwf	(??_main+1)^(0+128),w
 10529  032C  1D03               	skipz
 10530  032D  2B34               	goto	u5135
 10531  032E  1683               	bsf	3,5	;RP0=1, select bank3
 10532  032F  1703               	bsf	3,6	;RP1=1, select bank3
 10533  0330  0849               	movf	main@channel^(0+384),w
 10534  0331  1683               	bsf	3,5	;RP0=1, select bank1
 10535  0332  1303               	bcf	3,6	;RP1=0, select bank1
 10536  0333  0661               	xorwf	??_main^(0+128),w
 10537  0334                     u5135:	
 10538  0334  1903               	skipnz
 10539  0335  2BA5               	goto	l4394
 10540                           
 10541                           ;main_sync.c: 188: channel = modoLeitura;
 10542  0336  1683               	bsf	3,5	;RP0=1, select bank3
 10543  0337  1703               	bsf	3,6	;RP1=1, select bank3
 10544  0338  0863               	movf	_modoLeitura^(0+384),w
 10545  0339  1683               	bsf	3,5	;RP0=1, select bank1
 10546  033A  1303               	bcf	3,6	;RP1=0, select bank1
 10547  033B  00E1               	movwf	??_main^(0+128)
 10548  033C  01E2               	clrf	(??_main^(0+128)+1)
 10549  033D  0861               	movf	??_main^(0+128),w
 10550  033E  1683               	bsf	3,5	;RP0=1, select bank3
 10551  033F  1703               	bsf	3,6	;RP1=1, select bank3
 10552  0340  00C9               	movwf	main@channel^(0+384)
 10553  0341  1683               	bsf	3,5	;RP0=1, select bank1
 10554  0342  1303               	bcf	3,6	;RP1=0, select bank1
 10555  0343  0862               	movf	(??_main+1)^(0+128),w
 10556  0344  1683               	bsf	3,5	;RP0=1, select bank3
 10557  0345  1703               	bsf	3,6	;RP1=1, select bank3
 10558  0346  00CA               	movwf	(main@channel+1)^(0+384)
 10559                           
 10560                           ;main_sync.c: 189: PORTB = SelectChannel(modoLeitura);
 10561  0347  0863               	movf	_modoLeitura^(0+384),w
 10562  0348  1683               	bsf	3,5	;RP0=1, select bank1
 10563  0349  1303               	bcf	3,6	;RP1=0, select bank1
 10564  034A  00E1               	movwf	??_main^(0+128)
 10565  034B  01E2               	clrf	(??_main^(0+128)+1)
 10566  034C  0861               	movf	??_main^(0+128),w
 10567  034D  00A0               	movwf	SelectChannel@ch^(0+128)
 10568  034E  0862               	movf	(??_main+1)^(0+128),w
 10569  034F  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
 10570  0350  160A  158A  244E  120A  118A  	fcall	_SelectChannel
 10571  0355  1683               	bsf	3,5	;RP0=1, select bank1
 10572  0356  1303               	bcf	3,6	;RP1=0, select bank1
 10573  0357  0820               	movf	?_SelectChannel^(0+128),w
 10574  0358  1283               	bcf	3,5	;RP0=0, select bank0
 10575  0359  1303               	bcf	3,6	;RP1=0, select bank0
 10576  035A  0086               	movwf	6	;volatile
 10577                           
 10578                           ;main_sync.c: 190: for (p = 1; p < 10000; p++);
 10579  035B  3001               	movlw	1
 10580  035C  1683               	bsf	3,5	;RP0=1, select bank3
 10581  035D  1703               	bsf	3,6	;RP1=1, select bank3
 10582  035E  00DD               	movwf	main@p^(0+384)
 10583  035F  3000               	movlw	0
 10584  0360  00DE               	movwf	(main@p^(0+384)+1)
 10585  0361                     l4376:	
 10586  0361  3001               	movlw	1
 10587  0362  1683               	bsf	3,5	;RP0=1, select bank3
 10588  0363  1703               	bsf	3,6	;RP1=1, select bank3
 10589  0364  07DD               	addwf	main@p^(0+384),f
 10590  0365  1803               	skipnc
 10591  0366  0ADE               	incf	(main@p+1)^(0+384),f
 10592  0367  3000               	movlw	0
 10593  0368  07DE               	addwf	(main@p+1)^(0+384),f
 10594  0369  085E               	movf	(main@p+1)^(0+384),w
 10595  036A  3A80               	xorlw	128
 10596  036B  00FF               	movwf	127
 10597  036C  30A7               	movlw	167
 10598  036D  027F               	subwf	127,w
 10599  036E  1D03               	skipz
 10600  036F  2B72               	goto	u5145
 10601  0370  3010               	movlw	16
 10602  0371  025D               	subwf	main@p^(0+384),w
 10603  0372                     u5145:	
 10604  0372  1C03               	skipc
 10605  0373  2B61               	goto	l4376
 10606                           
 10607                           ;main_sync.c: 191: for (i = 0; i < 2; i++)
 10608  0374  1683               	bsf	3,5	;RP0=1, select bank3
 10609  0375  1703               	bsf	3,6	;RP1=1, select bank3
 10610  0376  01DF               	clrf	main@i^(0+384)
 10611  0377  01E0               	clrf	(main@i+1)^(0+384)
 10612  0378                     l4386:	
 10613                           
 10614                           ;main_sync.c: 192: media2[i] = 0;
 10615  0378  1683               	bsf	3,5	;RP0=1, select bank3
 10616  0379  1703               	bsf	3,6	;RP1=1, select bank3
 10617  037A  085F               	movf	main@i^(0+384),w
 10618  037B  1683               	bsf	3,5	;RP0=1, select bank1
 10619  037C  1303               	bcf	3,6	;RP1=0, select bank1
 10620  037D  00E1               	movwf	??_main^(0+128)
 10621  037E  0761               	addwf	??_main^(0+128),w
 10622  037F  3EB8               	addlw	(low (_media2| (0+256)))& (0+255)
 10623  0380  0084               	movwf	4
 10624  0381  1783               	bsf	3,7	;select IRP bank3
 10625  0382  0180               	clrf	0
 10626  0383  0A84               	incf	4,f
 10627  0384  0180               	clrf	0
 10628  0385  3001               	movlw	1
 10629  0386  1683               	bsf	3,5	;RP0=1, select bank3
 10630  0387  1703               	bsf	3,6	;RP1=1, select bank3
 10631  0388  07DF               	addwf	main@i^(0+384),f
 10632  0389  1803               	skipnc
 10633  038A  0AE0               	incf	(main@i+1)^(0+384),f
 10634  038B  3000               	movlw	0
 10635  038C  07E0               	addwf	(main@i+1)^(0+384),f
 10636  038D  0860               	movf	(main@i+1)^(0+384),w
 10637  038E  3A80               	xorlw	128
 10638  038F  00FF               	movwf	127
 10639  0390  3080               	movlw	128
 10640  0391  027F               	subwf	127,w
 10641  0392  1D03               	skipz
 10642  0393  2B96               	goto	u5155
 10643  0394  3002               	movlw	2
 10644  0395  025F               	subwf	main@i^(0+384),w
 10645  0396                     u5155:	
 10646  0396  1C03               	skipc
 10647  0397  2B78               	goto	l4386
 10648                           
 10649                           ;main_sync.c: 193: valorAD[modoLeitura] = 0;
 10650  0398  1683               	bsf	3,5	;RP0=1, select bank3
 10651  0399  1703               	bsf	3,6	;RP1=1, select bank3
 10652  039A  0863               	movf	_modoLeitura^(0+384),w
 10653  039B  1683               	bsf	3,5	;RP0=1, select bank1
 10654  039C  1303               	bcf	3,6	;RP1=0, select bank1
 10655  039D  00E1               	movwf	??_main^(0+128)
 10656  039E  0761               	addwf	??_main^(0+128),w
 10657  039F  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
 10658  03A0  0084               	movwf	4
 10659  03A1  1783               	bsf	3,7	;select IRP bank3
 10660  03A2  0180               	clrf	0
 10661  03A3  0A84               	incf	4,f
 10662  03A4  0180               	clrf	0
 10663  03A5                     l4394:	
 10664                           
 10665                           ;main_sync.c: 194: };main_sync.c: 199: if (lerADpuro == 1) {
 10666  03A5  1683               	bsf	3,5	;RP0=1, select bank3
 10667  03A6  1703               	bsf	3,6	;RP1=1, select bank3
 10668  03A7  0342               	decf	_lerADpuro^(0+384),w
 10669  03A8  1D03               	btfss	3,2
 10670  03A9  2C3F               	goto	l4424
 10671  03AA                     l4396:	
 10672                           
 10673                           ;main_sync.c: 201: PORTB = SelectChannel(modoLeitura);
 10674  03AA  1683               	bsf	3,5	;RP0=1, select bank3
 10675  03AB  1703               	bsf	3,6	;RP1=1, select bank3
 10676  03AC  0863               	movf	_modoLeitura^(0+384),w
 10677  03AD  1683               	bsf	3,5	;RP0=1, select bank1
 10678  03AE  1303               	bcf	3,6	;RP1=0, select bank1
 10679  03AF  00E1               	movwf	??_main^(0+128)
 10680  03B0  01E2               	clrf	(??_main^(0+128)+1)
 10681  03B1  0861               	movf	??_main^(0+128),w
 10682  03B2  00A0               	movwf	SelectChannel@ch^(0+128)
 10683  03B3  0862               	movf	(??_main+1)^(0+128),w
 10684  03B4  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
 10685  03B5  160A  158A  244E  120A  118A  	fcall	_SelectChannel
 10686  03BA  1683               	bsf	3,5	;RP0=1, select bank1
 10687  03BB  1303               	bcf	3,6	;RP1=0, select bank1
 10688  03BC  0820               	movf	?_SelectChannel^(0+128),w
 10689  03BD  1283               	bcf	3,5	;RP0=0, select bank0
 10690  03BE  1303               	bcf	3,6	;RP1=0, select bank0
 10691  03BF  0086               	movwf	6	;volatile
 10692                           
 10693                           ;main_sync.c: 203: for (p = 1; p < 6980; p++);
 10694  03C0  3001               	movlw	1
 10695  03C1  1683               	bsf	3,5	;RP0=1, select bank3
 10696  03C2  1703               	bsf	3,6	;RP1=1, select bank3
 10697  03C3  00DD               	movwf	main@p^(0+384)
 10698  03C4  3000               	movlw	0
 10699  03C5  00DE               	movwf	(main@p^(0+384)+1)
 10700  03C6                     l4404:	
 10701  03C6  3001               	movlw	1
 10702  03C7  1683               	bsf	3,5	;RP0=1, select bank3
 10703  03C8  1703               	bsf	3,6	;RP1=1, select bank3
 10704  03C9  07DD               	addwf	main@p^(0+384),f
 10705  03CA  1803               	skipnc
 10706  03CB  0ADE               	incf	(main@p+1)^(0+384),f
 10707  03CC  3000               	movlw	0
 10708  03CD  07DE               	addwf	(main@p+1)^(0+384),f
 10709  03CE  085E               	movf	(main@p+1)^(0+384),w
 10710  03CF  3A80               	xorlw	128
 10711  03D0  00FF               	movwf	127
 10712  03D1  309B               	movlw	155
 10713  03D2  027F               	subwf	127,w
 10714  03D3  1D03               	skipz
 10715  03D4  2BD7               	goto	u5175
 10716  03D5  3044               	movlw	68
 10717  03D6  025D               	subwf	main@p^(0+384),w
 10718  03D7                     u5175:	
 10719  03D7  1C03               	skipc
 10720  03D8  2BC6               	goto	l4404
 10721                           
 10722                           ;main_sync.c: 204: j = ad();
 10723  03D9  160A  158A  23D0  120A  118A  	fcall	_ad
 10724  03DE  1683               	bsf	3,5	;RP0=1, select bank1
 10725  03DF  1303               	bcf	3,6	;RP1=0, select bank1
 10726  03E0  0821               	movf	(?_ad+1)^(0+128),w
 10727  03E1  1683               	bsf	3,5	;RP0=1, select bank3
 10728  03E2  1703               	bsf	3,6	;RP1=1, select bank3
 10729  03E3  00DC               	movwf	(main@j+1)^(0+384)
 10730  03E4  1683               	bsf	3,5	;RP0=1, select bank1
 10731  03E5  1303               	bcf	3,6	;RP1=0, select bank1
 10732  03E6  0820               	movf	?_ad^(0+128),w
 10733  03E7  1683               	bsf	3,5	;RP0=1, select bank3
 10734  03E8  1703               	bsf	3,6	;RP1=1, select bank3
 10735  03E9  00DB               	movwf	main@j^(0+384)
 10736                           
 10737                           ;main_sync.c: 206: PORTB = SelectChannel(modoLeitura) + 8;
 10738  03EA  0863               	movf	_modoLeitura^(0+384),w
 10739  03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10740  03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10741  03ED  00E1               	movwf	??_main^(0+128)
 10742  03EE  01E2               	clrf	(??_main^(0+128)+1)
 10743  03EF  0861               	movf	??_main^(0+128),w
 10744  03F0  00A0               	movwf	SelectChannel@ch^(0+128)
 10745  03F1  0862               	movf	(??_main+1)^(0+128),w
 10746  03F2  00A1               	movwf	(SelectChannel@ch+1)^(0+128)
 10747  03F3  160A  158A  244E  120A  118A  	fcall	_SelectChannel
 10748  03F8  1683               	bsf	3,5	;RP0=1, select bank1
 10749  03F9  1303               	bcf	3,6	;RP1=0, select bank1
 10750  03FA  0820               	movf	?_SelectChannel^(0+128),w
 10751  03FB  3E08               	addlw	8
 10752  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10753  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 10754  03FE  0086               	movwf	6	;volatile
 10755                           
 10756                           ;main_sync.c: 207: for (p = 1; p < 6980; p++);
 10757  03FF  3001               	movlw	1
 10758  0400  1683               	bsf	3,5	;RP0=1, select bank3
 10759  0401  1703               	bsf	3,6	;RP1=1, select bank3
 10760  0402  00DD               	movwf	main@p^(0+384)
 10761  0403  3000               	movlw	0
 10762  0404  00DE               	movwf	(main@p^(0+384)+1)
 10763  0405                     l4418:	
 10764  0405  3001               	movlw	1
 10765  0406  1683               	bsf	3,5	;RP0=1, select bank3
 10766  0407  1703               	bsf	3,6	;RP1=1, select bank3
 10767  0408  07DD               	addwf	main@p^(0+384),f
 10768  0409  1803               	skipnc
 10769  040A  0ADE               	incf	(main@p+1)^(0+384),f
 10770  040B  3000               	movlw	0
 10771  040C  07DE               	addwf	(main@p+1)^(0+384),f
 10772  040D  085E               	movf	(main@p+1)^(0+384),w
 10773  040E  3A80               	xorlw	128
 10774  040F  00FF               	movwf	127
 10775  0410  309B               	movlw	155
 10776  0411  027F               	subwf	127,w
 10777  0412  1D03               	skipz
 10778  0413  2C16               	goto	u5185
 10779  0414  3044               	movlw	68
 10780  0415  025D               	subwf	main@p^(0+384),w
 10781  0416                     u5185:	
 10782  0416  1C03               	skipc
 10783  0417  2C05               	goto	l4418
 10784                           
 10785                           ;main_sync.c: 208: valorAD[modoLeitura] = j - ad();
 10786  0418  160A  158A  23D0  120A  118A  	fcall	_ad
 10787  041D  1683               	bsf	3,5	;RP0=1, select bank1
 10788  041E  1303               	bcf	3,6	;RP1=0, select bank1
 10789  041F  0820               	movf	?_ad^(0+128),w
 10790  0420  1683               	bsf	3,5	;RP0=1, select bank3
 10791  0421  1703               	bsf	3,6	;RP1=1, select bank3
 10792  0422  025B               	subwf	main@j^(0+384),w
 10793  0423  1683               	bsf	3,5	;RP0=1, select bank1
 10794  0424  1303               	bcf	3,6	;RP1=0, select bank1
 10795  0425  00E1               	movwf	??_main^(0+128)
 10796  0426  0821               	movf	(?_ad+1)^(0+128),w
 10797  0427  1C03               	skipc
 10798  0428  0A21               	incf	(?_ad+1)^(0+128),w
 10799  0429  1683               	bsf	3,5	;RP0=1, select bank3
 10800  042A  1703               	bsf	3,6	;RP1=1, select bank3
 10801  042B  025C               	subwf	(main@j+1)^(0+384),w
 10802  042C  1683               	bsf	3,5	;RP0=1, select bank1
 10803  042D  1303               	bcf	3,6	;RP1=0, select bank1
 10804  042E  00E2               	movwf	(??_main+1)^(0+128)
 10805  042F  1683               	bsf	3,5	;RP0=1, select bank3
 10806  0430  1703               	bsf	3,6	;RP1=1, select bank3
 10807  0431  0863               	movf	_modoLeitura^(0+384),w
 10808  0432  1683               	bsf	3,5	;RP0=1, select bank1
 10809  0433  1303               	bcf	3,6	;RP1=0, select bank1
 10810  0434  00E3               	movwf	(??_main+2)^(0+128)
 10811  0435  0763               	addwf	(??_main+2)^(0+128),w
 10812  0436  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
 10813  0437  0084               	movwf	4
 10814  0438  0861               	movf	??_main^(0+128),w
 10815  0439  1783               	bsf	3,7	;select IRP bank3
 10816  043A  0080               	movwf	0
 10817  043B  0A84               	incf	4,f
 10818  043C  0862               	movf	(??_main+1)^(0+128),w
 10819  043D  0080               	movwf	0
 10820  043E  2BAA               	goto	l4396
 10821  043F                     l4424:	
 10822                           
 10823                           ;main_sync.c: 212: else{;main_sync.c: 213: sum = 0;
 10824  043F  3000               	movlw	0
 10825  0440  00D7               	movwf	(main@sum+3)^(0+384)
 10826  0441  3000               	movlw	0
 10827  0442  00D6               	movwf	(main@sum+2)^(0+384)
 10828  0443  3000               	movlw	0
 10829  0444  00D5               	movwf	(main@sum+1)^(0+384)
 10830  0445  3000               	movlw	0
 10831  0446  00D4               	movwf	main@sum^(0+384)
 10832                           
 10833                           ;main_sync.c: 214: for(j=0; j<1; j++){
 10834  0447  01DB               	clrf	main@j^(0+384)
 10835  0448  01DC               	clrf	(main@j+1)^(0+384)
 10836  0449                     l4428:	
 10837  0449  085C               	movf	(main@j+1)^(0+384),w
 10838  044A  3A80               	xorlw	128
 10839  044B  00FF               	movwf	127
 10840  044C  3080               	movlw	128
 10841  044D  027F               	subwf	127,w
 10842  044E  1D03               	skipz
 10843  044F  2C52               	goto	u5195
 10844  0450  3001               	movlw	1
 10845  0451  025B               	subwf	main@j^(0+384),w
 10846  0452                     u5195:	
 10847  0452  1803               	btfsc	3,0
 10848  0453  2CB8               	goto	l4438
 10849                           
 10850                           ;main_sync.c: 215: media2[j] = media2[j+1];
 10851  0454  1683               	bsf	3,5	;RP0=1, select bank3
 10852  0455  1703               	bsf	3,6	;RP1=1, select bank3
 10853  0456  085B               	movf	main@j^(0+384),w
 10854  0457  1683               	bsf	3,5	;RP0=1, select bank1
 10855  0458  1303               	bcf	3,6	;RP1=0, select bank1
 10856  0459  00E1               	movwf	??_main^(0+128)
 10857  045A  0761               	addwf	??_main^(0+128),w
 10858  045B  3EBA               	addlw	(low ((_media2| (0+256)+2)))& (0+255)
 10859  045C  0084               	movwf	4
 10860  045D  1783               	bsf	3,7	;select IRP bank3
 10861  045E  0800               	movf	0,w
 10862  045F  00E2               	movwf	(??_main+1)^(0+128)
 10863  0460  0A84               	incf	4,f
 10864  0461  0800               	movf	0,w
 10865  0462  00E3               	movwf	((??_main+1)^(0+128)+1)
 10866  0463  1683               	bsf	3,5	;RP0=1, select bank3
 10867  0464  1703               	bsf	3,6	;RP1=1, select bank3
 10868  0465  085B               	movf	main@j^(0+384),w
 10869  0466  1683               	bsf	3,5	;RP0=1, select bank1
 10870  0467  1303               	bcf	3,6	;RP1=0, select bank1
 10871  0468  00E4               	movwf	(??_main+3)^(0+128)
 10872  0469  0764               	addwf	(??_main+3)^(0+128),w
 10873  046A  3EB8               	addlw	(low (_media2| (0+256)))& (0+255)
 10874  046B  0084               	movwf	4
 10875  046C  0862               	movf	(??_main+1)^(0+128),w
 10876  046D  0080               	movwf	0
 10877  046E  0A84               	incf	4,f
 10878  046F  0863               	movf	(??_main+2)^(0+128),w
 10879  0470  0080               	movwf	0
 10880                           
 10881                           ;main_sync.c: 216: sum += media2[j];
 10882  0471  1683               	bsf	3,5	;RP0=1, select bank3
 10883  0472  1703               	bsf	3,6	;RP1=1, select bank3
 10884  0473  085B               	movf	main@j^(0+384),w
 10885  0474  1683               	bsf	3,5	;RP0=1, select bank1
 10886  0475  1303               	bcf	3,6	;RP1=0, select bank1
 10887  0476  00E1               	movwf	??_main^(0+128)
 10888  0477  0761               	addwf	??_main^(0+128),w
 10889  0478  3EB8               	addlw	(low (_media2| (0+256)))& (0+255)
 10890  0479  0084               	movwf	4
 10891  047A  0800               	movf	0,w
 10892  047B  00E2               	movwf	(??_main+1)^(0+128)
 10893  047C  0A84               	incf	4,f
 10894  047D  0800               	movf	0,w
 10895  047E  00E3               	movwf	((??_main+1)^(0+128)+1)
 10896  047F  0862               	movf	(??_main+1)^(0+128),w
 10897  0480  00E4               	movwf	(??_main+3)^(0+128)
 10898  0481  0863               	movf	(??_main+2)^(0+128),w
 10899  0482  00E5               	movwf	((??_main+3)^(0+128)+1)
 10900  0483  3000               	movlw	0
 10901  0484  1BE5               	btfsc	((??_main+3)^(0+128)+1),7
 10902  0485  30FF               	movlw	255
 10903  0486  00E6               	movwf	((??_main+3)^(0+128)+2)
 10904  0487  00E7               	movwf	((??_main+3)^(0+128)+3)
 10905  0488  0864               	movf	(??_main+3)^(0+128),w
 10906  0489  1683               	bsf	3,5	;RP0=1, select bank3
 10907  048A  1703               	bsf	3,6	;RP1=1, select bank3
 10908  048B  07D4               	addwf	main@sum^(0+384),f
 10909  048C  1683               	bsf	3,5	;RP0=1, select bank1
 10910  048D  1303               	bcf	3,6	;RP1=0, select bank1
 10911  048E  0865               	movf	(??_main+4)^(0+128),w
 10912  048F  1103               	clrz
 10913  0490  1803               	skipnc
 10914  0491  3E01               	addlw	1
 10915  0492  1903               	skipnz
 10916  0493  2C97               	goto	u5201
 10917  0494  1683               	bsf	3,5	;RP0=1, select bank3
 10918  0495  1703               	bsf	3,6	;RP1=1, select bank3
 10919  0496  07D5               	addwf	(main@sum+1)^(0+384),f
 10920  0497                     u5201:	
 10921  0497  1683               	bsf	3,5	;RP0=1, select bank1
 10922  0498  1303               	bcf	3,6	;RP1=0, select bank1
 10923  0499  0866               	movf	(??_main+5)^(0+128),w
 10924  049A  1103               	clrz
 10925  049B  1803               	skipnc
 10926  049C  3E01               	addlw	1
 10927  049D  1903               	skipnz
 10928  049E  2CA2               	goto	u5202
 10929  049F  1683               	bsf	3,5	;RP0=1, select bank3
 10930  04A0  1703               	bsf	3,6	;RP1=1, select bank3
 10931  04A1  07D6               	addwf	(main@sum+2)^(0+384),f
 10932  04A2                     u5202:	
 10933  04A2  1683               	bsf	3,5	;RP0=1, select bank1
 10934  04A3  1303               	bcf	3,6	;RP1=0, select bank1
 10935  04A4  0867               	movf	(??_main+6)^(0+128),w
 10936  04A5  1103               	clrz
 10937  04A6  1803               	skipnc
 10938  04A7  3E01               	addlw	1
 10939  04A8  1903               	skipnz
 10940  04A9  2CAD               	goto	u5203
 10941  04AA  1683               	bsf	3,5	;RP0=1, select bank3
 10942  04AB  1703               	bsf	3,6	;RP1=1, select bank3
 10943  04AC  07D7               	addwf	(main@sum+3)^(0+384),f
 10944  04AD                     u5203:	
 10945  04AD  1683               	bsf	3,5	;RP0=1, select bank1
 10946  04AE  1303               	bcf	3,6	;RP1=0, select bank1
 10947  04AF  1683               	bsf	3,5	;RP0=1, select bank3
 10948  04B0  1703               	bsf	3,6	;RP1=1, select bank3
 10949  04B1  3001               	movlw	1
 10950  04B2  07DB               	addwf	main@j^(0+384),f
 10951  04B3  1803               	skipnc
 10952  04B4  0ADC               	incf	(main@j+1)^(0+384),f
 10953  04B5  3000               	movlw	0
 10954  04B6  07DC               	addwf	(main@j+1)^(0+384),f
 10955  04B7  2C49               	goto	l4428
 10956  04B8                     l4438:	
 10957                           
 10958                           ;main_sync.c: 217: };main_sync.c: 218: media2[1] = ad();
 10959  04B8  160A  158A  23D0  120A  118A  	fcall	_ad
 10960  04BD  1683               	bsf	3,5	;RP0=1, select bank1
 10961  04BE  1303               	bcf	3,6	;RP1=0, select bank1
 10962  04BF  0821               	movf	(?_ad+1)^(0+128),w
 10963  04C0  1683               	bsf	3,5	;RP0=1, select bank3
 10964  04C1  1703               	bsf	3,6	;RP1=1, select bank3
 10965  04C2  00BB               	movwf	((_media2+1)^(0+384)+2)
 10966  04C3  1683               	bsf	3,5	;RP0=1, select bank1
 10967  04C4  1303               	bcf	3,6	;RP1=0, select bank1
 10968  04C5  0820               	movf	?_ad^(0+128),w
 10969  04C6  1683               	bsf	3,5	;RP0=1, select bank3
 10970  04C7  1703               	bsf	3,6	;RP1=1, select bank3
 10971  04C8  00BA               	movwf	(_media2^(0+384)+2)
 10972                           
 10973                           ;main_sync.c: 219: sum = (sum + media2[1])/2;
 10974  04C9  0854               	movf	main@sum^(0+384),w
 10975  04CA  1683               	bsf	3,5	;RP0=1, select bank1
 10976  04CB  1303               	bcf	3,6	;RP1=0, select bank1
 10977  04CC  00E1               	movwf	??_main^(0+128)
 10978  04CD  1683               	bsf	3,5	;RP0=1, select bank3
 10979  04CE  1703               	bsf	3,6	;RP1=1, select bank3
 10980  04CF  0855               	movf	(main@sum+1)^(0+384),w
 10981  04D0  1683               	bsf	3,5	;RP0=1, select bank1
 10982  04D1  1303               	bcf	3,6	;RP1=0, select bank1
 10983  04D2  00E2               	movwf	(??_main^(0+128)+1)
 10984  04D3  1683               	bsf	3,5	;RP0=1, select bank3
 10985  04D4  1703               	bsf	3,6	;RP1=1, select bank3
 10986  04D5  0856               	movf	(main@sum+2)^(0+384),w
 10987  04D6  1683               	bsf	3,5	;RP0=1, select bank1
 10988  04D7  1303               	bcf	3,6	;RP1=0, select bank1
 10989  04D8  00E3               	movwf	(??_main^(0+128)+2)
 10990  04D9  1683               	bsf	3,5	;RP0=1, select bank3
 10991  04DA  1703               	bsf	3,6	;RP1=1, select bank3
 10992  04DB  0857               	movf	(main@sum+3)^(0+384),w
 10993  04DC  1683               	bsf	3,5	;RP0=1, select bank1
 10994  04DD  1303               	bcf	3,6	;RP1=0, select bank1
 10995  04DE  00E4               	movwf	(??_main^(0+128)+3)
 10996  04DF  1683               	bsf	3,5	;RP0=1, select bank3
 10997  04E0  1703               	bsf	3,6	;RP1=1, select bank3
 10998  04E1  083A               	movf	(_media2^(0+384)+2),w
 10999  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 11000  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 11001  04E4  00E5               	movwf	(??_main+4)^(0+128)
 11002  04E5  1683               	bsf	3,5	;RP0=1, select bank3
 11003  04E6  1703               	bsf	3,6	;RP1=1, select bank3
 11004  04E7  083B               	movf	((_media2+1)^(0+384)+2),w
 11005  04E8  1683               	bsf	3,5	;RP0=1, select bank1
 11006  04E9  1303               	bcf	3,6	;RP1=0, select bank1
 11007  04EA  00E6               	movwf	((??_main+4)^(0+128)+1)
 11008  04EB  3000               	movlw	0
 11009  04EC  1BE6               	btfsc	((??_main+4)^(0+128)+1),7
 11010  04ED  30FF               	movlw	255
 11011  04EE  00E7               	movwf	((??_main+4)^(0+128)+2)
 11012  04EF  00E8               	movwf	((??_main+4)^(0+128)+3)
 11013  04F0  0865               	movf	(??_main+4)^(0+128),w
 11014  04F1  07E1               	addwf	??_main^(0+128),f
 11015  04F2  0866               	movf	(??_main+5)^(0+128),w
 11016  04F3  1803               	skipnc
 11017  04F4  0F66               	incfsz	(??_main+5)^(0+128),w
 11018  04F5  2CF7               	goto	u5210
 11019  04F6  2CF8               	goto	u5211
 11020  04F7                     u5210:	
 11021  04F7  07E2               	addwf	(??_main^(0+128)+1),f
 11022  04F8                     u5211:	
 11023  04F8  0867               	movf	(??_main+6)^(0+128),w
 11024  04F9  1803               	skipnc
 11025  04FA  0F67               	incfsz	(??_main+6)^(0+128),w
 11026  04FB  2CFD               	goto	u5212
 11027  04FC  2CFE               	goto	u5213
 11028  04FD                     u5212:	
 11029  04FD  07E3               	addwf	(??_main^(0+128)+2),f
 11030  04FE                     u5213:	
 11031  04FE  0868               	movf	(??_main+7)^(0+128),w
 11032  04FF  1803               	skipnc
 11033  0500  0A68               	incf	(??_main+7)^(0+128),w
 11034  0501  07E4               	addwf	(??_main^(0+128)+3),f
 11035  0502  3001               	movlw	1
 11036  0503                     u5225:	
 11037  0503  1003               	clrc
 11038  0504  0CE4               	rrf	(??_main^(0+128)+3),f
 11039  0505  0CE3               	rrf	(??_main^(0+128)+2),f
 11040  0506  0CE2               	rrf	(??_main^(0+128)+1),f
 11041  0507  0CE1               	rrf	??_main^(0+128),f
 11042  0508  3EFF               	addlw	-1
 11043  0509  1D03               	skipz
 11044  050A  2D03               	goto	u5225
 11045  050B  0864               	movf	(??_main+3)^(0+128),w
 11046  050C  1683               	bsf	3,5	;RP0=1, select bank3
 11047  050D  1703               	bsf	3,6	;RP1=1, select bank3
 11048  050E  00D7               	movwf	(main@sum+3)^(0+384)
 11049  050F  1683               	bsf	3,5	;RP0=1, select bank1
 11050  0510  1303               	bcf	3,6	;RP1=0, select bank1
 11051  0511  0863               	movf	(??_main+2)^(0+128),w
 11052  0512  1683               	bsf	3,5	;RP0=1, select bank3
 11053  0513  1703               	bsf	3,6	;RP1=1, select bank3
 11054  0514  00D6               	movwf	(main@sum+2)^(0+384)
 11055  0515  1683               	bsf	3,5	;RP0=1, select bank1
 11056  0516  1303               	bcf	3,6	;RP1=0, select bank1
 11057  0517  0862               	movf	(??_main+1)^(0+128),w
 11058  0518  1683               	bsf	3,5	;RP0=1, select bank3
 11059  0519  1703               	bsf	3,6	;RP1=1, select bank3
 11060  051A  00D5               	movwf	(main@sum+1)^(0+384)
 11061  051B  1683               	bsf	3,5	;RP0=1, select bank1
 11062  051C  1303               	bcf	3,6	;RP1=0, select bank1
 11063  051D  0861               	movf	??_main^(0+128),w
 11064  051E  1683               	bsf	3,5	;RP0=1, select bank3
 11065  051F  1703               	bsf	3,6	;RP1=1, select bank3
 11066  0520  00D4               	movwf	main@sum^(0+384)
 11067                           
 11068                           ;main_sync.c: 220: valorAD[modoLeitura] = sum & 0xFFFF;
 11069  0521  0863               	movf	_modoLeitura^(0+384),w
 11070  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11071  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11072  0524  00E1               	movwf	??_main^(0+128)
 11073  0525  0761               	addwf	??_main^(0+128),w
 11074  0526  3EA8               	addlw	(low (_valorAD| (0+256)))& (0+255)
 11075  0527  0084               	movwf	4
 11076  0528  1683               	bsf	3,5	;RP0=1, select bank3
 11077  0529  1703               	bsf	3,6	;RP1=1, select bank3
 11078  052A  0854               	movf	main@sum^(0+384),w
 11079  052B  1783               	bsf	3,7	;select IRP bank3
 11080  052C  0080               	movwf	0
 11081  052D  0A84               	incf	4,f
 11082  052E  0855               	movf	(main@sum+1)^(0+384),w
 11083  052F  0080               	movwf	0
 11084  0530  2B1B               	goto	l4266
 11085  0531                     L14:	
 11086  0531                     __end_of_main:	
 11087  0531  160A  118A  2D88   	ljmp	l4268


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     64      67
    BANK1            80     73      73
    BANK3            96     24      84
    BANK2            96      0      56

Pointer List with Targets:

    enviar@envia	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    protocolo@tam	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    protocolo@payload	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    protocolo@cmd	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    escreve_b@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    le_b@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    escreve_k@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    le_k@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    escreve_alpha@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    le_alpha@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 

    le_temp@p	PTR unsigned char  size(1) Largest target is 40
		 -> serial(BANK2[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruption in COMMON

    _protocolo->_le_alpha
    _protocolo->_le_b
    _protocolo->_le_k
    _ok->_erro
    _le_temp->i1___ftmul
    i1___ftmul->i1___ftpack
    ___fttol->i1___ftmul
    _le_k->___awdiv
    _le_b->___awdiv
    _le_alpha->___awdiv
    _escreve_k->i1___awtoft
    _escreve_b->i1___awtoft
    i1___ftdiv->i1___awtoft
    i1___awtoft->i1___ftpack
    _escreve_alpha->i1_setEEPROM
    i1_setEEPROM->i1___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruption in BANK0

    _interruption->_protocolo
    _protocolo->_le_temp
    _le_temp->___fttol
    ___fttol->i1___ftmul
    _escreve_k->i1___ftdiv
    _escreve_b->i1___ftdiv

Critical Paths under _main in BANK1

    _main->___ftmul
    _inicializar->_initLT
    _initLT->_escreveLT
    _fabs->___ftge
    ___ftge->___ftsub
    _compara->_setEEPROM
    _setEEPROM->_getEEPROM
    ___ftsub->___ftdiv
    ___ftadd->___awtoft
    ___ftmul->___ftsub
    ___ftdiv->___ftadd
    ___awtoft->___ftpack

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   26402
                                             65 BANK1      8     8      0
                                              0 BANK3     24    24      0
                      _SelectChannel
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                                 _ad
                            _compara
                               _fabs
                          _getEEPROM
                        _inicializar
 ---------------------------------------------------------------------------------
 (1) _inicializar                                          2     2      0    1559
                                             10 BANK1      2     2      0
                             _initLT
 ---------------------------------------------------------------------------------
 (2) _initLT                                               1     1      0    1513
                                              9 BANK1      1     1      0
                          _escreveLT
 ---------------------------------------------------------------------------------
 (3) _escreveLT                                            9     8      1    1513
                                              0 BANK1      9     8      1
 ---------------------------------------------------------------------------------
 (1) _fabs                                                 3     0      3     823
                                             55 BANK1      3     0      3
                             ___bmul (ARG)
                             ___ftge
                            ___ftneg
                            ___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     520
                                             49 BANK1      6     0      6
                             ___bmul (ARG)
                            ___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _compara                                              8     8      0    1929
                                              5 BANK1      8     8      0
                          _getEEPROM
                          _setEEPROM
 ---------------------------------------------------------------------------------
 (2) _setEEPROM                                            2     1      1     912
                                              3 BANK1      2     1      1
                          _getEEPROM (ARG)
 ---------------------------------------------------------------------------------
 (1) _getEEPROM                                            3     3      0      45
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ad                                                  12    10      2      71
                                              0 BANK1     12    10      2
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4563
                                             43 BANK1      6     0      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3600
                                             14 BANK1     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    3290
                                             49 BANK1     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                            ___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    3704
                                             27 BANK1     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     847
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    3119
                                              8 BANK1      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2376
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SelectChannel                                        2     0      2     686
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruption                                         7     7      0   13615
                                             57 BANK0      7     7      0
                             _enviar
                          _protocolo
 ---------------------------------------------------------------------------------
 (5) _protocolo                                           29    27      2   13272
                                             30 BANK0     27    25      2
                            ___awdiv
                               _erro
                      _escreve_alpha
                          _escreve_b
                          _escreve_k
                           _le_alpha
                               _le_b
                               _le_k
                            _le_temp
                                 _ok
 ---------------------------------------------------------------------------------
 (6) _ok                                                   0     0      0      22
                               _erro
 ---------------------------------------------------------------------------------
 (7) _erro                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _le_temp                                              6     4      2    1796
                                             24 BANK0      6     4      2
                            ___fttol
                           i1___bmul
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (7) i1___ftmul                                           16    10      6     843
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           i1___bmul (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     316
                                             10 BANK0     14    10      4
                           i1___bmul (ARG)
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _le_k                                                 5     3      2     824
                                              9 COMMON     5     3      2
                            ___awdiv (ARG)
                           i1___bmul
                        i1_getEEPROM
 ---------------------------------------------------------------------------------
 (6) _le_b                                                 5     3      2     824
                                              9 COMMON     5     3      2
                            ___awdiv (ARG)
                           i1___bmul
                        i1_getEEPROM
 ---------------------------------------------------------------------------------
 (6) _le_alpha                                             5     3      2     890
                                              9 COMMON     5     3      2
                            ___awdiv (ARG)
                           i1___bmul
                        i1_getEEPROM
 ---------------------------------------------------------------------------------
 (7) i1_getEEPROM                                          3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _escreve_k                                            5     5      0    2166
                                             16 BANK0      5     5      0
                         i1___awtoft
                           i1___bmul
                          i1___ftdiv
                        i1_setEEPROM
 ---------------------------------------------------------------------------------
 (6) _escreve_b                                            5     5      0    2166
                                             16 BANK0      5     5      0
                         i1___awtoft
                           i1___bmul
                          i1___ftdiv
                        i1_setEEPROM
 ---------------------------------------------------------------------------------
 (7) i1___ftdiv                                           16    10      6     849
                                              0 BANK0     16    10      6
                         i1___awtoft (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1___awtoft                                           6     3      3     608
                                              8 COMMON     6     3      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___ftpack                                           8     3      5     465
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (6) _escreve_alpha                                        7     7      0     754
                                              6 COMMON     7     7      0
                           i1___bmul
                        i1_setEEPROM
 ---------------------------------------------------------------------------------
 (7) i1_setEEPROM                                          2     1      1     200
                                              4 COMMON     2     1      1
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     315
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     684
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _enviar                                               8     6      2     275
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SelectChannel
   ___awtoft
     ___ftpack
   ___bmul
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftge
     ___bmul (ARG)
     ___ftsub (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftsub (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   ___ftsub
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
   _ad
   _compara
     _getEEPROM
     _setEEPROM
       _getEEPROM (ARG)
   _fabs
     ___bmul (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
       ___ftsub (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   _getEEPROM
   _inicializar
     _initLT
       _escreveLT

 _interruption (ROOT)
   _enviar
   _protocolo
     ___awdiv
     _erro
     _escreve_alpha
       i1___bmul
       i1_setEEPROM
         i1___bmul (ARG)
     _escreve_b
       i1___awtoft
         i1___ftpack
       i1___bmul
       i1___ftdiv
         i1___awtoft (ARG)
           i1___ftpack
         i1___ftpack (ARG)
       i1_setEEPROM
         i1___bmul (ARG)
     _escreve_k
       i1___awtoft
         i1___ftpack
       i1___bmul
       i1___ftdiv
         i1___awtoft (ARG)
           i1___ftpack
         i1___ftpack (ARG)
       i1_setEEPROM
         i1___bmul (ARG)
     _le_alpha
       ___awdiv (ARG)
       i1___bmul (ARG)
       i1_getEEPROM (ARG)
     _le_b
       ___awdiv (ARG)
       i1___bmul (ARG)
       i1_getEEPROM (ARG)
     _le_k
       ___awdiv (ARG)
       i1___bmul (ARG)
       i1_getEEPROM (ARG)
     _le_temp
       ___fttol
         i1___bmul (ARG)
         i1___ftmul (ARG)
           i1___bmul (ARG)
           i1___ftpack (ARG)
       i1___bmul
       i1___ftmul
         i1___bmul (ARG)
         i1___ftpack (ARG)
     _ok
       _erro

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     18      54       9       87.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      38      11       58.3%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     49      49       7       91.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     126      12        0.0%
ABS                  0      0     126       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 13 19:51:07 2019

                      _b 01BC                        _k 01BF               i1___awtoft 1A2C  
             i1___ftpack 1DEA           ___bmul@product 00A2              __CFG_CP$OFF 0000  
                     _BF 04A0                       _RD 0C60                       _b1 01C6  
                     _b2 01C5                       _WR 0C61                       _k1 01C8  
                     _k2 01C7             ___awdiv@sign 0076                       _ad 1BD0  
                     _ok 19CE                       fsr 0004             ___ftadd@exp1 00BA  
           ___ftadd@exp2 00B9             ___ftadd@sign 00B8                      ?_ad 00A0  
                    ?_ok 0070                      l228 1C60                      l431 1BEF  
                    l443 1A8B                      l428 1BDC                      l437 1A20  
                    l806 1EA3                      l830 092E                      l807 1EAB  
                    l799 1E8E                      _GIE 005F                      _RD3 0043  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _RP0 001D                      _RP1 001E             __CFG_CPD$OFF 0000  
                    _PSA 040B   __size_of_escreve_alpha 006F                      fsr0 0004  
           i1___ftdiv@f1 0023             i1___ftdiv@f2 0020             i1___ftdiv@f3 002B  
                    indf 0000             i1___awtoft@c 0078             __CFG_FOSC$HS 0000  
           i1___ftmul@f1 0078             i1___ftmul@f2 007B              main@difTemp 01CB  
            main@channel 01C9              i1_getEEPROM 19F8                     ??_ad 00A2  
                   ??_ok 0072             __CFG_LVP$OFF 0000             ___ftdiv@cntr 00C5  
           ___ftdiv@sign 00CA                     l3002 071D                     l3012 0737  
                   l3030 076A                     l3040 0784                     l3050 079E  
                   l3060 07B8                     l3070 07D2                     l4112 1A9C  
                   l3082 1E67                     l4122 1152                     l3084 1E73  
                   l4212 1A56                     l3094 1EA1                     l3086 1E78  
                   l3078 1E60                     l4150 11CC                     l4142 11AD  
                   l3096 1E93                     l4128 1168                     l3504 0975  
                   l3512 1B47                     l4312 17ED                     l4170 12F1  
                   l4322 005E                     l4314 0041                     l4306 16FF  
                   l4092 1004                     l4164 12DB                     l3444 08AF  
                   l3516 1B56                     l3604 1D7A                     l4404 03C6  
                   l4182 1330                     l3454 08C5                     l3622 0A19  
                   l4350 0291                     l4512 1C71                     l4096 100A  
                   l3472 08F4                     l3448 08B6                     l3632 0A30  
                   l3616 0993                     l2832 0542                     l4424 043F  
                   l4336 009E                     l4360 0304                     l4256 14C2  
                   l4248 14A7                     l4194 1358                     l4186 1340  
                   l3490 0940                     l3474 0900                     l3466 08DF  
                   l3650 0B06                     l2850 057B                     l2842 055C  
                   l4418 0405                     l4282 15A7                     l4274 158A  
                   l4266 031B                     l3660 1C4F                     l3484 091E  
                   l3476 0905                     l3644 0AB3                     l2908 0616  
                   l2860 0595                     l4428 0449                     l4356 02D8  
                   l4268 1588                     l4198 1368                     l3494 0952  
                   l3486 092A                     l3478 0909                     l3654 0B5C  
                   l2926 064C                     l2918 062D                     l4438 04B8  
         escreve_alpha@p 007A                     l3664 1C58                     l2936 0666  
                   l4376 0361                     l4296 15E7                     l3674 1C6A  
                   l2954 0699                     l4386 0378                     l4394 03A5  
                   l3676 1C8B                     l3668 1C61                     l2964 06B3  
                   l4396 03AA                     l2974 06CD                     l2878 05C8  
                   l2984 06E7                     l2888 05E2                     l2994 06FE  
                   l2898 05FC                     _T0CS 040D                     u3005 077B  
                   u3015 0795                     u3025 07AF                     u3115 1E9A  
                   u3035 07C9                     u3045 07E3                     u4005 1D8B  
                   u3155 1EB2                     u3075 1E6C                     u4035 0A2A  
                   u4045 0A5F                     u5005 1585                     u3095 1E87  
                   u4055 0A8E                     _PIE1 008C                     u4065 0AE1  
                   u5201 0497                     u5105 02EF                     u5025 15B8  
                   u5210 04F7                     u5202 04A2                     u4075 0B33  
                   u5211 04F8                     u5203 04AD                     u5035 15F8  
                   u5212 04FD                     u4085 0B6D                     u5213 04FE  
                   u5125 0315                     u2815 05C1                     u5135 0334  
                   u2905 0692                     u2825 05D9                     u5225 0503  
                   u5145 0372                     u5065 006F                     u2915 06AA  
                   u2835 05F3                     u5155 0396                     u5075 00AF  
                   _PEIE 005E                     u2925 06C4                     u2845 060D  
                   u2765 0553                     u2774 0566                     u3815 08E0  
                   u2935 06DE                     u2855 0627                     u2775 0564  
                   u5175 03D7                     u2864 0637                     u3905 091F  
                   u2945 06F8                     u2865 0635                     u2785 058C  
                   u5185 0416                     u2954 0708                     u2955 0706  
                   u2875 065D                     u2795 05A6                     u5195 0452  
                   _RCIE 0465                     _RCIF 0065                     u4805 11AE  
                   u3845 08F5                     u2965 072E                     u2885 0677  
                   u4815 11BF                     u2975 0748                     u4825 11CD  
                   u4905 1341                     _PIR1 000C                     u4915 1349  
                   u3875 090A                     u2995 0763                     u4785 117A  
                   u4865 12FD                     u4795 118C                     u4955 1369  
                   u4875 130F                     u4965 1371                     u4995 14D3  
                   _TMR0 0001                     _TRMT 04C1                     _WREN 0C62  
            compara@comp 00AB             __CFG_WRT$OFF 0000                     _cSum 0061  
                   _fabs 1AB5                     _le_b 1ADE                     _le_k 1B0A  
                   _main 1396                     _erro 19D3             ___ftpack@arg 00A0  
           ___ftpack@exp 00A3                     _temp 0190                     btemp 007E  
          i1___ftdiv@exp 002E                     start 0012            __CFG_IESO$OFF 0000  
           ?_inicializar 0070            _protocolo$363 0044            _protocolo$364 0046  
      ___bmul@multiplier 00A3             ___ftmul@cntr 00DF             ___ftmul@sign 00E0  
          i1___ftmul@exp 0024             ___fttol@exp1 0037             ___fttol@lval 0033  
i1___ftmul@f3_as_product 0025                    ?_fabs 00D7                    ?_le_b 0079  
                  ?_le_k 0079                    ?_main 0070                    ?_erro 0070  
        __end_of___awdiv 1DEA                    _EEADR 010D          __end_of___ftadd 098F  
                  _EEDAT 010C            __CFG_WDTE$OFF 0000              i1_setEEPROM 07E6  
        __end_of___ftdiv 11F2                    _EEPGD 0C67          __end_of___ftneg 19E7  
                  _ANSEL 0188          __end_of___ftmul 1396          ___awdiv@divisor 0070  
        __end_of___ftsub 1A6E          __end_of___fttol 0886                    i1l422 1BCB  
                  i1l416 1B98                    i1l265 1CA9                    i1l418 1BB7  
                  i1l443 07FB                    i1l437 1A05                    i1l806 1E35  
                  i1l807 1E3D                    i1l890 0860                    i1l799 1E20  
        ___awdiv@counter 0075                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
                  _TXSTA 0098                    ad@_AD 00A6           __CFG_FCMEN$OFF 0000  
        __end_of_compara 0B70        le_temp@temp_index 0038          __end_of_le_temp 1D39  
          ___awtoft@sign 00AD         escreve_b@write_b 0033                    _fator 01E1  
                  fabs@d 00D7                    _erros 0110                    le_b@n 0079  
                  le_b@p 007D            ___ftpack@sign 00A4                    le_k@n 0079  
                  le_k@p 007D                    main@i 01DF                    main@j 01DB  
                  main@p 01DD                    main@t 01D8                    erro@e 0071  
       __end_ofi1___bmul 19F8           __CFG_BOREN$OFF 0000                    pclath 000A  
         i1___ftdiv@cntr 002A           i1___ftdiv@sign 002F                    status 0003  
                  wtemp0 007E       __size_ofi1___ftdiv 00B8       __size_ofi1___ftmul 00D1  
          _escreve_alpha 1013           i1___ftpack@arg 0070           i1___ftpack@exp 0073  
        __initialization 0015             __end_of_fabs 1ADE             __end_of_le_b 1B0A  
           __end_of_le_k 1B36             __end_of_main 0531             __end_of_erro 19DD  
            enviar@envia 0074              ?i1___awtoft 0078              ?i1___ftpack 0070  
         i1___ftmul@cntr 0028           i1___ftmul@sign 0029         escreve_k@write_k 0033  
                 ??_fabs 00DA                   ??_le_b 007B                   ??_le_k 007B  
                 ??_main 00E1            ___fttol@sign1 0032                   ??_erro 0070  
           i1getEEPROM@c 0071                   _EECON2 018D         ___awdiv@dividend 0072  
       __end_of___awtoft 1AB5         __end_of___ftpack 1EC4                   _ANSELH 0189  
escreve_alpha@novo_fator 0078                   i1l3112 0823                   i1l3210 10F5  
                 i1l3130 084C                   i1l4010 0F04                   i1l3140 086F  
                 i1l3132 085C                   i1l3108 081A                   i1l4020 0F1B  
                 i1l4030 0F37                   i1l4022 0F23                   i1l4014 0F0F  
                 i1l4006 0EF9                   i1l3144 087D                   i1l3232 120A  
                 i1l3402 1D9B                   i1l3218 1114                   i1l3250 125F  
                 i1l3322 1CF8                   i1l4050 0F74                   i1l4042 0F59  
                 i1l3420 1DBC                   i1l3180 1A36                   i1l3324 1D2B  
                 i1l4044 0F63                   i1l4036 0F43                   i1l4028 0F2F  
                 i1l3430 1DDD                   i1l3190 109A                   i1l3262 1287  
                 i1l3254 126F                   i1l3238 1220                   i1l4070 0FCC  
                 i1l4062 0F96                   i1l4054 0F7F                   i1l4038 0F4B  
                 i1l3408 1DA6                   i1l3352 1044                   i1l3336 1C23  
                 i1l3434 1DE5                   i1l3426 1DD2                   i1l3418 1DAE  
                 i1l3282 19EF                   i1l3346 1042                   i1l3266 1297  
                 i1l4058 0F8A                   i1l4074 0FD3                   i1l2804 1E33  
                 i1l3196 10B0                   i1l3364 1F7C                   i1l4076 0FF3  
                 i1l4086 1BC2                   i1l3278 19E9                   i1l2806 1E25  
                 i1l3374 1FBF                   i1l3386 1EDE                   i1l3802 0C6F  
                 i1l3732 0BB1                   i1l4460 1C8E                   i1l3830 0CA7  
                 i1l3806 0C7A                   i1l3742 0BD3                   i1l2792 1DF9  
                 i1l3920 0DC7                   i1l3912 0DAB                   i1l3904 0D82  
                 i1l3728 0BA6                   i1l4472 1CD0                   i1l4480 1CD6  
                 i1l2794 1E05                   i1l3914 0DB6                   i1l3906 0D9F  
                 i1l3850 0CD0                   i1l3834 0CAE                   i1l3818 0C8F  
                 i1l3754 0BEC                   i1l3746 0BDE                   i1l2796 1E0A  
                 i1l2788 1DF2                   i1l3932 0DDF                   i1l3924 0DD2  
                 i1l3950 0E0B                   i1l3862 0CE2                   i1l3854 0CD6  
                 i1l3838 0CB8                   i1l3782 0C31                   i1l3872 0CFB  
                 i1l3768 0C05                   i1l3946 0E04                   i1l3890 0D4D  
                 i1l3882 0D24                   i1l3866 0CEA                   i1l3858 0CDC  
                 i1l3786 0C3C                   i1l3876 0D06                   i1l3796 0C5E  
                 i1l3992 0ED5                   i1l3984 0EB9                   i1l3896 0D59  
                 i1l3888 0D30                   i1l3898 0D76                   i1l3998 0EE5  
                 _INTCON 000B                   u321_25 084D                   u332_25 10C2  
                 u324_25 0865                   u340_25 122C                   u333_25 10D4  
                 u341_25 123E                   u270_25 1E2C                   u334_25 10F6  
                 u318_25 082A                   u350_25 12A0                   u335_25 1107  
                 u336_25 1115                   u360_25 1F85                   u344_25 1270  
                 u361_25 1F1F                   u345_25 1278                   u274_25 1E44  
                 u266_25 1DFE                   u268_25 1E19                   u365_25 1DB1  
                 u349_25 1298                   u358_25 103A                   u471_25 1BA2  
                 u367_25 1DBD                   u359_25 107F                   u368_25 1DC9  
                 u369_25 1DD3                   _TMR0IE 005D                   _TMR0IF 005A  
                 _SPBRGH 009A                   _SSPCON 0014                   _SSPBUF 0013  
         ?_escreve_alpha 0070             le_temp@valor 003B                   ad@_AD0 00A8  
                 ad@_AD1 00AA           __CFG_PWRTE$OFF 0000         __end_of_le_alpha 1C4E  
                 ___bmul 1000                   ___ftge 1B36                ??___awdiv 0074  
              ??___ftadd 00B4                ??___ftdiv 00C1                ??___ftneg 00A3  
              ??___ftmul 00D7                ??___ftsub 00D1                ??___fttol 002E  
           protocolo@cmd 0052                   _fator1 01C4                   _fator2 01C3  
           protocolo@tam 0055                   _media2 01B8                   _initLT 1B65  
                 _enviar 1B94         ___awdiv@quotient 0077                   _serial 0120  
              ??_compara 00A5    ___ftmul@f3_as_product 00DC                ??_le_temp 003A  
      __end_ofi1___ftdiv 113A        __end_ofi1___ftmul 12C3                   saved_w 007E  
    __size_ofi1___awtoft 0021      __size_ofi1___ftpack 006C  __end_of__initialization 003D  
        i1___awtoft@sign 007D               ___ftadd@f1 00AE               ___ftadd@f2 00B1  
             ___ftge@ff1 00D1               ___ftge@ff2 00D4          i1___ftpack@sign 0074  
             ___ftdiv@f1 00BE               ___ftdiv@f2 00BB               ___ftdiv@f3 00C6  
             ___ftneg@f1 00A0               ___awtoft@c 00A8      ___bmul@multiplicand 00A0  
             ___ftmul@f1 00D1               ___ftmul@f2 00D4               ___ftsub@f1 00CE  
             ___ftsub@f2 00CB               ___fttol@f1 002A           __pcstackCOMMON 0070  
     __size_of_getEEPROM 001D             __pidataBANK3 19CB            ?_interruption 0070  
   __size_of_inicializar 0058               __end_of_ad 1C0E                ?i1___bmul 0070  
             __end_of_ok 19D3             ?i1_getEEPROM 0070         i1___bmul@product 0073  
             __pbssBANK0 0060               __pbssBANK2 0110               __pbssBANK3 0190  
     __size_of_escreveLT 02B2       __size_of_escreve_b 009E       __size_of_escreve_k 009E  
        ??_escreve_alpha 0076       __size_of_setEEPROM 0022             inicializar@i 00AA  
 __size_of_SelectChannel 0040               __pmaintext 1396           ??_interruption 0059  
                ?___bmul 00A0                  ?___ftge 00D1               __pintentry 0004  
                ?_initLT 0070                  ?_enviar 0070         protocolo@comando 0048  
                _BAUDCTL 0187                ?___awtoft 00A8                ?___ftpack 00A0  
             ??i1___bmul 0071             ?i1_setEEPROM 0074         protocolo@tamanho 0053  
       protocolo@payload 0058        __end_of_getEEPROM 1A2C       __size_of_protocolo 0490  
              ?_le_alpha 0079                  _SSPSTAT 0094               getEEPROM@c 00A1  
        __size_of___bmul 0013          __size_of___ftge 002F             ??i1___awtoft 007B  
           ??i1___ftpack 0075                  ___awdiv 1D91                  ___ftadd 0886  
                ___ftdiv 113A                  ___ftneg 19DD                  ___ftmul 12C3  
                ___ftsub 1A4D                  ___fttol 0809                  _idPlaca 0062  
        __size_of_initLT 002F          __size_of_enviar 003C        __end_of_escreveLT 07E6  
             ??___awtoft 00AB               ??___ftpack 00A5        __end_of_escreve_b 1F62  
      __end_of_escreve_k 2000                  __ptext1 1D39                  __ptext2 1B65  
                __ptext3 0534                  __ptext4 1AB5                  __ptext5 19DD  
                __ptext6 1B36                  __ptext7 098F                  __ptext8 1A6E  
                __ptext9 1A0F                  _compara 098F                  _le_temp 1CE2  
      __end_of_setEEPROM 1A90            _SelectChannel 1C4E      i1___bmul@multiplier 0072  
                _valorAD 01A8                  clrloop0 0802                  main@sum 01D4  
             ??_le_alpha 007B     end_of_initialization 003D                  enviar@i 0076  
                enviar@n 0070       __end_ofi1___awtoft 1A4D       __end_ofi1___ftpack 1E56  
                psplit$0 D0036        __end_of_protocolo 1000            escreveLT@data 00A0  
              _PORTDbits 0008           ?_SelectChannel 00A0                _TRISDbits 0088  
              i1___ftdiv 1082     pnum$maintext_split_1 0036                i1___ftmul 11F2  
   __end_of_interruption 1CE2     __size_ofi1_getEEPROM 0017              ___ftdiv@exp 00C9  
        SelectChannel@ch 00A0              ___ftmul@exp 00DB           __end_of___bmul 1013  
         __end_of___ftge 1B65           setEEPROM@valor 00A3           __end_of_initLT 1B94  
         __end_of_enviar 1BD0               escreveLT@i 00A5               escreveLT@j 00A7  
      __size_ofi1___bmul 0011      start_initialization 0015     __size_ofi1_setEEPROM 001A  
             escreve_b@p 0032               escreve_k@p 0032               ?i1___ftdiv 0020  
             ?i1___ftmul 0078             getEEPROM@aux 00A2            ??_inicializar 00AA  
               ??___bmul 00A1                 ??___ftge 00D7              protocolo@id 004E  
            __pdataBANK3 01E1                 ??_initLT 00A9                 ??_enviar 0072  
        ??_SelectChannel 00A2        __size_of___awtoft 0025        __size_of___ftpack 006E  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
          __pcstackBANK3 01C9           i1getEEPROM@aux 0072        __size_of_le_alpha 0040  
              _getEEPROM 1A0F    __end_of_escreve_alpha 1082          protocolo@id_370 004F  
        protocolo@id_372 0057          protocolo@id_365 0056          protocolo@id_376 0049  
               ?___awdiv 0070                 ?___ftadd 00AE                 ?___ftdiv 00BB  
               ?___ftneg 00A0                 ?___ftmul 00D1                 ?___ftsub 00CB  
               ?___fttol 002A                _lerADpuro 01C2      __end_of_inicializar 1D91  
               ?_compara 0070                 ?_le_temp 0038    __size_of_interruption 0054  
              _escreveLT 0534                _escreve_b 1EC4                _escreve_k 1F62  
            ??i1___ftdiv 0026                _setEEPROM 1A6E              ??i1___ftmul 0020  
      escreveLT@chipAddr 00A4                _recebidos 0060              __size_of_ad 003E  
            __size_of_ok 0005        interrupt_function 0004               ?_getEEPROM 0070  
              clear_ram0 0801    i1___bmul@multiplicand 0070             _interruption 1C8E  
      interruption@uByte 005F                 i1___bmul 19E7                _protocolo 0B70  
              le_alpha@n 0079                le_alpha@p 007D               ?_escreveLT 00A0  
             ?_escreve_b 0070               ?_escreve_k 0070     escreve_alpha@w_alpha 007B  
             ?_setEEPROM 00A3            setEEPROM@addr 00A4          compara@comparar 00A9  
            _inicializar 1D39             pnum$maintext 000D         __size_of___awdiv 0059  
       __size_of___ftadd 0109         __size_of___ftdiv 00B8         __size_of___ftneg 000A  
       __size_of___ftmul 00D3         __size_of___ftsub 0021         __size_of___fttol 007D  
               ___awtoft 1A90                 ___ftpack 1E56               ?_protocolo 003E  
       __size_of_compara 01E1         __size_of_le_temp 0057           protocolo@i_360 004C  
         protocolo@i_362 0050           protocolo@i_371 004A                 _main$962 01CE  
               _main$963 01D1            ??i1_getEEPROM 0070                 __ptext10 1BD0  
               __ptext11 1A4D                 __ptext20 0B70                 __ptext12 0886  
               __ptext21 19CE                 __ptext13 12C3                 __ptext30 1F62  
               __ptext22 19D3                 __ptext14 113A                 __ptext31 1EC4  
               __ptext23 1CE2                 __ptext15 1000                 __ptext32 1082  
               __ptext24 11F2                 __ptext16 1A90                 __ptext33 1A2C  
               __ptext25 0809                 __ptext17 1E56                 __ptext34 1DEA  
               __ptext26 1B0A                 __ptext18 1C4E                 __ptext35 1013  
               __ptext27 1ADE                 __ptext19 1C8E                 __ptext36 07E6  
               __ptext28 1C0E                 __ptext37 19E7                 __ptext29 19F8  
               __ptext38 1D91                 __ptext39 1B94        __CFG_BOR4V$BOR40V 0000  
               _le_alpha 1C0E         i1setEEPROM@valor 0074              _modoLeitura 01E3  
            ??_getEEPROM 00A0            __size_of_fabs 0029            __size_of_le_b 002C  
          __size_of_le_k 002C            __size_of_main F19B            __size_of_erro 000A  
       escreveLT@regAddr 00A3            ??i1_setEEPROM 0075                 le_temp@p 003D  
               enviar@cs 0075              ??_escreveLT 00A1               _INTCONbits 000B  
            ??_escreve_b 0030              ??_escreve_k 0030              ??_setEEPROM 00A4  
               intlevel1 0000          i1setEEPROM@addr 0075      __end_ofi1_getEEPROM 1A0F  
            ??_protocolo 0040    __end_of_SelectChannel 1C8E      __end_ofi1_setEEPROM 0800  
             _SSPCONbits 0014  
