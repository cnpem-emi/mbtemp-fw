Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"67 main_sync.c
[v _inicializar `(v ~T0 @X0 0 ef ]
"68
[v _compara `(v ~T0 @X0 0 ef ]
"72
[v _getEEPROM `(uc ~T0 @X0 0 ef1`uc ]
"166 /opt/microchip/xc8/v2.10/pic/include/pic16f887.h
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"228
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"76 main_sync.c
[v _SelectChannel `(i ~T0 @X0 0 ef1`i ]
"70
[v _ad `(ui ~T0 @X0 0 ef ]
"30 /opt/microchip/xc8/v2.10/pic/include/c90/math.h
[v _fabs `(d ~T0 @X0 0 ef1`d ]
"3387 /opt/microchip/xc8/v2.10/pic/include/pic16f887.h
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"3449
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"1416
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1478
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1540
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1602
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1664
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"290
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"352
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"414
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"4190
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
"358
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"357
[u S16 `S17 1 ]
[n S16 . . ]
"369
[v _PORTDbits `VS16 ~T0 @X0 0 e@8 ]
"856
[s S35 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S35 . SSPM CKP SSPEN SSPOV WCOL ]
"863
[s S36 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S36 . SSPM0 SSPM1 SSPM2 SSPM3 ]
"855
[u S34 `S35 1 `S36 1 ]
[n S34 . . . ]
"870
[v _SSPCONbits `VS34 ~T0 @X0 0 e@20 ]
"2177
[v _SSPSTAT `Vuc ~T0 @X0 0 e@148 ]
"850
[v _SSPCON `Vuc ~T0 @X0 0 e@20 ]
"2704
[v _SPBRGH `Vuc ~T0 @X0 0 e@154 ]
"2642
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"3335
[v _BAUDCTL `Vuc ~T0 @X0 0 e@391 ]
"1038
[v _RCSTA `Vuc ~T0 @X0 0 e@24 ]
"2556
[v _TXSTA `Vuc ~T0 @X0 0 e@152 ]
"459
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"4358
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"4040
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"3896
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"1702
[v _PIE1 `Vuc ~T0 @X0 0 e@140 ]
"4172
[v _RCIE `Vb ~T0 @X0 0 e@1125 ]
"4316
[v _T0CS `Vb ~T0 @X0 0 e@1037 ]
"4058
[v _PSA `Vb ~T0 @X0 0 e@1035 ]
"4049
[v _PS0 `Vb ~T0 @X0 0 e@1032 ]
"4052
[v _PS1 `Vb ~T0 @X0 0 e@1033 ]
"4055
[v _PS2 `Vb ~T0 @X0 0 e@1034 ]
"74 main_sync.c
[v _initLT `(v ~T0 @X0 0 ef ]
"73
[v _setEEPROM `(v ~T0 @X0 0 ef2`uc`uc ]
"401
[c E1758 0 1 2 3 4 5 6 7 8 9 10 11 12 13 16 17 18 19 32 34 36 38 40 48 50 64 65 66 80 81 83 224 225 226 227 228 229 230 231 232 .. ]
[n E1758 bsmp_comando CMD_QUERY_VERSION CMD_VERSION CMD_VAR_QUERY_LIST CMD_VAR_LIST CMD_GROUP_QUERY_LIST CMD_GROUP_LIST CMD_GROUP_QUERY CMD_GROUP CMD_CURVE_QUERY_LIST CMD_CURVE_LIST CMD_CURVE_QUERY_CSUM CMD_CURVE_CSUM CMD_FUNC_QUERY_LIST CMD_FUNC_LIST CMD_VAR_READ CMD_VAR_VALUE CMD_GROUP_READ CMD_GROUP_VALUES CMD_VAR_WRITE CMD_GROUP_WRITE CMD_VAR_BIN_OP CMD_GROUP_BIN_OP CMD_VAR_WRITE_READ CMD_GROUP_CREATE CMD_GROUP_REMOVE_ALL CMD_CURVE_BLOCK_REQUEST CMD_CURVE_BLOCK CMD_CURVE_RECALC_CSUM CMD_FUNC_EXECUTE CMD_FUNC_RETURN CMD_FUNC_ERROR CMD_OK CMD_ERR_MALFORMED_MESSAGE CMD_ERR_OP_NOT_SUPPORTED CMD_ERR_INVALID_ID CMD_ERR_INVALID_VALUE CMD_ERR_INVALID_PAYLOAD_SIZE CMD_ERR_READ_ONLY CMD_ERR_INSUFFICIENT_MEMORY CMD_MAX  ]
[t ~ __interrupt . k ]
[t T11 __interrupt  ]
"1140 /opt/microchip/xc8/v2.10/pic/include/pic16f887.h
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"59
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"4361
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"4175
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"69 main_sync.c
[v _protocolo `(i ~T0 @X0 0 ef ]
"71
[v _enviar `(v ~T0 @X0 0 ef2`*uc`i ]
"537 /opt/microchip/xc8/v2.10/pic/include/pic16f887.h
[v _PIR1 `Vuc ~T0 @X0 0 e@12 ]
"1133
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"4508
[v _TRMT `Vb ~T0 @X0 0 e@1217 ]
"843
[v _SSPBUF `Vuc ~T0 @X0 0 e@19 ]
"3641
[v _BF `Vb ~T0 @X0 0 e@1184 ]
"4220
[v _RP0 `Vb ~T0 @X0 0 e@29 ]
"4223
[v _RP1 `Vb ~T0 @X0 0 e@30 ]
"3257
[v _EEADR `Vuc ~T0 @X0 0 e@269 ]
"3884
[v _EEPGD `Vb ~T0 @X0 0 e@3175 ]
"4178
[v _RD `Vb ~T0 @X0 0 e@3168 ]
"3250
[v _EEDAT `Vuc ~T0 @X0 0 e@268 ]
"4631
[v _WREN `Vb ~T0 @X0 0 e@3170 ]
"465
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"475
[s S22 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S22 . . TMR0IF . TMR0IE ]
"464
[u S20 `S21 1 `S22 1 ]
[n S20 . . . ]
"482
[v _INTCONbits `VS20 ~T0 @X0 0 e@11 ]
"3544
[v _EECON2 `Vuc ~T0 @X0 0 e@397 ]
"4628
[v _WR `Vb ~T0 @X0 0 e@3169 ]
"75 main_sync.c
[v _escreveLT `(v ~T0 @X0 0 ef2`uc`uc ]
"1608 /opt/microchip/xc8/v2.10/pic/include/pic16f887.h
[s S64 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S64 . TRISD0 TRISD1 TRISD2 TRISD3 TRISD4 TRISD5 TRISD6 TRISD7 ]
"1607
[u S63 `S64 1 ]
[n S63 . . ]
"1619
[v _TRISDbits `VS63 ~T0 @X0 0 e@136 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 73: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 75: extern int rand(void);
[; ;stdlib.h: 76: extern void srand(unsigned int);
[; ;stdlib.h: 77: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 78: extern div_t div(int numer, int denom);
[; ;stdlib.h: 79: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 80: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 81: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 85: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 86: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 87: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 88: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 93: extern void * malloc(size_t);
[; ;stdlib.h: 94: extern void free(void *);
[; ;stdlib.h: 95: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 104: extern int atexit(void (*)(void));
[; ;stdlib.h: 105: extern char * getenv(const char *);
[; ;stdlib.h: 106: extern char ** environ;
[; ;stdlib.h: 107: extern int system(char *);
[; ;stdlib.h: 108: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 109: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 110: extern int abs(int);
[; ;stdlib.h: 111: extern long labs(long);
[; ;stdlib.h: 113: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 114: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 119: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 120: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 122: extern char * ftoa(float f, int * status);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
[; ;xc.h: 18: extern const char __xc8_OPTIM_SPEED;
[; ;xc.h: 20: extern double __fpnormalize(double);
[; ;pic16f887.h: 52: extern volatile unsigned char INDF __at(0x000);
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f887.h
[; ;pic16f887.h: 54: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 59: extern volatile unsigned char TMR0 __at(0x001);
"61
[; ;pic16f887.h: 61: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 66: extern volatile unsigned char PCL __at(0x002);
"68
[; ;pic16f887.h: 68: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 73: extern volatile unsigned char STATUS __at(0x003);
"75
[; ;pic16f887.h: 75: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 78: typedef union {
[; ;pic16f887.h: 79: struct {
[; ;pic16f887.h: 80: unsigned C :1;
[; ;pic16f887.h: 81: unsigned DC :1;
[; ;pic16f887.h: 82: unsigned Z :1;
[; ;pic16f887.h: 83: unsigned nPD :1;
[; ;pic16f887.h: 84: unsigned nTO :1;
[; ;pic16f887.h: 85: unsigned RP :2;
[; ;pic16f887.h: 86: unsigned IRP :1;
[; ;pic16f887.h: 87: };
[; ;pic16f887.h: 88: struct {
[; ;pic16f887.h: 89: unsigned :5;
[; ;pic16f887.h: 90: unsigned RP0 :1;
[; ;pic16f887.h: 91: unsigned RP1 :1;
[; ;pic16f887.h: 92: };
[; ;pic16f887.h: 93: struct {
[; ;pic16f887.h: 94: unsigned CARRY :1;
[; ;pic16f887.h: 95: unsigned :1;
[; ;pic16f887.h: 96: unsigned ZERO :1;
[; ;pic16f887.h: 97: };
[; ;pic16f887.h: 98: } STATUSbits_t;
[; ;pic16f887.h: 99: extern volatile STATUSbits_t STATUSbits __at(0x003);
[; ;pic16f887.h: 159: extern volatile unsigned char FSR __at(0x004);
"161
[; ;pic16f887.h: 161: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 166: extern volatile unsigned char PORTA __at(0x005);
"168
[; ;pic16f887.h: 168: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 171: typedef union {
[; ;pic16f887.h: 172: struct {
[; ;pic16f887.h: 173: unsigned RA0 :1;
[; ;pic16f887.h: 174: unsigned RA1 :1;
[; ;pic16f887.h: 175: unsigned RA2 :1;
[; ;pic16f887.h: 176: unsigned RA3 :1;
[; ;pic16f887.h: 177: unsigned RA4 :1;
[; ;pic16f887.h: 178: unsigned RA5 :1;
[; ;pic16f887.h: 179: unsigned RA6 :1;
[; ;pic16f887.h: 180: unsigned RA7 :1;
[; ;pic16f887.h: 181: };
[; ;pic16f887.h: 182: } PORTAbits_t;
[; ;pic16f887.h: 183: extern volatile PORTAbits_t PORTAbits __at(0x005);
[; ;pic16f887.h: 228: extern volatile unsigned char PORTB __at(0x006);
"230
[; ;pic16f887.h: 230: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 233: typedef union {
[; ;pic16f887.h: 234: struct {
[; ;pic16f887.h: 235: unsigned RB0 :1;
[; ;pic16f887.h: 236: unsigned RB1 :1;
[; ;pic16f887.h: 237: unsigned RB2 :1;
[; ;pic16f887.h: 238: unsigned RB3 :1;
[; ;pic16f887.h: 239: unsigned RB4 :1;
[; ;pic16f887.h: 240: unsigned RB5 :1;
[; ;pic16f887.h: 241: unsigned RB6 :1;
[; ;pic16f887.h: 242: unsigned RB7 :1;
[; ;pic16f887.h: 243: };
[; ;pic16f887.h: 244: } PORTBbits_t;
[; ;pic16f887.h: 245: extern volatile PORTBbits_t PORTBbits __at(0x006);
[; ;pic16f887.h: 290: extern volatile unsigned char PORTC __at(0x007);
"292
[; ;pic16f887.h: 292: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 295: typedef union {
[; ;pic16f887.h: 296: struct {
[; ;pic16f887.h: 297: unsigned RC0 :1;
[; ;pic16f887.h: 298: unsigned RC1 :1;
[; ;pic16f887.h: 299: unsigned RC2 :1;
[; ;pic16f887.h: 300: unsigned RC3 :1;
[; ;pic16f887.h: 301: unsigned RC4 :1;
[; ;pic16f887.h: 302: unsigned RC5 :1;
[; ;pic16f887.h: 303: unsigned RC6 :1;
[; ;pic16f887.h: 304: unsigned RC7 :1;
[; ;pic16f887.h: 305: };
[; ;pic16f887.h: 306: } PORTCbits_t;
[; ;pic16f887.h: 307: extern volatile PORTCbits_t PORTCbits __at(0x007);
[; ;pic16f887.h: 352: extern volatile unsigned char PORTD __at(0x008);
"354
[; ;pic16f887.h: 354: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 357: typedef union {
[; ;pic16f887.h: 358: struct {
[; ;pic16f887.h: 359: unsigned RD0 :1;
[; ;pic16f887.h: 360: unsigned RD1 :1;
[; ;pic16f887.h: 361: unsigned RD2 :1;
[; ;pic16f887.h: 362: unsigned RD3 :1;
[; ;pic16f887.h: 363: unsigned RD4 :1;
[; ;pic16f887.h: 364: unsigned RD5 :1;
[; ;pic16f887.h: 365: unsigned RD6 :1;
[; ;pic16f887.h: 366: unsigned RD7 :1;
[; ;pic16f887.h: 367: };
[; ;pic16f887.h: 368: } PORTDbits_t;
[; ;pic16f887.h: 369: extern volatile PORTDbits_t PORTDbits __at(0x008);
[; ;pic16f887.h: 414: extern volatile unsigned char PORTE __at(0x009);
"416
[; ;pic16f887.h: 416: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 419: typedef union {
[; ;pic16f887.h: 420: struct {
[; ;pic16f887.h: 421: unsigned RE0 :1;
[; ;pic16f887.h: 422: unsigned RE1 :1;
[; ;pic16f887.h: 423: unsigned RE2 :1;
[; ;pic16f887.h: 424: unsigned RE3 :1;
[; ;pic16f887.h: 425: };
[; ;pic16f887.h: 426: } PORTEbits_t;
[; ;pic16f887.h: 427: extern volatile PORTEbits_t PORTEbits __at(0x009);
[; ;pic16f887.h: 452: extern volatile unsigned char PCLATH __at(0x00A);
"454
[; ;pic16f887.h: 454: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 459: extern volatile unsigned char INTCON __at(0x00B);
"461
[; ;pic16f887.h: 461: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 464: typedef union {
[; ;pic16f887.h: 465: struct {
[; ;pic16f887.h: 466: unsigned RBIF :1;
[; ;pic16f887.h: 467: unsigned INTF :1;
[; ;pic16f887.h: 468: unsigned T0IF :1;
[; ;pic16f887.h: 469: unsigned RBIE :1;
[; ;pic16f887.h: 470: unsigned INTE :1;
[; ;pic16f887.h: 471: unsigned T0IE :1;
[; ;pic16f887.h: 472: unsigned PEIE :1;
[; ;pic16f887.h: 473: unsigned GIE :1;
[; ;pic16f887.h: 474: };
[; ;pic16f887.h: 475: struct {
[; ;pic16f887.h: 476: unsigned :2;
[; ;pic16f887.h: 477: unsigned TMR0IF :1;
[; ;pic16f887.h: 478: unsigned :2;
[; ;pic16f887.h: 479: unsigned TMR0IE :1;
[; ;pic16f887.h: 480: };
[; ;pic16f887.h: 481: } INTCONbits_t;
[; ;pic16f887.h: 482: extern volatile INTCONbits_t INTCONbits __at(0x00B);
[; ;pic16f887.h: 537: extern volatile unsigned char PIR1 __at(0x00C);
"539
[; ;pic16f887.h: 539: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 542: typedef union {
[; ;pic16f887.h: 543: struct {
[; ;pic16f887.h: 544: unsigned TMR1IF :1;
[; ;pic16f887.h: 545: unsigned TMR2IF :1;
[; ;pic16f887.h: 546: unsigned CCP1IF :1;
[; ;pic16f887.h: 547: unsigned SSPIF :1;
[; ;pic16f887.h: 548: unsigned TXIF :1;
[; ;pic16f887.h: 549: unsigned RCIF :1;
[; ;pic16f887.h: 550: unsigned ADIF :1;
[; ;pic16f887.h: 551: };
[; ;pic16f887.h: 552: } PIR1bits_t;
[; ;pic16f887.h: 553: extern volatile PIR1bits_t PIR1bits __at(0x00C);
[; ;pic16f887.h: 593: extern volatile unsigned char PIR2 __at(0x00D);
"595
[; ;pic16f887.h: 595: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 598: typedef union {
[; ;pic16f887.h: 599: struct {
[; ;pic16f887.h: 600: unsigned CCP2IF :1;
[; ;pic16f887.h: 601: unsigned :1;
[; ;pic16f887.h: 602: unsigned ULPWUIF :1;
[; ;pic16f887.h: 603: unsigned BCLIF :1;
[; ;pic16f887.h: 604: unsigned EEIF :1;
[; ;pic16f887.h: 605: unsigned C1IF :1;
[; ;pic16f887.h: 606: unsigned C2IF :1;
[; ;pic16f887.h: 607: unsigned OSFIF :1;
[; ;pic16f887.h: 608: };
[; ;pic16f887.h: 609: } PIR2bits_t;
[; ;pic16f887.h: 610: extern volatile PIR2bits_t PIR2bits __at(0x00D);
[; ;pic16f887.h: 650: extern volatile unsigned short TMR1 __at(0x00E);
"652
[; ;pic16f887.h: 652: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 657: extern volatile unsigned char TMR1L __at(0x00E);
"659
[; ;pic16f887.h: 659: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 664: extern volatile unsigned char TMR1H __at(0x00F);
"666
[; ;pic16f887.h: 666: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 671: extern volatile unsigned char T1CON __at(0x010);
"673
[; ;pic16f887.h: 673: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 676: typedef union {
[; ;pic16f887.h: 677: struct {
[; ;pic16f887.h: 678: unsigned TMR1ON :1;
[; ;pic16f887.h: 679: unsigned TMR1CS :1;
[; ;pic16f887.h: 680: unsigned nT1SYNC :1;
[; ;pic16f887.h: 681: unsigned T1OSCEN :1;
[; ;pic16f887.h: 682: unsigned T1CKPS :2;
[; ;pic16f887.h: 683: unsigned TMR1GE :1;
[; ;pic16f887.h: 684: unsigned T1GINV :1;
[; ;pic16f887.h: 685: };
[; ;pic16f887.h: 686: struct {
[; ;pic16f887.h: 687: unsigned :2;
[; ;pic16f887.h: 688: unsigned T1INSYNC :1;
[; ;pic16f887.h: 689: unsigned :1;
[; ;pic16f887.h: 690: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 691: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 692: unsigned :1;
[; ;pic16f887.h: 693: unsigned T1GIV :1;
[; ;pic16f887.h: 694: };
[; ;pic16f887.h: 695: struct {
[; ;pic16f887.h: 696: unsigned :2;
[; ;pic16f887.h: 697: unsigned T1SYNC :1;
[; ;pic16f887.h: 698: };
[; ;pic16f887.h: 699: } T1CONbits_t;
[; ;pic16f887.h: 700: extern volatile T1CONbits_t T1CONbits __at(0x010);
[; ;pic16f887.h: 765: extern volatile unsigned char TMR2 __at(0x011);
"767
[; ;pic16f887.h: 767: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 772: extern volatile unsigned char T2CON __at(0x012);
"774
[; ;pic16f887.h: 774: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 777: typedef union {
[; ;pic16f887.h: 778: struct {
[; ;pic16f887.h: 779: unsigned T2CKPS :2;
[; ;pic16f887.h: 780: unsigned TMR2ON :1;
[; ;pic16f887.h: 781: unsigned TOUTPS :4;
[; ;pic16f887.h: 782: };
[; ;pic16f887.h: 783: struct {
[; ;pic16f887.h: 784: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 785: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 786: unsigned :1;
[; ;pic16f887.h: 787: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 788: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 789: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 790: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 791: };
[; ;pic16f887.h: 792: } T2CONbits_t;
[; ;pic16f887.h: 793: extern volatile T2CONbits_t T2CONbits __at(0x012);
[; ;pic16f887.h: 843: extern volatile unsigned char SSPBUF __at(0x013);
"845
[; ;pic16f887.h: 845: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 850: extern volatile unsigned char SSPCON __at(0x014);
"852
[; ;pic16f887.h: 852: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 855: typedef union {
[; ;pic16f887.h: 856: struct {
[; ;pic16f887.h: 857: unsigned SSPM :4;
[; ;pic16f887.h: 858: unsigned CKP :1;
[; ;pic16f887.h: 859: unsigned SSPEN :1;
[; ;pic16f887.h: 860: unsigned SSPOV :1;
[; ;pic16f887.h: 861: unsigned WCOL :1;
[; ;pic16f887.h: 862: };
[; ;pic16f887.h: 863: struct {
[; ;pic16f887.h: 864: unsigned SSPM0 :1;
[; ;pic16f887.h: 865: unsigned SSPM1 :1;
[; ;pic16f887.h: 866: unsigned SSPM2 :1;
[; ;pic16f887.h: 867: unsigned SSPM3 :1;
[; ;pic16f887.h: 868: };
[; ;pic16f887.h: 869: } SSPCONbits_t;
[; ;pic16f887.h: 870: extern volatile SSPCONbits_t SSPCONbits __at(0x014);
[; ;pic16f887.h: 920: extern volatile unsigned short CCPR1 __at(0x015);
"922
[; ;pic16f887.h: 922: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 927: extern volatile unsigned char CCPR1L __at(0x015);
"929
[; ;pic16f887.h: 929: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 934: extern volatile unsigned char CCPR1H __at(0x016);
"936
[; ;pic16f887.h: 936: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 941: extern volatile unsigned char CCP1CON __at(0x017);
"943
[; ;pic16f887.h: 943: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 946: typedef union {
[; ;pic16f887.h: 947: struct {
[; ;pic16f887.h: 948: unsigned CCP1M :4;
[; ;pic16f887.h: 949: unsigned DC1B :2;
[; ;pic16f887.h: 950: unsigned P1M :2;
[; ;pic16f887.h: 951: };
[; ;pic16f887.h: 952: struct {
[; ;pic16f887.h: 953: unsigned CCP1M0 :1;
[; ;pic16f887.h: 954: unsigned CCP1M1 :1;
[; ;pic16f887.h: 955: unsigned CCP1M2 :1;
[; ;pic16f887.h: 956: unsigned CCP1M3 :1;
[; ;pic16f887.h: 957: unsigned DC1B0 :1;
[; ;pic16f887.h: 958: unsigned DC1B1 :1;
[; ;pic16f887.h: 959: unsigned P1M0 :1;
[; ;pic16f887.h: 960: unsigned P1M1 :1;
[; ;pic16f887.h: 961: };
[; ;pic16f887.h: 962: struct {
[; ;pic16f887.h: 963: unsigned :4;
[; ;pic16f887.h: 964: unsigned CCP1Y :1;
[; ;pic16f887.h: 965: unsigned CCP1X :1;
[; ;pic16f887.h: 966: };
[; ;pic16f887.h: 967: } CCP1CONbits_t;
[; ;pic16f887.h: 968: extern volatile CCP1CONbits_t CCP1CONbits __at(0x017);
[; ;pic16f887.h: 1038: extern volatile unsigned char RCSTA __at(0x018);
"1040
[; ;pic16f887.h: 1040: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1043: typedef union {
[; ;pic16f887.h: 1044: struct {
[; ;pic16f887.h: 1045: unsigned RX9D :1;
[; ;pic16f887.h: 1046: unsigned OERR :1;
[; ;pic16f887.h: 1047: unsigned FERR :1;
[; ;pic16f887.h: 1048: unsigned ADDEN :1;
[; ;pic16f887.h: 1049: unsigned CREN :1;
[; ;pic16f887.h: 1050: unsigned SREN :1;
[; ;pic16f887.h: 1051: unsigned RX9 :1;
[; ;pic16f887.h: 1052: unsigned SPEN :1;
[; ;pic16f887.h: 1053: };
[; ;pic16f887.h: 1054: struct {
[; ;pic16f887.h: 1055: unsigned RCD8 :1;
[; ;pic16f887.h: 1056: unsigned :5;
[; ;pic16f887.h: 1057: unsigned RC9 :1;
[; ;pic16f887.h: 1058: };
[; ;pic16f887.h: 1059: struct {
[; ;pic16f887.h: 1060: unsigned :6;
[; ;pic16f887.h: 1061: unsigned nRC8 :1;
[; ;pic16f887.h: 1062: };
[; ;pic16f887.h: 1063: struct {
[; ;pic16f887.h: 1064: unsigned :6;
[; ;pic16f887.h: 1065: unsigned RC8_9 :1;
[; ;pic16f887.h: 1066: };
[; ;pic16f887.h: 1067: } RCSTAbits_t;
[; ;pic16f887.h: 1068: extern volatile RCSTAbits_t RCSTAbits __at(0x018);
[; ;pic16f887.h: 1133: extern volatile unsigned char TXREG __at(0x019);
"1135
[; ;pic16f887.h: 1135: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1140: extern volatile unsigned char RCREG __at(0x01A);
"1142
[; ;pic16f887.h: 1142: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1147: extern volatile unsigned short CCPR2 __at(0x01B);
"1149
[; ;pic16f887.h: 1149: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1154: extern volatile unsigned char CCPR2L __at(0x01B);
"1156
[; ;pic16f887.h: 1156: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1161: extern volatile unsigned char CCPR2H __at(0x01C);
"1163
[; ;pic16f887.h: 1163: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1168: extern volatile unsigned char CCP2CON __at(0x01D);
"1170
[; ;pic16f887.h: 1170: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1173: typedef union {
[; ;pic16f887.h: 1174: struct {
[; ;pic16f887.h: 1175: unsigned CCP2M :4;
[; ;pic16f887.h: 1176: unsigned DC2B0 :1;
[; ;pic16f887.h: 1177: unsigned DC2B1 :1;
[; ;pic16f887.h: 1178: };
[; ;pic16f887.h: 1179: struct {
[; ;pic16f887.h: 1180: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1181: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1182: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1183: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1184: unsigned CCP2Y :1;
[; ;pic16f887.h: 1185: unsigned CCP2X :1;
[; ;pic16f887.h: 1186: };
[; ;pic16f887.h: 1187: } CCP2CONbits_t;
[; ;pic16f887.h: 1188: extern volatile CCP2CONbits_t CCP2CONbits __at(0x01D);
[; ;pic16f887.h: 1238: extern volatile unsigned char ADRESH __at(0x01E);
"1240
[; ;pic16f887.h: 1240: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1245: extern volatile unsigned char ADCON0 __at(0x01F);
"1247
[; ;pic16f887.h: 1247: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1250: typedef union {
[; ;pic16f887.h: 1251: struct {
[; ;pic16f887.h: 1252: unsigned ADON :1;
[; ;pic16f887.h: 1253: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1254: unsigned CHS :4;
[; ;pic16f887.h: 1255: unsigned ADCS :2;
[; ;pic16f887.h: 1256: };
[; ;pic16f887.h: 1257: struct {
[; ;pic16f887.h: 1258: unsigned :1;
[; ;pic16f887.h: 1259: unsigned GO :1;
[; ;pic16f887.h: 1260: unsigned CHS0 :1;
[; ;pic16f887.h: 1261: unsigned CHS1 :1;
[; ;pic16f887.h: 1262: unsigned CHS2 :1;
[; ;pic16f887.h: 1263: unsigned CHS3 :1;
[; ;pic16f887.h: 1264: unsigned ADCS0 :1;
[; ;pic16f887.h: 1265: unsigned ADCS1 :1;
[; ;pic16f887.h: 1266: };
[; ;pic16f887.h: 1267: struct {
[; ;pic16f887.h: 1268: unsigned :1;
[; ;pic16f887.h: 1269: unsigned nDONE :1;
[; ;pic16f887.h: 1270: };
[; ;pic16f887.h: 1271: struct {
[; ;pic16f887.h: 1272: unsigned :1;
[; ;pic16f887.h: 1273: unsigned GO_DONE :1;
[; ;pic16f887.h: 1274: };
[; ;pic16f887.h: 1275: } ADCON0bits_t;
[; ;pic16f887.h: 1276: extern volatile ADCON0bits_t ADCON0bits __at(0x01F);
[; ;pic16f887.h: 1346: extern volatile unsigned char OPTION_REG __at(0x081);
"1348
[; ;pic16f887.h: 1348: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1351: typedef union {
[; ;pic16f887.h: 1352: struct {
[; ;pic16f887.h: 1353: unsigned PS :3;
[; ;pic16f887.h: 1354: unsigned PSA :1;
[; ;pic16f887.h: 1355: unsigned T0SE :1;
[; ;pic16f887.h: 1356: unsigned T0CS :1;
[; ;pic16f887.h: 1357: unsigned INTEDG :1;
[; ;pic16f887.h: 1358: unsigned nRBPU :1;
[; ;pic16f887.h: 1359: };
[; ;pic16f887.h: 1360: struct {
[; ;pic16f887.h: 1361: unsigned PS0 :1;
[; ;pic16f887.h: 1362: unsigned PS1 :1;
[; ;pic16f887.h: 1363: unsigned PS2 :1;
[; ;pic16f887.h: 1364: };
[; ;pic16f887.h: 1365: } OPTION_REGbits_t;
[; ;pic16f887.h: 1366: extern volatile OPTION_REGbits_t OPTION_REGbits __at(0x081);
[; ;pic16f887.h: 1416: extern volatile unsigned char TRISA __at(0x085);
"1418
[; ;pic16f887.h: 1418: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1421: typedef union {
[; ;pic16f887.h: 1422: struct {
[; ;pic16f887.h: 1423: unsigned TRISA0 :1;
[; ;pic16f887.h: 1424: unsigned TRISA1 :1;
[; ;pic16f887.h: 1425: unsigned TRISA2 :1;
[; ;pic16f887.h: 1426: unsigned TRISA3 :1;
[; ;pic16f887.h: 1427: unsigned TRISA4 :1;
[; ;pic16f887.h: 1428: unsigned TRISA5 :1;
[; ;pic16f887.h: 1429: unsigned TRISA6 :1;
[; ;pic16f887.h: 1430: unsigned TRISA7 :1;
[; ;pic16f887.h: 1431: };
[; ;pic16f887.h: 1432: } TRISAbits_t;
[; ;pic16f887.h: 1433: extern volatile TRISAbits_t TRISAbits __at(0x085);
[; ;pic16f887.h: 1478: extern volatile unsigned char TRISB __at(0x086);
"1480
[; ;pic16f887.h: 1480: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1483: typedef union {
[; ;pic16f887.h: 1484: struct {
[; ;pic16f887.h: 1485: unsigned TRISB0 :1;
[; ;pic16f887.h: 1486: unsigned TRISB1 :1;
[; ;pic16f887.h: 1487: unsigned TRISB2 :1;
[; ;pic16f887.h: 1488: unsigned TRISB3 :1;
[; ;pic16f887.h: 1489: unsigned TRISB4 :1;
[; ;pic16f887.h: 1490: unsigned TRISB5 :1;
[; ;pic16f887.h: 1491: unsigned TRISB6 :1;
[; ;pic16f887.h: 1492: unsigned TRISB7 :1;
[; ;pic16f887.h: 1493: };
[; ;pic16f887.h: 1494: } TRISBbits_t;
[; ;pic16f887.h: 1495: extern volatile TRISBbits_t TRISBbits __at(0x086);
[; ;pic16f887.h: 1540: extern volatile unsigned char TRISC __at(0x087);
"1542
[; ;pic16f887.h: 1542: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1545: typedef union {
[; ;pic16f887.h: 1546: struct {
[; ;pic16f887.h: 1547: unsigned TRISC0 :1;
[; ;pic16f887.h: 1548: unsigned TRISC1 :1;
[; ;pic16f887.h: 1549: unsigned TRISC2 :1;
[; ;pic16f887.h: 1550: unsigned TRISC3 :1;
[; ;pic16f887.h: 1551: unsigned TRISC4 :1;
[; ;pic16f887.h: 1552: unsigned TRISC5 :1;
[; ;pic16f887.h: 1553: unsigned TRISC6 :1;
[; ;pic16f887.h: 1554: unsigned TRISC7 :1;
[; ;pic16f887.h: 1555: };
[; ;pic16f887.h: 1556: } TRISCbits_t;
[; ;pic16f887.h: 1557: extern volatile TRISCbits_t TRISCbits __at(0x087);
[; ;pic16f887.h: 1602: extern volatile unsigned char TRISD __at(0x088);
"1604
[; ;pic16f887.h: 1604: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1607: typedef union {
[; ;pic16f887.h: 1608: struct {
[; ;pic16f887.h: 1609: unsigned TRISD0 :1;
[; ;pic16f887.h: 1610: unsigned TRISD1 :1;
[; ;pic16f887.h: 1611: unsigned TRISD2 :1;
[; ;pic16f887.h: 1612: unsigned TRISD3 :1;
[; ;pic16f887.h: 1613: unsigned TRISD4 :1;
[; ;pic16f887.h: 1614: unsigned TRISD5 :1;
[; ;pic16f887.h: 1615: unsigned TRISD6 :1;
[; ;pic16f887.h: 1616: unsigned TRISD7 :1;
[; ;pic16f887.h: 1617: };
[; ;pic16f887.h: 1618: } TRISDbits_t;
[; ;pic16f887.h: 1619: extern volatile TRISDbits_t TRISDbits __at(0x088);
[; ;pic16f887.h: 1664: extern volatile unsigned char TRISE __at(0x089);
"1666
[; ;pic16f887.h: 1666: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1669: typedef union {
[; ;pic16f887.h: 1670: struct {
[; ;pic16f887.h: 1671: unsigned TRISE0 :1;
[; ;pic16f887.h: 1672: unsigned TRISE1 :1;
[; ;pic16f887.h: 1673: unsigned TRISE2 :1;
[; ;pic16f887.h: 1674: unsigned TRISE3 :1;
[; ;pic16f887.h: 1675: };
[; ;pic16f887.h: 1676: } TRISEbits_t;
[; ;pic16f887.h: 1677: extern volatile TRISEbits_t TRISEbits __at(0x089);
[; ;pic16f887.h: 1702: extern volatile unsigned char PIE1 __at(0x08C);
"1704
[; ;pic16f887.h: 1704: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1707: typedef union {
[; ;pic16f887.h: 1708: struct {
[; ;pic16f887.h: 1709: unsigned TMR1IE :1;
[; ;pic16f887.h: 1710: unsigned TMR2IE :1;
[; ;pic16f887.h: 1711: unsigned CCP1IE :1;
[; ;pic16f887.h: 1712: unsigned SSPIE :1;
[; ;pic16f887.h: 1713: unsigned TXIE :1;
[; ;pic16f887.h: 1714: unsigned RCIE :1;
[; ;pic16f887.h: 1715: unsigned ADIE :1;
[; ;pic16f887.h: 1716: };
[; ;pic16f887.h: 1717: } PIE1bits_t;
[; ;pic16f887.h: 1718: extern volatile PIE1bits_t PIE1bits __at(0x08C);
[; ;pic16f887.h: 1758: extern volatile unsigned char PIE2 __at(0x08D);
"1760
[; ;pic16f887.h: 1760: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1763: typedef union {
[; ;pic16f887.h: 1764: struct {
[; ;pic16f887.h: 1765: unsigned CCP2IE :1;
[; ;pic16f887.h: 1766: unsigned :1;
[; ;pic16f887.h: 1767: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1768: unsigned BCLIE :1;
[; ;pic16f887.h: 1769: unsigned EEIE :1;
[; ;pic16f887.h: 1770: unsigned C1IE :1;
[; ;pic16f887.h: 1771: unsigned C2IE :1;
[; ;pic16f887.h: 1772: unsigned OSFIE :1;
[; ;pic16f887.h: 1773: };
[; ;pic16f887.h: 1774: } PIE2bits_t;
[; ;pic16f887.h: 1775: extern volatile PIE2bits_t PIE2bits __at(0x08D);
[; ;pic16f887.h: 1815: extern volatile unsigned char PCON __at(0x08E);
"1817
[; ;pic16f887.h: 1817: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1820: typedef union {
[; ;pic16f887.h: 1821: struct {
[; ;pic16f887.h: 1822: unsigned nBOR :1;
[; ;pic16f887.h: 1823: unsigned nPOR :1;
[; ;pic16f887.h: 1824: unsigned :2;
[; ;pic16f887.h: 1825: unsigned SBOREN :1;
[; ;pic16f887.h: 1826: unsigned ULPWUE :1;
[; ;pic16f887.h: 1827: };
[; ;pic16f887.h: 1828: struct {
[; ;pic16f887.h: 1829: unsigned nBO :1;
[; ;pic16f887.h: 1830: };
[; ;pic16f887.h: 1831: } PCONbits_t;
[; ;pic16f887.h: 1832: extern volatile PCONbits_t PCONbits __at(0x08E);
[; ;pic16f887.h: 1862: extern volatile unsigned char OSCCON __at(0x08F);
"1864
[; ;pic16f887.h: 1864: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1867: typedef union {
[; ;pic16f887.h: 1868: struct {
[; ;pic16f887.h: 1869: unsigned SCS :1;
[; ;pic16f887.h: 1870: unsigned LTS :1;
[; ;pic16f887.h: 1871: unsigned HTS :1;
[; ;pic16f887.h: 1872: unsigned OSTS :1;
[; ;pic16f887.h: 1873: unsigned IRCF :3;
[; ;pic16f887.h: 1874: };
[; ;pic16f887.h: 1875: struct {
[; ;pic16f887.h: 1876: unsigned :4;
[; ;pic16f887.h: 1877: unsigned IRCF0 :1;
[; ;pic16f887.h: 1878: unsigned IRCF1 :1;
[; ;pic16f887.h: 1879: unsigned IRCF2 :1;
[; ;pic16f887.h: 1880: };
[; ;pic16f887.h: 1881: } OSCCONbits_t;
[; ;pic16f887.h: 1882: extern volatile OSCCONbits_t OSCCONbits __at(0x08F);
[; ;pic16f887.h: 1927: extern volatile unsigned char OSCTUNE __at(0x090);
"1929
[; ;pic16f887.h: 1929: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1932: typedef union {
[; ;pic16f887.h: 1933: struct {
[; ;pic16f887.h: 1934: unsigned TUN :5;
[; ;pic16f887.h: 1935: };
[; ;pic16f887.h: 1936: struct {
[; ;pic16f887.h: 1937: unsigned TUN0 :1;
[; ;pic16f887.h: 1938: unsigned TUN1 :1;
[; ;pic16f887.h: 1939: unsigned TUN2 :1;
[; ;pic16f887.h: 1940: unsigned TUN3 :1;
[; ;pic16f887.h: 1941: unsigned TUN4 :1;
[; ;pic16f887.h: 1942: };
[; ;pic16f887.h: 1943: } OSCTUNEbits_t;
[; ;pic16f887.h: 1944: extern volatile OSCTUNEbits_t OSCTUNEbits __at(0x090);
[; ;pic16f887.h: 1979: extern volatile unsigned char SSPCON2 __at(0x091);
"1981
[; ;pic16f887.h: 1981: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1984: typedef union {
[; ;pic16f887.h: 1985: struct {
[; ;pic16f887.h: 1986: unsigned SEN :1;
[; ;pic16f887.h: 1987: unsigned RSEN :1;
[; ;pic16f887.h: 1988: unsigned PEN :1;
[; ;pic16f887.h: 1989: unsigned RCEN :1;
[; ;pic16f887.h: 1990: unsigned ACKEN :1;
[; ;pic16f887.h: 1991: unsigned ACKDT :1;
[; ;pic16f887.h: 1992: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1993: unsigned GCEN :1;
[; ;pic16f887.h: 1994: };
[; ;pic16f887.h: 1995: } SSPCON2bits_t;
[; ;pic16f887.h: 1996: extern volatile SSPCON2bits_t SSPCON2bits __at(0x091);
[; ;pic16f887.h: 2041: extern volatile unsigned char PR2 __at(0x092);
"2043
[; ;pic16f887.h: 2043: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 2048: extern volatile unsigned char SSPADD __at(0x093);
"2050
[; ;pic16f887.h: 2050: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2055: extern volatile unsigned char SSPMSK __at(0x093);
"2057
[; ;pic16f887.h: 2057: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2060: extern volatile unsigned char MSK __at(0x093);
"2062
[; ;pic16f887.h: 2062: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2065: typedef union {
[; ;pic16f887.h: 2066: struct {
[; ;pic16f887.h: 2067: unsigned MSK0 :1;
[; ;pic16f887.h: 2068: unsigned MSK1 :1;
[; ;pic16f887.h: 2069: unsigned MSK2 :1;
[; ;pic16f887.h: 2070: unsigned MSK3 :1;
[; ;pic16f887.h: 2071: unsigned MSK4 :1;
[; ;pic16f887.h: 2072: unsigned MSK5 :1;
[; ;pic16f887.h: 2073: unsigned MSK6 :1;
[; ;pic16f887.h: 2074: unsigned MSK7 :1;
[; ;pic16f887.h: 2075: };
[; ;pic16f887.h: 2076: } SSPMSKbits_t;
[; ;pic16f887.h: 2077: extern volatile SSPMSKbits_t SSPMSKbits __at(0x093);
[; ;pic16f887.h: 2120: typedef union {
[; ;pic16f887.h: 2121: struct {
[; ;pic16f887.h: 2122: unsigned MSK0 :1;
[; ;pic16f887.h: 2123: unsigned MSK1 :1;
[; ;pic16f887.h: 2124: unsigned MSK2 :1;
[; ;pic16f887.h: 2125: unsigned MSK3 :1;
[; ;pic16f887.h: 2126: unsigned MSK4 :1;
[; ;pic16f887.h: 2127: unsigned MSK5 :1;
[; ;pic16f887.h: 2128: unsigned MSK6 :1;
[; ;pic16f887.h: 2129: unsigned MSK7 :1;
[; ;pic16f887.h: 2130: };
[; ;pic16f887.h: 2131: } MSKbits_t;
[; ;pic16f887.h: 2132: extern volatile MSKbits_t MSKbits __at(0x093);
[; ;pic16f887.h: 2177: extern volatile unsigned char SSPSTAT __at(0x094);
"2179
[; ;pic16f887.h: 2179: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2182: typedef union {
[; ;pic16f887.h: 2183: struct {
[; ;pic16f887.h: 2184: unsigned BF :1;
[; ;pic16f887.h: 2185: unsigned UA :1;
[; ;pic16f887.h: 2186: unsigned R_nW :1;
[; ;pic16f887.h: 2187: unsigned S :1;
[; ;pic16f887.h: 2188: unsigned P :1;
[; ;pic16f887.h: 2189: unsigned D_nA :1;
[; ;pic16f887.h: 2190: unsigned CKE :1;
[; ;pic16f887.h: 2191: unsigned SMP :1;
[; ;pic16f887.h: 2192: };
[; ;pic16f887.h: 2193: struct {
[; ;pic16f887.h: 2194: unsigned :2;
[; ;pic16f887.h: 2195: unsigned R :1;
[; ;pic16f887.h: 2196: unsigned :2;
[; ;pic16f887.h: 2197: unsigned D :1;
[; ;pic16f887.h: 2198: };
[; ;pic16f887.h: 2199: struct {
[; ;pic16f887.h: 2200: unsigned :2;
[; ;pic16f887.h: 2201: unsigned I2C_READ :1;
[; ;pic16f887.h: 2202: unsigned I2C_START :1;
[; ;pic16f887.h: 2203: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2204: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2205: };
[; ;pic16f887.h: 2206: struct {
[; ;pic16f887.h: 2207: unsigned :2;
[; ;pic16f887.h: 2208: unsigned nW :1;
[; ;pic16f887.h: 2209: unsigned :2;
[; ;pic16f887.h: 2210: unsigned nA :1;
[; ;pic16f887.h: 2211: };
[; ;pic16f887.h: 2212: struct {
[; ;pic16f887.h: 2213: unsigned :2;
[; ;pic16f887.h: 2214: unsigned nWRITE :1;
[; ;pic16f887.h: 2215: unsigned :2;
[; ;pic16f887.h: 2216: unsigned nADDRESS :1;
[; ;pic16f887.h: 2217: };
[; ;pic16f887.h: 2218: struct {
[; ;pic16f887.h: 2219: unsigned :2;
[; ;pic16f887.h: 2220: unsigned R_W :1;
[; ;pic16f887.h: 2221: unsigned :2;
[; ;pic16f887.h: 2222: unsigned D_A :1;
[; ;pic16f887.h: 2223: };
[; ;pic16f887.h: 2224: struct {
[; ;pic16f887.h: 2225: unsigned :2;
[; ;pic16f887.h: 2226: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2227: unsigned :2;
[; ;pic16f887.h: 2228: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2229: };
[; ;pic16f887.h: 2230: } SSPSTATbits_t;
[; ;pic16f887.h: 2231: extern volatile SSPSTATbits_t SSPSTATbits __at(0x094);
[; ;pic16f887.h: 2346: extern volatile unsigned char WPUB __at(0x095);
"2348
[; ;pic16f887.h: 2348: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2351: typedef union {
[; ;pic16f887.h: 2352: struct {
[; ;pic16f887.h: 2353: unsigned WPUB :8;
[; ;pic16f887.h: 2354: };
[; ;pic16f887.h: 2355: struct {
[; ;pic16f887.h: 2356: unsigned WPUB0 :1;
[; ;pic16f887.h: 2357: unsigned WPUB1 :1;
[; ;pic16f887.h: 2358: unsigned WPUB2 :1;
[; ;pic16f887.h: 2359: unsigned WPUB3 :1;
[; ;pic16f887.h: 2360: unsigned WPUB4 :1;
[; ;pic16f887.h: 2361: unsigned WPUB5 :1;
[; ;pic16f887.h: 2362: unsigned WPUB6 :1;
[; ;pic16f887.h: 2363: unsigned WPUB7 :1;
[; ;pic16f887.h: 2364: };
[; ;pic16f887.h: 2365: } WPUBbits_t;
[; ;pic16f887.h: 2366: extern volatile WPUBbits_t WPUBbits __at(0x095);
[; ;pic16f887.h: 2416: extern volatile unsigned char IOCB __at(0x096);
"2418
[; ;pic16f887.h: 2418: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2421: typedef union {
[; ;pic16f887.h: 2422: struct {
[; ;pic16f887.h: 2423: unsigned IOCB :8;
[; ;pic16f887.h: 2424: };
[; ;pic16f887.h: 2425: struct {
[; ;pic16f887.h: 2426: unsigned IOCB0 :1;
[; ;pic16f887.h: 2427: unsigned IOCB1 :1;
[; ;pic16f887.h: 2428: unsigned IOCB2 :1;
[; ;pic16f887.h: 2429: unsigned IOCB3 :1;
[; ;pic16f887.h: 2430: unsigned IOCB4 :1;
[; ;pic16f887.h: 2431: unsigned IOCB5 :1;
[; ;pic16f887.h: 2432: unsigned IOCB6 :1;
[; ;pic16f887.h: 2433: unsigned IOCB7 :1;
[; ;pic16f887.h: 2434: };
[; ;pic16f887.h: 2435: } IOCBbits_t;
[; ;pic16f887.h: 2436: extern volatile IOCBbits_t IOCBbits __at(0x096);
[; ;pic16f887.h: 2486: extern volatile unsigned char VRCON __at(0x097);
"2488
[; ;pic16f887.h: 2488: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2491: typedef union {
[; ;pic16f887.h: 2492: struct {
[; ;pic16f887.h: 2493: unsigned VR :4;
[; ;pic16f887.h: 2494: unsigned VRSS :1;
[; ;pic16f887.h: 2495: unsigned VRR :1;
[; ;pic16f887.h: 2496: unsigned VROE :1;
[; ;pic16f887.h: 2497: unsigned VREN :1;
[; ;pic16f887.h: 2498: };
[; ;pic16f887.h: 2499: struct {
[; ;pic16f887.h: 2500: unsigned VR0 :1;
[; ;pic16f887.h: 2501: unsigned VR1 :1;
[; ;pic16f887.h: 2502: unsigned VR2 :1;
[; ;pic16f887.h: 2503: unsigned VR3 :1;
[; ;pic16f887.h: 2504: };
[; ;pic16f887.h: 2505: } VRCONbits_t;
[; ;pic16f887.h: 2506: extern volatile VRCONbits_t VRCONbits __at(0x097);
[; ;pic16f887.h: 2556: extern volatile unsigned char TXSTA __at(0x098);
"2558
[; ;pic16f887.h: 2558: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2561: typedef union {
[; ;pic16f887.h: 2562: struct {
[; ;pic16f887.h: 2563: unsigned TX9D :1;
[; ;pic16f887.h: 2564: unsigned TRMT :1;
[; ;pic16f887.h: 2565: unsigned BRGH :1;
[; ;pic16f887.h: 2566: unsigned SENDB :1;
[; ;pic16f887.h: 2567: unsigned SYNC :1;
[; ;pic16f887.h: 2568: unsigned TXEN :1;
[; ;pic16f887.h: 2569: unsigned TX9 :1;
[; ;pic16f887.h: 2570: unsigned CSRC :1;
[; ;pic16f887.h: 2571: };
[; ;pic16f887.h: 2572: struct {
[; ;pic16f887.h: 2573: unsigned TXD8 :1;
[; ;pic16f887.h: 2574: unsigned :5;
[; ;pic16f887.h: 2575: unsigned nTX8 :1;
[; ;pic16f887.h: 2576: };
[; ;pic16f887.h: 2577: struct {
[; ;pic16f887.h: 2578: unsigned :6;
[; ;pic16f887.h: 2579: unsigned TX8_9 :1;
[; ;pic16f887.h: 2580: };
[; ;pic16f887.h: 2581: } TXSTAbits_t;
[; ;pic16f887.h: 2582: extern volatile TXSTAbits_t TXSTAbits __at(0x098);
[; ;pic16f887.h: 2642: extern volatile unsigned char SPBRG __at(0x099);
"2644
[; ;pic16f887.h: 2644: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2647: typedef union {
[; ;pic16f887.h: 2648: struct {
[; ;pic16f887.h: 2649: unsigned BRG0 :1;
[; ;pic16f887.h: 2650: unsigned BRG1 :1;
[; ;pic16f887.h: 2651: unsigned BRG2 :1;
[; ;pic16f887.h: 2652: unsigned BRG3 :1;
[; ;pic16f887.h: 2653: unsigned BRG4 :1;
[; ;pic16f887.h: 2654: unsigned BRG5 :1;
[; ;pic16f887.h: 2655: unsigned BRG6 :1;
[; ;pic16f887.h: 2656: unsigned BRG7 :1;
[; ;pic16f887.h: 2657: };
[; ;pic16f887.h: 2658: } SPBRGbits_t;
[; ;pic16f887.h: 2659: extern volatile SPBRGbits_t SPBRGbits __at(0x099);
[; ;pic16f887.h: 2704: extern volatile unsigned char SPBRGH __at(0x09A);
"2706
[; ;pic16f887.h: 2706: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2709: typedef union {
[; ;pic16f887.h: 2710: struct {
[; ;pic16f887.h: 2711: unsigned SPBRGH :8;
[; ;pic16f887.h: 2712: };
[; ;pic16f887.h: 2713: struct {
[; ;pic16f887.h: 2714: unsigned BRG8 :1;
[; ;pic16f887.h: 2715: unsigned BRG9 :1;
[; ;pic16f887.h: 2716: unsigned BRG10 :1;
[; ;pic16f887.h: 2717: unsigned BRG11 :1;
[; ;pic16f887.h: 2718: unsigned BRG12 :1;
[; ;pic16f887.h: 2719: unsigned BRG13 :1;
[; ;pic16f887.h: 2720: unsigned BRG14 :1;
[; ;pic16f887.h: 2721: unsigned BRG15 :1;
[; ;pic16f887.h: 2722: };
[; ;pic16f887.h: 2723: } SPBRGHbits_t;
[; ;pic16f887.h: 2724: extern volatile SPBRGHbits_t SPBRGHbits __at(0x09A);
[; ;pic16f887.h: 2774: extern volatile unsigned char PWM1CON __at(0x09B);
"2776
[; ;pic16f887.h: 2776: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2779: typedef union {
[; ;pic16f887.h: 2780: struct {
[; ;pic16f887.h: 2781: unsigned PDC :7;
[; ;pic16f887.h: 2782: unsigned PRSEN :1;
[; ;pic16f887.h: 2783: };
[; ;pic16f887.h: 2784: struct {
[; ;pic16f887.h: 2785: unsigned PDC0 :1;
[; ;pic16f887.h: 2786: unsigned PDC1 :1;
[; ;pic16f887.h: 2787: unsigned PDC2 :1;
[; ;pic16f887.h: 2788: unsigned PDC3 :1;
[; ;pic16f887.h: 2789: unsigned PDC4 :1;
[; ;pic16f887.h: 2790: unsigned PDC5 :1;
[; ;pic16f887.h: 2791: unsigned PDC6 :1;
[; ;pic16f887.h: 2792: };
[; ;pic16f887.h: 2793: } PWM1CONbits_t;
[; ;pic16f887.h: 2794: extern volatile PWM1CONbits_t PWM1CONbits __at(0x09B);
[; ;pic16f887.h: 2844: extern volatile unsigned char ECCPAS __at(0x09C);
"2846
[; ;pic16f887.h: 2846: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2849: typedef union {
[; ;pic16f887.h: 2850: struct {
[; ;pic16f887.h: 2851: unsigned PSSBD :2;
[; ;pic16f887.h: 2852: unsigned PSSAC :2;
[; ;pic16f887.h: 2853: unsigned ECCPAS :3;
[; ;pic16f887.h: 2854: unsigned ECCPASE :1;
[; ;pic16f887.h: 2855: };
[; ;pic16f887.h: 2856: struct {
[; ;pic16f887.h: 2857: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2858: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2859: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2860: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2861: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2862: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2863: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2864: };
[; ;pic16f887.h: 2865: } ECCPASbits_t;
[; ;pic16f887.h: 2866: extern volatile ECCPASbits_t ECCPASbits __at(0x09C);
[; ;pic16f887.h: 2926: extern volatile unsigned char PSTRCON __at(0x09D);
"2928
[; ;pic16f887.h: 2928: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2931: typedef union {
[; ;pic16f887.h: 2932: struct {
[; ;pic16f887.h: 2933: unsigned STRA :1;
[; ;pic16f887.h: 2934: unsigned STRB :1;
[; ;pic16f887.h: 2935: unsigned STRC :1;
[; ;pic16f887.h: 2936: unsigned STRD :1;
[; ;pic16f887.h: 2937: unsigned STRSYNC :1;
[; ;pic16f887.h: 2938: };
[; ;pic16f887.h: 2939: } PSTRCONbits_t;
[; ;pic16f887.h: 2940: extern volatile PSTRCONbits_t PSTRCONbits __at(0x09D);
[; ;pic16f887.h: 2970: extern volatile unsigned char ADRESL __at(0x09E);
"2972
[; ;pic16f887.h: 2972: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2977: extern volatile unsigned char ADCON1 __at(0x09F);
"2979
[; ;pic16f887.h: 2979: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2982: typedef union {
[; ;pic16f887.h: 2983: struct {
[; ;pic16f887.h: 2984: unsigned :4;
[; ;pic16f887.h: 2985: unsigned VCFG0 :1;
[; ;pic16f887.h: 2986: unsigned VCFG1 :1;
[; ;pic16f887.h: 2987: unsigned :1;
[; ;pic16f887.h: 2988: unsigned ADFM :1;
[; ;pic16f887.h: 2989: };
[; ;pic16f887.h: 2990: } ADCON1bits_t;
[; ;pic16f887.h: 2991: extern volatile ADCON1bits_t ADCON1bits __at(0x09F);
[; ;pic16f887.h: 3011: extern volatile unsigned char WDTCON __at(0x105);
"3013
[; ;pic16f887.h: 3013: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 3016: typedef union {
[; ;pic16f887.h: 3017: struct {
[; ;pic16f887.h: 3018: unsigned SWDTEN :1;
[; ;pic16f887.h: 3019: unsigned WDTPS :4;
[; ;pic16f887.h: 3020: };
[; ;pic16f887.h: 3021: struct {
[; ;pic16f887.h: 3022: unsigned :1;
[; ;pic16f887.h: 3023: unsigned WDTPS0 :1;
[; ;pic16f887.h: 3024: unsigned WDTPS1 :1;
[; ;pic16f887.h: 3025: unsigned WDTPS2 :1;
[; ;pic16f887.h: 3026: unsigned WDTPS3 :1;
[; ;pic16f887.h: 3027: };
[; ;pic16f887.h: 3028: } WDTCONbits_t;
[; ;pic16f887.h: 3029: extern volatile WDTCONbits_t WDTCONbits __at(0x105);
[; ;pic16f887.h: 3064: extern volatile unsigned char CM1CON0 __at(0x107);
"3066
[; ;pic16f887.h: 3066: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3069: typedef union {
[; ;pic16f887.h: 3070: struct {
[; ;pic16f887.h: 3071: unsigned C1CH :2;
[; ;pic16f887.h: 3072: unsigned C1R :1;
[; ;pic16f887.h: 3073: unsigned :1;
[; ;pic16f887.h: 3074: unsigned C1POL :1;
[; ;pic16f887.h: 3075: unsigned C1OE :1;
[; ;pic16f887.h: 3076: unsigned C1OUT :1;
[; ;pic16f887.h: 3077: unsigned C1ON :1;
[; ;pic16f887.h: 3078: };
[; ;pic16f887.h: 3079: struct {
[; ;pic16f887.h: 3080: unsigned C1CH0 :1;
[; ;pic16f887.h: 3081: unsigned C1CH1 :1;
[; ;pic16f887.h: 3082: };
[; ;pic16f887.h: 3083: } CM1CON0bits_t;
[; ;pic16f887.h: 3084: extern volatile CM1CON0bits_t CM1CON0bits __at(0x107);
[; ;pic16f887.h: 3129: extern volatile unsigned char CM2CON0 __at(0x108);
"3131
[; ;pic16f887.h: 3131: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3134: typedef union {
[; ;pic16f887.h: 3135: struct {
[; ;pic16f887.h: 3136: unsigned C2CH :2;
[; ;pic16f887.h: 3137: unsigned C2R :1;
[; ;pic16f887.h: 3138: unsigned :1;
[; ;pic16f887.h: 3139: unsigned C2POL :1;
[; ;pic16f887.h: 3140: unsigned C2OE :1;
[; ;pic16f887.h: 3141: unsigned C2OUT :1;
[; ;pic16f887.h: 3142: unsigned C2ON :1;
[; ;pic16f887.h: 3143: };
[; ;pic16f887.h: 3144: struct {
[; ;pic16f887.h: 3145: unsigned C2CH0 :1;
[; ;pic16f887.h: 3146: unsigned C2CH1 :1;
[; ;pic16f887.h: 3147: };
[; ;pic16f887.h: 3148: } CM2CON0bits_t;
[; ;pic16f887.h: 3149: extern volatile CM2CON0bits_t CM2CON0bits __at(0x108);
[; ;pic16f887.h: 3194: extern volatile unsigned char CM2CON1 __at(0x109);
"3196
[; ;pic16f887.h: 3196: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3199: typedef union {
[; ;pic16f887.h: 3200: struct {
[; ;pic16f887.h: 3201: unsigned C2SYNC :1;
[; ;pic16f887.h: 3202: unsigned T1GSS :1;
[; ;pic16f887.h: 3203: unsigned :2;
[; ;pic16f887.h: 3204: unsigned C2RSEL :1;
[; ;pic16f887.h: 3205: unsigned C1RSEL :1;
[; ;pic16f887.h: 3206: unsigned MC2OUT :1;
[; ;pic16f887.h: 3207: unsigned MC1OUT :1;
[; ;pic16f887.h: 3208: };
[; ;pic16f887.h: 3209: } CM2CON1bits_t;
[; ;pic16f887.h: 3210: extern volatile CM2CON1bits_t CM2CON1bits __at(0x109);
[; ;pic16f887.h: 3245: extern volatile unsigned char EEDATA __at(0x10C);
"3247
[; ;pic16f887.h: 3247: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3250: extern volatile unsigned char EEDAT __at(0x10C);
"3252
[; ;pic16f887.h: 3252: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3257: extern volatile unsigned char EEADR __at(0x10D);
"3259
[; ;pic16f887.h: 3259: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3264: extern volatile unsigned char EEDATH __at(0x10E);
"3266
[; ;pic16f887.h: 3266: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3271: extern volatile unsigned char EEADRH __at(0x10F);
"3273
[; ;pic16f887.h: 3273: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3278: extern volatile unsigned char SRCON __at(0x185);
"3280
[; ;pic16f887.h: 3280: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3283: typedef union {
[; ;pic16f887.h: 3284: struct {
[; ;pic16f887.h: 3285: unsigned FVREN :1;
[; ;pic16f887.h: 3286: unsigned :1;
[; ;pic16f887.h: 3287: unsigned PULSR :1;
[; ;pic16f887.h: 3288: unsigned PULSS :1;
[; ;pic16f887.h: 3289: unsigned C2REN :1;
[; ;pic16f887.h: 3290: unsigned C1SEN :1;
[; ;pic16f887.h: 3291: unsigned SR0 :1;
[; ;pic16f887.h: 3292: unsigned SR1 :1;
[; ;pic16f887.h: 3293: };
[; ;pic16f887.h: 3294: } SRCONbits_t;
[; ;pic16f887.h: 3295: extern volatile SRCONbits_t SRCONbits __at(0x185);
[; ;pic16f887.h: 3335: extern volatile unsigned char BAUDCTL __at(0x187);
"3337
[; ;pic16f887.h: 3337: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3340: typedef union {
[; ;pic16f887.h: 3341: struct {
[; ;pic16f887.h: 3342: unsigned ABDEN :1;
[; ;pic16f887.h: 3343: unsigned WUE :1;
[; ;pic16f887.h: 3344: unsigned :1;
[; ;pic16f887.h: 3345: unsigned BRG16 :1;
[; ;pic16f887.h: 3346: unsigned SCKP :1;
[; ;pic16f887.h: 3347: unsigned :1;
[; ;pic16f887.h: 3348: unsigned RCIDL :1;
[; ;pic16f887.h: 3349: unsigned ABDOVF :1;
[; ;pic16f887.h: 3350: };
[; ;pic16f887.h: 3351: } BAUDCTLbits_t;
[; ;pic16f887.h: 3352: extern volatile BAUDCTLbits_t BAUDCTLbits __at(0x187);
[; ;pic16f887.h: 3387: extern volatile unsigned char ANSEL __at(0x188);
"3389
[; ;pic16f887.h: 3389: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3392: typedef union {
[; ;pic16f887.h: 3393: struct {
[; ;pic16f887.h: 3394: unsigned ANS0 :1;
[; ;pic16f887.h: 3395: unsigned ANS1 :1;
[; ;pic16f887.h: 3396: unsigned ANS2 :1;
[; ;pic16f887.h: 3397: unsigned ANS3 :1;
[; ;pic16f887.h: 3398: unsigned ANS4 :1;
[; ;pic16f887.h: 3399: unsigned ANS5 :1;
[; ;pic16f887.h: 3400: unsigned ANS6 :1;
[; ;pic16f887.h: 3401: unsigned ANS7 :1;
[; ;pic16f887.h: 3402: };
[; ;pic16f887.h: 3403: } ANSELbits_t;
[; ;pic16f887.h: 3404: extern volatile ANSELbits_t ANSELbits __at(0x188);
[; ;pic16f887.h: 3449: extern volatile unsigned char ANSELH __at(0x189);
"3451
[; ;pic16f887.h: 3451: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3454: typedef union {
[; ;pic16f887.h: 3455: struct {
[; ;pic16f887.h: 3456: unsigned ANS8 :1;
[; ;pic16f887.h: 3457: unsigned ANS9 :1;
[; ;pic16f887.h: 3458: unsigned ANS10 :1;
[; ;pic16f887.h: 3459: unsigned ANS11 :1;
[; ;pic16f887.h: 3460: unsigned ANS12 :1;
[; ;pic16f887.h: 3461: unsigned ANS13 :1;
[; ;pic16f887.h: 3462: };
[; ;pic16f887.h: 3463: } ANSELHbits_t;
[; ;pic16f887.h: 3464: extern volatile ANSELHbits_t ANSELHbits __at(0x189);
[; ;pic16f887.h: 3499: extern volatile unsigned char EECON1 __at(0x18C);
"3501
[; ;pic16f887.h: 3501: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3504: typedef union {
[; ;pic16f887.h: 3505: struct {
[; ;pic16f887.h: 3506: unsigned RD :1;
[; ;pic16f887.h: 3507: unsigned WR :1;
[; ;pic16f887.h: 3508: unsigned WREN :1;
[; ;pic16f887.h: 3509: unsigned WRERR :1;
[; ;pic16f887.h: 3510: unsigned :3;
[; ;pic16f887.h: 3511: unsigned EEPGD :1;
[; ;pic16f887.h: 3512: };
[; ;pic16f887.h: 3513: } EECON1bits_t;
[; ;pic16f887.h: 3514: extern volatile EECON1bits_t EECON1bits __at(0x18C);
[; ;pic16f887.h: 3544: extern volatile unsigned char EECON2 __at(0x18D);
"3546
[; ;pic16f887.h: 3546: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3557: extern volatile __bit ABDEN __at(0xC38);
[; ;pic16f887.h: 3560: extern volatile __bit ABDOVF __at(0xC3F);
[; ;pic16f887.h: 3563: extern volatile __bit ACKDT __at(0x48D);
[; ;pic16f887.h: 3566: extern volatile __bit ACKEN __at(0x48C);
[; ;pic16f887.h: 3569: extern volatile __bit ACKSTAT __at(0x48E);
[; ;pic16f887.h: 3572: extern volatile __bit ADCS0 __at(0xFE);
[; ;pic16f887.h: 3575: extern volatile __bit ADCS1 __at(0xFF);
[; ;pic16f887.h: 3578: extern volatile __bit ADDEN __at(0xC3);
[; ;pic16f887.h: 3581: extern volatile __bit ADFM __at(0x4FF);
[; ;pic16f887.h: 3584: extern volatile __bit ADIE __at(0x466);
[; ;pic16f887.h: 3587: extern volatile __bit ADIF __at(0x66);
[; ;pic16f887.h: 3590: extern volatile __bit ADON __at(0xF8);
[; ;pic16f887.h: 3593: extern volatile __bit ANS0 __at(0xC40);
[; ;pic16f887.h: 3596: extern volatile __bit ANS1 __at(0xC41);
[; ;pic16f887.h: 3599: extern volatile __bit ANS10 __at(0xC4A);
[; ;pic16f887.h: 3602: extern volatile __bit ANS11 __at(0xC4B);
[; ;pic16f887.h: 3605: extern volatile __bit ANS12 __at(0xC4C);
[; ;pic16f887.h: 3608: extern volatile __bit ANS13 __at(0xC4D);
[; ;pic16f887.h: 3611: extern volatile __bit ANS2 __at(0xC42);
[; ;pic16f887.h: 3614: extern volatile __bit ANS3 __at(0xC43);
[; ;pic16f887.h: 3617: extern volatile __bit ANS4 __at(0xC44);
[; ;pic16f887.h: 3620: extern volatile __bit ANS5 __at(0xC45);
[; ;pic16f887.h: 3623: extern volatile __bit ANS6 __at(0xC46);
[; ;pic16f887.h: 3626: extern volatile __bit ANS7 __at(0xC47);
[; ;pic16f887.h: 3629: extern volatile __bit ANS8 __at(0xC48);
[; ;pic16f887.h: 3632: extern volatile __bit ANS9 __at(0xC49);
[; ;pic16f887.h: 3635: extern volatile __bit BCLIE __at(0x46B);
[; ;pic16f887.h: 3638: extern volatile __bit BCLIF __at(0x6B);
[; ;pic16f887.h: 3641: extern volatile __bit BF __at(0x4A0);
[; ;pic16f887.h: 3644: extern volatile __bit BRG0 __at(0x4C8);
[; ;pic16f887.h: 3647: extern volatile __bit BRG1 __at(0x4C9);
[; ;pic16f887.h: 3650: extern volatile __bit BRG10 __at(0x4D2);
[; ;pic16f887.h: 3653: extern volatile __bit BRG11 __at(0x4D3);
[; ;pic16f887.h: 3656: extern volatile __bit BRG12 __at(0x4D4);
[; ;pic16f887.h: 3659: extern volatile __bit BRG13 __at(0x4D5);
[; ;pic16f887.h: 3662: extern volatile __bit BRG14 __at(0x4D6);
[; ;pic16f887.h: 3665: extern volatile __bit BRG15 __at(0x4D7);
[; ;pic16f887.h: 3668: extern volatile __bit BRG16 __at(0xC3B);
[; ;pic16f887.h: 3671: extern volatile __bit BRG2 __at(0x4CA);
[; ;pic16f887.h: 3674: extern volatile __bit BRG3 __at(0x4CB);
[; ;pic16f887.h: 3677: extern volatile __bit BRG4 __at(0x4CC);
[; ;pic16f887.h: 3680: extern volatile __bit BRG5 __at(0x4CD);
[; ;pic16f887.h: 3683: extern volatile __bit BRG6 __at(0x4CE);
[; ;pic16f887.h: 3686: extern volatile __bit BRG7 __at(0x4CF);
[; ;pic16f887.h: 3689: extern volatile __bit BRG8 __at(0x4D0);
[; ;pic16f887.h: 3692: extern volatile __bit BRG9 __at(0x4D1);
[; ;pic16f887.h: 3695: extern volatile __bit BRGH __at(0x4C2);
[; ;pic16f887.h: 3698: extern volatile __bit C1CH0 __at(0x838);
[; ;pic16f887.h: 3701: extern volatile __bit C1CH1 __at(0x839);
[; ;pic16f887.h: 3704: extern volatile __bit C1IE __at(0x46D);
[; ;pic16f887.h: 3707: extern volatile __bit C1IF __at(0x6D);
[; ;pic16f887.h: 3710: extern volatile __bit C1OE __at(0x83D);
[; ;pic16f887.h: 3713: extern volatile __bit C1ON __at(0x83F);
[; ;pic16f887.h: 3716: extern volatile __bit C1OUT __at(0x83E);
[; ;pic16f887.h: 3719: extern volatile __bit C1POL __at(0x83C);
[; ;pic16f887.h: 3722: extern volatile __bit C1R __at(0x83A);
[; ;pic16f887.h: 3725: extern volatile __bit C1RSEL __at(0x84D);
[; ;pic16f887.h: 3728: extern volatile __bit C1SEN __at(0xC2D);
[; ;pic16f887.h: 3731: extern volatile __bit C2CH0 __at(0x840);
[; ;pic16f887.h: 3734: extern volatile __bit C2CH1 __at(0x841);
[; ;pic16f887.h: 3737: extern volatile __bit C2IE __at(0x46E);
[; ;pic16f887.h: 3740: extern volatile __bit C2IF __at(0x6E);
[; ;pic16f887.h: 3743: extern volatile __bit C2OE __at(0x845);
[; ;pic16f887.h: 3746: extern volatile __bit C2ON __at(0x847);
[; ;pic16f887.h: 3749: extern volatile __bit C2OUT __at(0x846);
[; ;pic16f887.h: 3752: extern volatile __bit C2POL __at(0x844);
[; ;pic16f887.h: 3755: extern volatile __bit C2R __at(0x842);
[; ;pic16f887.h: 3758: extern volatile __bit C2REN __at(0xC2C);
[; ;pic16f887.h: 3761: extern volatile __bit C2RSEL __at(0x84C);
[; ;pic16f887.h: 3764: extern volatile __bit C2SYNC __at(0x848);
[; ;pic16f887.h: 3767: extern volatile __bit CARRY __at(0x18);
[; ;pic16f887.h: 3770: extern volatile __bit CCP1IE __at(0x462);
[; ;pic16f887.h: 3773: extern volatile __bit CCP1IF __at(0x62);
[; ;pic16f887.h: 3776: extern volatile __bit CCP1M0 __at(0xB8);
[; ;pic16f887.h: 3779: extern volatile __bit CCP1M1 __at(0xB9);
[; ;pic16f887.h: 3782: extern volatile __bit CCP1M2 __at(0xBA);
[; ;pic16f887.h: 3785: extern volatile __bit CCP1M3 __at(0xBB);
[; ;pic16f887.h: 3788: extern volatile __bit CCP1X __at(0xBD);
[; ;pic16f887.h: 3791: extern volatile __bit CCP1Y __at(0xBC);
[; ;pic16f887.h: 3794: extern volatile __bit CCP2IE __at(0x468);
[; ;pic16f887.h: 3797: extern volatile __bit CCP2IF __at(0x68);
[; ;pic16f887.h: 3800: extern volatile __bit CCP2M0 __at(0xE8);
[; ;pic16f887.h: 3803: extern volatile __bit CCP2M1 __at(0xE9);
[; ;pic16f887.h: 3806: extern volatile __bit CCP2M2 __at(0xEA);
[; ;pic16f887.h: 3809: extern volatile __bit CCP2M3 __at(0xEB);
[; ;pic16f887.h: 3812: extern volatile __bit CCP2X __at(0xED);
[; ;pic16f887.h: 3815: extern volatile __bit CCP2Y __at(0xEC);
[; ;pic16f887.h: 3818: extern volatile __bit CHS0 __at(0xFA);
[; ;pic16f887.h: 3821: extern volatile __bit CHS1 __at(0xFB);
[; ;pic16f887.h: 3824: extern volatile __bit CHS2 __at(0xFC);
[; ;pic16f887.h: 3827: extern volatile __bit CHS3 __at(0xFD);
[; ;pic16f887.h: 3830: extern volatile __bit CKE __at(0x4A6);
[; ;pic16f887.h: 3833: extern volatile __bit CKP __at(0xA4);
[; ;pic16f887.h: 3836: extern volatile __bit CREN __at(0xC4);
[; ;pic16f887.h: 3839: extern volatile __bit CSRC __at(0x4C7);
[; ;pic16f887.h: 3842: extern volatile __bit DATA_ADDRESS __at(0x4A5);
[; ;pic16f887.h: 3845: extern volatile __bit DC __at(0x19);
[; ;pic16f887.h: 3848: extern volatile __bit DC1B0 __at(0xBC);
[; ;pic16f887.h: 3851: extern volatile __bit DC1B1 __at(0xBD);
[; ;pic16f887.h: 3854: extern volatile __bit DC2B0 __at(0xEC);
[; ;pic16f887.h: 3857: extern volatile __bit DC2B1 __at(0xED);
[; ;pic16f887.h: 3860: extern volatile __bit D_A __at(0x4A5);
[; ;pic16f887.h: 3863: extern volatile __bit D_nA __at(0x4A5);
[; ;pic16f887.h: 3866: extern volatile __bit ECCPAS0 __at(0x4E4);
[; ;pic16f887.h: 3869: extern volatile __bit ECCPAS1 __at(0x4E5);
[; ;pic16f887.h: 3872: extern volatile __bit ECCPAS2 __at(0x4E6);
[; ;pic16f887.h: 3875: extern volatile __bit ECCPASE __at(0x4E7);
[; ;pic16f887.h: 3878: extern volatile __bit EEIE __at(0x46C);
[; ;pic16f887.h: 3881: extern volatile __bit EEIF __at(0x6C);
[; ;pic16f887.h: 3884: extern volatile __bit EEPGD __at(0xC67);
[; ;pic16f887.h: 3887: extern volatile __bit FERR __at(0xC2);
[; ;pic16f887.h: 3890: extern volatile __bit FVREN __at(0xC28);
[; ;pic16f887.h: 3893: extern volatile __bit GCEN __at(0x48F);
[; ;pic16f887.h: 3896: extern volatile __bit GIE __at(0x5F);
[; ;pic16f887.h: 3899: extern volatile __bit GO __at(0xF9);
[; ;pic16f887.h: 3902: extern volatile __bit GO_DONE __at(0xF9);
[; ;pic16f887.h: 3905: extern volatile __bit GO_nDONE __at(0xF9);
[; ;pic16f887.h: 3908: extern volatile __bit HTS __at(0x47A);
[; ;pic16f887.h: 3911: extern volatile __bit I2C_DATA __at(0x4A5);
[; ;pic16f887.h: 3914: extern volatile __bit I2C_READ __at(0x4A2);
[; ;pic16f887.h: 3917: extern volatile __bit I2C_START __at(0x4A3);
[; ;pic16f887.h: 3920: extern volatile __bit I2C_STOP __at(0x4A4);
[; ;pic16f887.h: 3923: extern volatile __bit INTE __at(0x5C);
[; ;pic16f887.h: 3926: extern volatile __bit INTEDG __at(0x40E);
[; ;pic16f887.h: 3929: extern volatile __bit INTF __at(0x59);
[; ;pic16f887.h: 3932: extern volatile __bit IOCB0 __at(0x4B0);
[; ;pic16f887.h: 3935: extern volatile __bit IOCB1 __at(0x4B1);
[; ;pic16f887.h: 3938: extern volatile __bit IOCB2 __at(0x4B2);
[; ;pic16f887.h: 3941: extern volatile __bit IOCB3 __at(0x4B3);
[; ;pic16f887.h: 3944: extern volatile __bit IOCB4 __at(0x4B4);
[; ;pic16f887.h: 3947: extern volatile __bit IOCB5 __at(0x4B5);
[; ;pic16f887.h: 3950: extern volatile __bit IOCB6 __at(0x4B6);
[; ;pic16f887.h: 3953: extern volatile __bit IOCB7 __at(0x4B7);
[; ;pic16f887.h: 3956: extern volatile __bit IRCF0 __at(0x47C);
[; ;pic16f887.h: 3959: extern volatile __bit IRCF1 __at(0x47D);
[; ;pic16f887.h: 3962: extern volatile __bit IRCF2 __at(0x47E);
[; ;pic16f887.h: 3965: extern volatile __bit IRP __at(0x1F);
[; ;pic16f887.h: 3968: extern volatile __bit LTS __at(0x479);
[; ;pic16f887.h: 3971: extern volatile __bit MC1OUT __at(0x84F);
[; ;pic16f887.h: 3974: extern volatile __bit MC2OUT __at(0x84E);
[; ;pic16f887.h: 3977: extern volatile __bit MSK0 __at(0x498);
[; ;pic16f887.h: 3980: extern volatile __bit MSK1 __at(0x499);
[; ;pic16f887.h: 3983: extern volatile __bit MSK2 __at(0x49A);
[; ;pic16f887.h: 3986: extern volatile __bit MSK3 __at(0x49B);
[; ;pic16f887.h: 3989: extern volatile __bit MSK4 __at(0x49C);
[; ;pic16f887.h: 3992: extern volatile __bit MSK5 __at(0x49D);
[; ;pic16f887.h: 3995: extern volatile __bit MSK6 __at(0x49E);
[; ;pic16f887.h: 3998: extern volatile __bit MSK7 __at(0x49F);
[; ;pic16f887.h: 4001: extern volatile __bit OERR __at(0xC1);
[; ;pic16f887.h: 4004: extern volatile __bit OSFIE __at(0x46F);
[; ;pic16f887.h: 4007: extern volatile __bit OSFIF __at(0x6F);
[; ;pic16f887.h: 4010: extern volatile __bit OSTS __at(0x47B);
[; ;pic16f887.h: 4013: extern volatile __bit P1M0 __at(0xBE);
[; ;pic16f887.h: 4016: extern volatile __bit P1M1 __at(0xBF);
[; ;pic16f887.h: 4019: extern volatile __bit PDC0 __at(0x4D8);
[; ;pic16f887.h: 4022: extern volatile __bit PDC1 __at(0x4D9);
[; ;pic16f887.h: 4025: extern volatile __bit PDC2 __at(0x4DA);
[; ;pic16f887.h: 4028: extern volatile __bit PDC3 __at(0x4DB);
[; ;pic16f887.h: 4031: extern volatile __bit PDC4 __at(0x4DC);
[; ;pic16f887.h: 4034: extern volatile __bit PDC5 __at(0x4DD);
[; ;pic16f887.h: 4037: extern volatile __bit PDC6 __at(0x4DE);
[; ;pic16f887.h: 4040: extern volatile __bit PEIE __at(0x5E);
[; ;pic16f887.h: 4043: extern volatile __bit PEN __at(0x48A);
[; ;pic16f887.h: 4046: extern volatile __bit PRSEN __at(0x4DF);
[; ;pic16f887.h: 4049: extern volatile __bit PS0 __at(0x408);
[; ;pic16f887.h: 4052: extern volatile __bit PS1 __at(0x409);
[; ;pic16f887.h: 4055: extern volatile __bit PS2 __at(0x40A);
[; ;pic16f887.h: 4058: extern volatile __bit PSA __at(0x40B);
[; ;pic16f887.h: 4061: extern volatile __bit PSSAC0 __at(0x4E2);
[; ;pic16f887.h: 4064: extern volatile __bit PSSAC1 __at(0x4E3);
[; ;pic16f887.h: 4067: extern volatile __bit PSSBD0 __at(0x4E0);
[; ;pic16f887.h: 4070: extern volatile __bit PSSBD1 __at(0x4E1);
[; ;pic16f887.h: 4073: extern volatile __bit PULSR __at(0xC2A);
[; ;pic16f887.h: 4076: extern volatile __bit PULSS __at(0xC2B);
[; ;pic16f887.h: 4079: extern volatile __bit RA0 __at(0x28);
[; ;pic16f887.h: 4082: extern volatile __bit RA1 __at(0x29);
[; ;pic16f887.h: 4085: extern volatile __bit RA2 __at(0x2A);
[; ;pic16f887.h: 4088: extern volatile __bit RA3 __at(0x2B);
[; ;pic16f887.h: 4091: extern volatile __bit RA4 __at(0x2C);
[; ;pic16f887.h: 4094: extern volatile __bit RA5 __at(0x2D);
[; ;pic16f887.h: 4097: extern volatile __bit RA6 __at(0x2E);
[; ;pic16f887.h: 4100: extern volatile __bit RA7 __at(0x2F);
[; ;pic16f887.h: 4103: extern volatile __bit RB0 __at(0x30);
[; ;pic16f887.h: 4106: extern volatile __bit RB1 __at(0x31);
[; ;pic16f887.h: 4109: extern volatile __bit RB2 __at(0x32);
[; ;pic16f887.h: 4112: extern volatile __bit RB3 __at(0x33);
[; ;pic16f887.h: 4115: extern volatile __bit RB4 __at(0x34);
[; ;pic16f887.h: 4118: extern volatile __bit RB5 __at(0x35);
[; ;pic16f887.h: 4121: extern volatile __bit RB6 __at(0x36);
[; ;pic16f887.h: 4124: extern volatile __bit RB7 __at(0x37);
[; ;pic16f887.h: 4127: extern volatile __bit RBIE __at(0x5B);
[; ;pic16f887.h: 4130: extern volatile __bit RBIF __at(0x58);
[; ;pic16f887.h: 4133: extern volatile __bit RC0 __at(0x38);
[; ;pic16f887.h: 4136: extern volatile __bit RC1 __at(0x39);
[; ;pic16f887.h: 4139: extern volatile __bit RC2 __at(0x3A);
[; ;pic16f887.h: 4142: extern volatile __bit RC3 __at(0x3B);
[; ;pic16f887.h: 4145: extern volatile __bit RC4 __at(0x3C);
[; ;pic16f887.h: 4148: extern volatile __bit RC5 __at(0x3D);
[; ;pic16f887.h: 4151: extern volatile __bit RC6 __at(0x3E);
[; ;pic16f887.h: 4154: extern volatile __bit RC7 __at(0x3F);
[; ;pic16f887.h: 4157: extern volatile __bit RC8_9 __at(0xC6);
[; ;pic16f887.h: 4160: extern volatile __bit RC9 __at(0xC6);
[; ;pic16f887.h: 4163: extern volatile __bit RCD8 __at(0xC0);
[; ;pic16f887.h: 4166: extern volatile __bit RCEN __at(0x48B);
[; ;pic16f887.h: 4169: extern volatile __bit RCIDL __at(0xC3E);
[; ;pic16f887.h: 4172: extern volatile __bit RCIE __at(0x465);
[; ;pic16f887.h: 4175: extern volatile __bit RCIF __at(0x65);
[; ;pic16f887.h: 4178: extern volatile __bit RD __at(0xC60);
[; ;pic16f887.h: 4181: extern volatile __bit RD0 __at(0x40);
[; ;pic16f887.h: 4184: extern volatile __bit RD1 __at(0x41);
[; ;pic16f887.h: 4187: extern volatile __bit RD2 __at(0x42);
[; ;pic16f887.h: 4190: extern volatile __bit RD3 __at(0x43);
[; ;pic16f887.h: 4193: extern volatile __bit RD4 __at(0x44);
[; ;pic16f887.h: 4196: extern volatile __bit RD5 __at(0x45);
[; ;pic16f887.h: 4199: extern volatile __bit RD6 __at(0x46);
[; ;pic16f887.h: 4202: extern volatile __bit RD7 __at(0x47);
[; ;pic16f887.h: 4205: extern volatile __bit RE0 __at(0x48);
[; ;pic16f887.h: 4208: extern volatile __bit RE1 __at(0x49);
[; ;pic16f887.h: 4211: extern volatile __bit RE2 __at(0x4A);
[; ;pic16f887.h: 4214: extern volatile __bit RE3 __at(0x4B);
[; ;pic16f887.h: 4217: extern volatile __bit READ_WRITE __at(0x4A2);
[; ;pic16f887.h: 4220: extern volatile __bit RP0 __at(0x1D);
[; ;pic16f887.h: 4223: extern volatile __bit RP1 __at(0x1E);
[; ;pic16f887.h: 4226: extern volatile __bit RSEN __at(0x489);
[; ;pic16f887.h: 4229: extern volatile __bit RX9 __at(0xC6);
[; ;pic16f887.h: 4232: extern volatile __bit RX9D __at(0xC0);
[; ;pic16f887.h: 4235: extern volatile __bit R_W __at(0x4A2);
[; ;pic16f887.h: 4238: extern volatile __bit R_nW __at(0x4A2);
[; ;pic16f887.h: 4241: extern volatile __bit SBOREN __at(0x474);
[; ;pic16f887.h: 4244: extern volatile __bit SCKP __at(0xC3C);
[; ;pic16f887.h: 4247: extern volatile __bit SCS __at(0x478);
[; ;pic16f887.h: 4250: extern volatile __bit SEN __at(0x488);
[; ;pic16f887.h: 4253: extern volatile __bit SENDB __at(0x4C3);
[; ;pic16f887.h: 4256: extern volatile __bit SMP __at(0x4A7);
[; ;pic16f887.h: 4259: extern volatile __bit SPEN __at(0xC7);
[; ;pic16f887.h: 4262: extern volatile __bit SR0 __at(0xC2E);
[; ;pic16f887.h: 4265: extern volatile __bit SR1 __at(0xC2F);
[; ;pic16f887.h: 4268: extern volatile __bit SREN __at(0xC5);
[; ;pic16f887.h: 4271: extern volatile __bit SSPEN __at(0xA5);
[; ;pic16f887.h: 4274: extern volatile __bit SSPIE __at(0x463);
[; ;pic16f887.h: 4277: extern volatile __bit SSPIF __at(0x63);
[; ;pic16f887.h: 4280: extern volatile __bit SSPM0 __at(0xA0);
[; ;pic16f887.h: 4283: extern volatile __bit SSPM1 __at(0xA1);
[; ;pic16f887.h: 4286: extern volatile __bit SSPM2 __at(0xA2);
[; ;pic16f887.h: 4289: extern volatile __bit SSPM3 __at(0xA3);
[; ;pic16f887.h: 4292: extern volatile __bit SSPOV __at(0xA6);
[; ;pic16f887.h: 4295: extern volatile __bit STRA __at(0x4E8);
[; ;pic16f887.h: 4298: extern volatile __bit STRB __at(0x4E9);
[; ;pic16f887.h: 4301: extern volatile __bit STRC __at(0x4EA);
[; ;pic16f887.h: 4304: extern volatile __bit STRD __at(0x4EB);
[; ;pic16f887.h: 4307: extern volatile __bit STRSYNC __at(0x4EC);
[; ;pic16f887.h: 4310: extern volatile __bit SWDTEN __at(0x828);
[; ;pic16f887.h: 4313: extern volatile __bit SYNC __at(0x4C4);
[; ;pic16f887.h: 4316: extern volatile __bit T0CS __at(0x40D);
[; ;pic16f887.h: 4319: extern volatile __bit T0IE __at(0x5D);
[; ;pic16f887.h: 4322: extern volatile __bit T0IF __at(0x5A);
[; ;pic16f887.h: 4325: extern volatile __bit T0SE __at(0x40C);
[; ;pic16f887.h: 4328: extern volatile __bit T1CKPS0 __at(0x84);
[; ;pic16f887.h: 4331: extern volatile __bit T1CKPS1 __at(0x85);
[; ;pic16f887.h: 4334: extern volatile __bit T1GINV __at(0x87);
[; ;pic16f887.h: 4337: extern volatile __bit T1GIV __at(0x87);
[; ;pic16f887.h: 4340: extern volatile __bit T1GSS __at(0x849);
[; ;pic16f887.h: 4343: extern volatile __bit T1INSYNC __at(0x82);
[; ;pic16f887.h: 4346: extern volatile __bit T1OSCEN __at(0x83);
[; ;pic16f887.h: 4349: extern volatile __bit T1SYNC __at(0x82);
[; ;pic16f887.h: 4352: extern volatile __bit T2CKPS0 __at(0x90);
[; ;pic16f887.h: 4355: extern volatile __bit T2CKPS1 __at(0x91);
[; ;pic16f887.h: 4358: extern volatile __bit TMR0IE __at(0x5D);
[; ;pic16f887.h: 4361: extern volatile __bit TMR0IF __at(0x5A);
[; ;pic16f887.h: 4364: extern volatile __bit TMR1CS __at(0x81);
[; ;pic16f887.h: 4367: extern volatile __bit TMR1GE __at(0x86);
[; ;pic16f887.h: 4370: extern volatile __bit TMR1IE __at(0x460);
[; ;pic16f887.h: 4373: extern volatile __bit TMR1IF __at(0x60);
[; ;pic16f887.h: 4376: extern volatile __bit TMR1ON __at(0x80);
[; ;pic16f887.h: 4379: extern volatile __bit TMR2IE __at(0x461);
[; ;pic16f887.h: 4382: extern volatile __bit TMR2IF __at(0x61);
[; ;pic16f887.h: 4385: extern volatile __bit TMR2ON __at(0x92);
[; ;pic16f887.h: 4388: extern volatile __bit TOUTPS0 __at(0x93);
[; ;pic16f887.h: 4391: extern volatile __bit TOUTPS1 __at(0x94);
[; ;pic16f887.h: 4394: extern volatile __bit TOUTPS2 __at(0x95);
[; ;pic16f887.h: 4397: extern volatile __bit TOUTPS3 __at(0x96);
[; ;pic16f887.h: 4400: extern volatile __bit TRISA0 __at(0x428);
[; ;pic16f887.h: 4403: extern volatile __bit TRISA1 __at(0x429);
[; ;pic16f887.h: 4406: extern volatile __bit TRISA2 __at(0x42A);
[; ;pic16f887.h: 4409: extern volatile __bit TRISA3 __at(0x42B);
[; ;pic16f887.h: 4412: extern volatile __bit TRISA4 __at(0x42C);
[; ;pic16f887.h: 4415: extern volatile __bit TRISA5 __at(0x42D);
[; ;pic16f887.h: 4418: extern volatile __bit TRISA6 __at(0x42E);
[; ;pic16f887.h: 4421: extern volatile __bit TRISA7 __at(0x42F);
[; ;pic16f887.h: 4424: extern volatile __bit TRISB0 __at(0x430);
[; ;pic16f887.h: 4427: extern volatile __bit TRISB1 __at(0x431);
[; ;pic16f887.h: 4430: extern volatile __bit TRISB2 __at(0x432);
[; ;pic16f887.h: 4433: extern volatile __bit TRISB3 __at(0x433);
[; ;pic16f887.h: 4436: extern volatile __bit TRISB4 __at(0x434);
[; ;pic16f887.h: 4439: extern volatile __bit TRISB5 __at(0x435);
[; ;pic16f887.h: 4442: extern volatile __bit TRISB6 __at(0x436);
[; ;pic16f887.h: 4445: extern volatile __bit TRISB7 __at(0x437);
[; ;pic16f887.h: 4448: extern volatile __bit TRISC0 __at(0x438);
[; ;pic16f887.h: 4451: extern volatile __bit TRISC1 __at(0x439);
[; ;pic16f887.h: 4454: extern volatile __bit TRISC2 __at(0x43A);
[; ;pic16f887.h: 4457: extern volatile __bit TRISC3 __at(0x43B);
[; ;pic16f887.h: 4460: extern volatile __bit TRISC4 __at(0x43C);
[; ;pic16f887.h: 4463: extern volatile __bit TRISC5 __at(0x43D);
[; ;pic16f887.h: 4466: extern volatile __bit TRISC6 __at(0x43E);
[; ;pic16f887.h: 4469: extern volatile __bit TRISC7 __at(0x43F);
[; ;pic16f887.h: 4472: extern volatile __bit TRISD0 __at(0x440);
[; ;pic16f887.h: 4475: extern volatile __bit TRISD1 __at(0x441);
[; ;pic16f887.h: 4478: extern volatile __bit TRISD2 __at(0x442);
[; ;pic16f887.h: 4481: extern volatile __bit TRISD3 __at(0x443);
[; ;pic16f887.h: 4484: extern volatile __bit TRISD4 __at(0x444);
[; ;pic16f887.h: 4487: extern volatile __bit TRISD5 __at(0x445);
[; ;pic16f887.h: 4490: extern volatile __bit TRISD6 __at(0x446);
[; ;pic16f887.h: 4493: extern volatile __bit TRISD7 __at(0x447);
[; ;pic16f887.h: 4496: extern volatile __bit TRISE0 __at(0x448);
[; ;pic16f887.h: 4499: extern volatile __bit TRISE1 __at(0x449);
[; ;pic16f887.h: 4502: extern volatile __bit TRISE2 __at(0x44A);
[; ;pic16f887.h: 4505: extern volatile __bit TRISE3 __at(0x44B);
[; ;pic16f887.h: 4508: extern volatile __bit TRMT __at(0x4C1);
[; ;pic16f887.h: 4511: extern volatile __bit TUN0 __at(0x480);
[; ;pic16f887.h: 4514: extern volatile __bit TUN1 __at(0x481);
[; ;pic16f887.h: 4517: extern volatile __bit TUN2 __at(0x482);
[; ;pic16f887.h: 4520: extern volatile __bit TUN3 __at(0x483);
[; ;pic16f887.h: 4523: extern volatile __bit TUN4 __at(0x484);
[; ;pic16f887.h: 4526: extern volatile __bit TX8_9 __at(0x4C6);
[; ;pic16f887.h: 4529: extern volatile __bit TX9 __at(0x4C6);
[; ;pic16f887.h: 4532: extern volatile __bit TX9D __at(0x4C0);
[; ;pic16f887.h: 4535: extern volatile __bit TXD8 __at(0x4C0);
[; ;pic16f887.h: 4538: extern volatile __bit TXEN __at(0x4C5);
[; ;pic16f887.h: 4541: extern volatile __bit TXIE __at(0x464);
[; ;pic16f887.h: 4544: extern volatile __bit TXIF __at(0x64);
[; ;pic16f887.h: 4547: extern volatile __bit UA __at(0x4A1);
[; ;pic16f887.h: 4550: extern volatile __bit ULPWUE __at(0x475);
[; ;pic16f887.h: 4553: extern volatile __bit ULPWUIE __at(0x46A);
[; ;pic16f887.h: 4556: extern volatile __bit ULPWUIF __at(0x6A);
[; ;pic16f887.h: 4559: extern volatile __bit VCFG0 __at(0x4FC);
[; ;pic16f887.h: 4562: extern volatile __bit VCFG1 __at(0x4FD);
[; ;pic16f887.h: 4565: extern volatile __bit VR0 __at(0x4B8);
[; ;pic16f887.h: 4568: extern volatile __bit VR1 __at(0x4B9);
[; ;pic16f887.h: 4571: extern volatile __bit VR2 __at(0x4BA);
[; ;pic16f887.h: 4574: extern volatile __bit VR3 __at(0x4BB);
[; ;pic16f887.h: 4577: extern volatile __bit VREN __at(0x4BF);
[; ;pic16f887.h: 4580: extern volatile __bit VROE __at(0x4BE);
[; ;pic16f887.h: 4583: extern volatile __bit VRR __at(0x4BD);
[; ;pic16f887.h: 4586: extern volatile __bit VRSS __at(0x4BC);
[; ;pic16f887.h: 4589: extern volatile __bit WCOL __at(0xA7);
[; ;pic16f887.h: 4592: extern volatile __bit WDTPS0 __at(0x829);
[; ;pic16f887.h: 4595: extern volatile __bit WDTPS1 __at(0x82A);
[; ;pic16f887.h: 4598: extern volatile __bit WDTPS2 __at(0x82B);
[; ;pic16f887.h: 4601: extern volatile __bit WDTPS3 __at(0x82C);
[; ;pic16f887.h: 4604: extern volatile __bit WPUB0 __at(0x4A8);
[; ;pic16f887.h: 4607: extern volatile __bit WPUB1 __at(0x4A9);
[; ;pic16f887.h: 4610: extern volatile __bit WPUB2 __at(0x4AA);
[; ;pic16f887.h: 4613: extern volatile __bit WPUB3 __at(0x4AB);
[; ;pic16f887.h: 4616: extern volatile __bit WPUB4 __at(0x4AC);
[; ;pic16f887.h: 4619: extern volatile __bit WPUB5 __at(0x4AD);
[; ;pic16f887.h: 4622: extern volatile __bit WPUB6 __at(0x4AE);
[; ;pic16f887.h: 4625: extern volatile __bit WPUB7 __at(0x4AF);
[; ;pic16f887.h: 4628: extern volatile __bit WR __at(0xC61);
[; ;pic16f887.h: 4631: extern volatile __bit WREN __at(0xC62);
[; ;pic16f887.h: 4634: extern volatile __bit WRERR __at(0xC63);
[; ;pic16f887.h: 4637: extern volatile __bit WUE __at(0xC39);
[; ;pic16f887.h: 4640: extern volatile __bit ZERO __at(0x1A);
[; ;pic16f887.h: 4643: extern volatile __bit nA __at(0x4A5);
[; ;pic16f887.h: 4646: extern volatile __bit nADDRESS __at(0x4A5);
[; ;pic16f887.h: 4649: extern volatile __bit nBO __at(0x470);
[; ;pic16f887.h: 4652: extern volatile __bit nBOR __at(0x470);
[; ;pic16f887.h: 4655: extern volatile __bit nDONE __at(0xF9);
[; ;pic16f887.h: 4658: extern volatile __bit nPD __at(0x1B);
[; ;pic16f887.h: 4661: extern volatile __bit nPOR __at(0x471);
[; ;pic16f887.h: 4664: extern volatile __bit nRBPU __at(0x40F);
[; ;pic16f887.h: 4667: extern volatile __bit nRC8 __at(0xC6);
[; ;pic16f887.h: 4670: extern volatile __bit nT1SYNC __at(0x82);
[; ;pic16f887.h: 4673: extern volatile __bit nTO __at(0x1C);
[; ;pic16f887.h: 4676: extern volatile __bit nTX8 __at(0x4C6);
[; ;pic16f887.h: 4679: extern volatile __bit nW __at(0x4A2);
[; ;pic16f887.h: 4682: extern volatile __bit nWRITE __at(0x4A2);
[; ;pic.h: 31: extern void __nop(void);
[; ;pic.h: 78: __attribute__((__unsupported__("The " "FLASH_READ" " macro function is no longer supported. Please use the MPLAB X MCC."))) unsigned char __flash_read(unsigned short addr);
[; ;pic.h: 80: __attribute__((__unsupported__("The " "FLASH_WRITE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_write(unsigned short addr, unsigned short data);
[; ;pic.h: 82: __attribute__((__unsupported__("The " "FLASH_ERASE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;pic.h: 92: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 94: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 137: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 138: extern __bank0 __bit __powerdown;
[; ;pic.h: 139: extern __bank0 __bit __timeout;
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;bsmp.h: 23: struct bsmp_version
[; ;bsmp.h: 24: {
[; ;bsmp.h: 25: uint8_t major;
[; ;bsmp.h: 26: uint8_t minor;
[; ;bsmp.h: 27: uint8_t revision;
[; ;bsmp.h: 28: char str[20];
[; ;bsmp.h: 29: };
[; ;bsmp.h: 33: enum group_id
[; ;bsmp.h: 34: {
[; ;bsmp.h: 35: GROUP_ALL_ID,
[; ;bsmp.h: 36: GROUP_READ_ID,
[; ;bsmp.h: 37: GROUP_WRITE_ID,
[; ;bsmp.h: 39: GROUP_STANDARD_COUNT,
[; ;bsmp.h: 40: };
[; ;bsmp.h: 44: enum bsmp_bin_op
[; ;bsmp.h: 45: {
[; ;bsmp.h: 46: BIN_OP_AND,
[; ;bsmp.h: 47: BIN_OP_OR,
[; ;bsmp.h: 48: BIN_OP_XOR,
[; ;bsmp.h: 49: BIN_OP_SET,
[; ;bsmp.h: 50: BIN_OP_CLEAR,
[; ;bsmp.h: 51: BIN_OP_TOGGLE,
[; ;bsmp.h: 53: BIN_OP_COUNT,
[; ;bsmp.h: 54: };
[; ;bsmp.h: 56: typedef void (*bin_op_function) (uint8_t *data, uint8_t *mask, uint8_t size);
[; ;bsmp.h: 57: extern bin_op_function bin_op[256];
[; ;bsmp.h: 61: enum bsmp_err
[; ;bsmp.h: 62: {
[; ;bsmp.h: 63: BSMP_SUCCESS,
[; ;bsmp.h: 64: BSMP_ERR_PARAM_INVALID,
[; ;bsmp.h: 65: BSMP_ERR_PARAM_OUT_OF_RANGE,
[; ;bsmp.h: 67: BSMP_ERR_OUT_OF_MEMORY,
[; ;bsmp.h: 68: BSMP_ERR_DUPLICATE,
[; ;bsmp.h: 70: BSMP_ERR_COMM,
[; ;bsmp.h: 72: BSMP_ERR_NOT_INITIALIZED,
[; ;bsmp.h: 73: BSMP_ERR_MAX
[; ;bsmp.h: 74: };
[; ;bsmp.h: 95: struct bsmp_var_info
[; ;bsmp.h: 96: {
[; ;bsmp.h: 97: uint8_t id;
[; ;bsmp.h: 98: bool writable;
[; ;bsmp.h: 99: uint8_t size;
[; ;bsmp.h: 100: };
[; ;bsmp.h: 102: struct bsmp_var
[; ;bsmp.h: 103: {
[; ;bsmp.h: 104: struct bsmp_var_info info;
[; ;bsmp.h: 105: bool (*value_ok) (struct bsmp_var *, uint8_t *);
[; ;bsmp.h: 106: uint8_t *data;
[; ;bsmp.h: 107: void *user;
[; ;bsmp.h: 109: };
[; ;bsmp.h: 111: struct bsmp_var_info_list
[; ;bsmp.h: 112: {
[; ;bsmp.h: 113: uint32_t count;
[; ;bsmp.h: 114: struct bsmp_var_info list[128];
[; ;bsmp.h: 115: };
[; ;bsmp.h: 117: struct bsmp_var_info_ptr_list
[; ;bsmp.h: 118: {
[; ;bsmp.h: 119: uint32_t count;
[; ;bsmp.h: 120: struct bsmp_var_info *list[128];
[; ;bsmp.h: 121: };
[; ;bsmp.h: 123: struct bsmp_var_ptr_list
[; ;bsmp.h: 124: {
[; ;bsmp.h: 125: uint32_t count;
[; ;bsmp.h: 126: struct bsmp_var *list[128];
[; ;bsmp.h: 127: };
[; ;bsmp.h: 131: struct bsmp_group
[; ;bsmp.h: 132: {
[; ;bsmp.h: 133: uint8_t id;
[; ;bsmp.h: 134: bool writable;
[; ;bsmp.h: 135: uint16_t size;
[; ;bsmp.h: 138: struct bsmp_var_info_ptr_list vars;
[; ;bsmp.h: 139: };
[; ;bsmp.h: 141: struct bsmp_group_list
[; ;bsmp.h: 142: {
[; ;bsmp.h: 143: uint32_t count;
[; ;bsmp.h: 144: struct bsmp_group list[8];
[; ;bsmp.h: 145: };
[; ;bsmp.h: 149: struct bsmp_curve_info
[; ;bsmp.h: 150: {
[; ;bsmp.h: 151: uint8_t id;
[; ;bsmp.h: 152: bool writable;
[; ;bsmp.h: 153: uint32_t nblocks;
[; ;bsmp.h: 154: uint16_t block_size;
[; ;bsmp.h: 155: uint8_t checksum[16];
[; ;bsmp.h: 156: };
[; ;bsmp.h: 158: struct bsmp_curve;
[; ;bsmp.h: 160: typedef void (*bsmp_curve_read_t) (struct bsmp_curve *curve, uint16_t block,
[; ;bsmp.h: 161: uint8_t *data, uint16_t *len);
[; ;bsmp.h: 162: typedef void (*bsmp_curve_write_t) (struct bsmp_curve *curve, uint16_t block,
[; ;bsmp.h: 163: uint8_t *data, uint16_t len);
[; ;bsmp.h: 164: struct bsmp_curve
[; ;bsmp.h: 165: {
[; ;bsmp.h: 167: struct bsmp_curve_info info;
[; ;bsmp.h: 170: void (*read_block)(struct bsmp_curve *curve, uint16_t block, uint8_t *data,
[; ;bsmp.h: 171: uint16_t *len);
[; ;bsmp.h: 173: void (*write_block)(struct bsmp_curve *curve, uint16_t block, uint8_t *data,
[; ;bsmp.h: 174: uint16_t len);
[; ;bsmp.h: 178: void *user;
[; ;bsmp.h: 179: };
[; ;bsmp.h: 181: struct bsmp_curve_info_list
[; ;bsmp.h: 182: {
[; ;bsmp.h: 183: uint32_t count;
[; ;bsmp.h: 184: struct bsmp_curve_info list[128];
[; ;bsmp.h: 185: };
[; ;bsmp.h: 187: struct bsmp_curve_ptr_list
[; ;bsmp.h: 188: {
[; ;bsmp.h: 189: uint32_t count;
[; ;bsmp.h: 190: struct bsmp_curve *list[128];
[; ;bsmp.h: 191: };
[; ;bsmp.h: 195: struct bsmp_func_info
[; ;bsmp.h: 196: {
[; ;bsmp.h: 197: uint8_t id;
[; ;bsmp.h: 198: uint8_t input_size;
[; ;bsmp.h: 199: uint8_t output_size;
[; ;bsmp.h: 200: };
[; ;bsmp.h: 202: typedef uint8_t (*bsmp_func_t) (uint8_t *input, uint8_t *output);
[; ;bsmp.h: 203: struct bsmp_func
[; ;bsmp.h: 204: {
[; ;bsmp.h: 205: struct bsmp_func_info info;
[; ;bsmp.h: 206: bsmp_func_t func_p;
[; ;bsmp.h: 207: };
[; ;bsmp.h: 210: struct bsmp_func_info_list
[; ;bsmp.h: 211: {
[; ;bsmp.h: 212: uint32_t count;
[; ;bsmp.h: 213: struct bsmp_func_info list[128];
[; ;bsmp.h: 214: };
[; ;bsmp.h: 216: struct bsmp_func_ptr_list
[; ;bsmp.h: 217: {
[; ;bsmp.h: 218: uint32_t count;
[; ;bsmp.h: 219: struct bsmp_func *list[128];
[; ;bsmp.h: 220: };
[; ;bsmp.h: 229: const char * bsmp_error_str (enum bsmp_err error);
[; ;server.h: 9: typedef struct bsmp_server bsmp_server_t;
[; ;server.h: 13: enum bsmp_operation
[; ;server.h: 14: {
[; ;server.h: 15: BSMP_OP_READ,
[; ;server.h: 16: BSMP_OP_WRITE,
[; ;server.h: 17: };
[; ;server.h: 19: typedef void (*bsmp_hook_t) (enum bsmp_operation op, struct bsmp_var **list);
[; ;server.h: 24: struct bsmp_raw_packet
[; ;server.h: 25: {
[; ;server.h: 26: uint8_t *data;
[; ;server.h: 27: uint16_t len;
[; ;server.h: 28: };
[; ;server.h: 38: bsmp_server_t *bsmp_server_new (void);
[; ;server.h: 50: enum bsmp_err bsmp_server_destroy (bsmp_server_t *server);
[; ;server.h: 72: enum bsmp_err bsmp_register_variable (bsmp_server_t *server,
[; ;server.h: 73: struct bsmp_var *var);
[; ;server.h: 103: enum bsmp_err bsmp_register_curve (bsmp_server_t *server,
[; ;server.h: 104: struct bsmp_curve *curve);
[; ;server.h: 130: enum bsmp_err bsmp_register_function (bsmp_server_t *server,
[; ;server.h: 131: struct bsmp_func *func);
[; ;server.h: 159: enum bsmp_err bsmp_register_hook (bsmp_server_t *server, bsmp_hook_t hook);
[; ;server.h: 174: enum bsmp_err bsmp_process_packet (bsmp_server_t *server,
[; ;server.h: 175: struct bsmp_raw_packet *request,
[; ;server.h: 176: struct bsmp_raw_packet *response);
"23 main_sync.c
[p x FOSC=HS ]
"24
[p x WDTE=OFF ]
"25
[p x PWRTE=OFF ]
"27
[p x CP=OFF ]
"28
[p x CPD=OFF ]
"29
[p x BOREN=OFF ]
"30
[p x IESO=OFF ]
"31
[p x FCMEN=OFF ]
"32
[p x LVP=OFF ]
"35
[p x BOR4V=BOR40V ]
"36
[p x WRT=OFF ]
[; ;main_sync.c: 64: void __interrupt () interruption(void);
[; ;main_sync.c: 66: void main (void);
[; ;main_sync.c: 67: void inicializar (void);
[; ;main_sync.c: 68: void compara (void);
[; ;main_sync.c: 69: int protocolo (void);
[; ;main_sync.c: 70: uint16_t ad (void);
[; ;main_sync.c: 71: void enviar (char *envia, int n);
[; ;main_sync.c: 72: uint8_t getEEPROM (uint8_t c);
[; ;main_sync.c: 73: void setEEPROM (uint8_t addr, uint8_t valor);
[; ;main_sync.c: 74: void initLT (void);
[; ;main_sync.c: 75: void escreveLT (uint8_t regAddr, uint8_t data);
[; ;main_sync.c: 76: int SelectChannel(int ch);
"78
[v _idPlaca `uc ~T0 @X0 1 e ]
[; ;main_sync.c: 78: char idPlaca;
"79
[v _cSum `uc ~T0 @X0 1 e ]
[i _cSum
-> -> 0 `i `uc
]
[; ;main_sync.c: 79: char cSum = 0;
"80
[v _fator `i ~T0 @X0 1 e ]
[i _fator
-> 985 `i
]
[; ;main_sync.c: 80: int fator = 985;
"81
[v _recebidos `uc ~T0 @X0 1 e ]
[i _recebidos
-> -> 0 `i `uc
]
[; ;main_sync.c: 81: char recebidos = 0;
"82
[v _serial `uc ~T0 @X0 -> 40 `i e ]
[i _serial
:U ..
-> -> 0 `i `uc
..
]
[; ;main_sync.c: 82: char serial[40] = {0};
"83
[v _valorAD `i ~T0 @X0 -> 8 `i e ]
[; ;main_sync.c: 83: int valorAD[8];
"84
[v _media2 `i ~T0 @X0 -> 2 `i e ]
[i _media2
:U ..
-> 0 `i
..
]
[; ;main_sync.c: 84: int media2[2] = {0};
"85
[v _temp `f ~T0 @X0 -> 8 `i e ]
[; ;main_sync.c: 85: float temp[8];
"86
[v _erros `i ~T0 @X0 -> 8 `i e ]
[i _erros
:U ..
-> 0 `i
..
]
[; ;main_sync.c: 86: int erros[8] = {0};
"87
[v _k1 `uc ~T0 @X0 1 e ]
[v _k2 `uc ~T0 @X0 1 e ]
[v _b1 `uc ~T0 @X0 1 e ]
[v _b2 `uc ~T0 @X0 1 e ]
[v _fator1 `uc ~T0 @X0 1 e ]
[v _fator2 `uc ~T0 @X0 1 e ]
[; ;main_sync.c: 87: uint8_t k1, k2, b1, b2, fator1, fator2;
"88
[v _k `f ~T0 @X0 1 e ]
[v _b `f ~T0 @X0 1 e ]
[; ;main_sync.c: 88: float k, b;
"89
[v _lerADpuro `uc ~T0 @X0 1 e ]
[i _lerADpuro
-> -> 0 `i `uc
]
[; ;main_sync.c: 89: uint8_t lerADpuro = 0;
"90
[v _modoLeitura `uc ~T0 @X0 1 e ]
[i _modoLeitura
-> -> 8 `i `uc
]
[; ;main_sync.c: 90: uint8_t modoLeitura = 8;
[v $root$_main `(v ~T0 @X0 0 e ]
"94
[v _main `(v ~T0 @X0 1 ef ]
"95
{
[; ;main_sync.c: 94: void main()
[; ;main_sync.c: 95: {
[e :U _main ]
[f ]
"96
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
[v _p `i ~T0 @X0 1 a ]
[v _channel `i ~T0 @X0 1 a ]
[; ;main_sync.c: 96: int i, j, p, channel = 8;
[e = _channel -> 8 `i ]
"97
[v _valorNovo `i ~T0 @X0 1 a ]
[v _valorAntigo `i ~T0 @X0 1 a ]
"98
[v _sum `ul ~T0 @X0 1 a ]
[; ;main_sync.c: 97: int valorNovo, valorAntigo;
[; ;main_sync.c: 98: uint32_t sum = 0;
[e = _sum -> -> -> 0 `i `l `ul ]
"99
[v _t `f ~T0 @X0 1 a ]
[v _ti `f ~T0 @X0 1 a ]
[v _t2 `f ~T0 @X0 1 a ]
"100
[v _difTemp `f ~T0 @X0 1 a ]
[; ;main_sync.c: 99: float t, ti, t2;
[; ;main_sync.c: 100: float difTemp = 1;
[e = _difTemp -> -> 1 `i `f ]
[; ;main_sync.c: 102: inicializar();
"102
[e ( _inicializar ..  ]
[; ;main_sync.c: 103: compara();
"103
[e ( _compara ..  ]
[; ;main_sync.c: 105: k1 = getEEPROM(0);
"105
[e = _k1 ( _getEEPROM (1 -> -> 0 `i `uc ]
[; ;main_sync.c: 106: k2 = getEEPROM(1);
"106
[e = _k2 ( _getEEPROM (1 -> -> 1 `i `uc ]
[; ;main_sync.c: 107: b1 = getEEPROM(2);
"107
[e = _b1 ( _getEEPROM (1 -> -> 2 `i `uc ]
[; ;main_sync.c: 108: b2 = getEEPROM(3);
"108
[e = _b2 ( _getEEPROM (1 -> -> 3 `i `uc ]
[; ;main_sync.c: 109: fator1 = getEEPROM(4);
"109
[e = _fator1 ( _getEEPROM (1 -> -> 4 `i `uc ]
[; ;main_sync.c: 110: fator2 = getEEPROM(5);
"110
[e = _fator2 ( _getEEPROM (1 -> -> 5 `i `uc ]
[; ;main_sync.c: 112: k = ((k1 << 8) + k2)/100.0;
"112
[e = _k -> / -> + << -> _k1 `i -> 8 `i -> _k2 `i `d .100.0 `f ]
[; ;main_sync.c: 113: b = ((b1 << 8) + b2)/100.0;
"113
[e = _b -> / -> + << -> _b1 `i -> 8 `i -> _b2 `i `d .100.0 `f ]
[; ;main_sync.c: 114: fator = (fator1 << 8) + fator2;
"114
[e = _fator + << -> _fator1 `i -> 8 `i -> _fator2 `i ]
[; ;main_sync.c: 116: idPlaca = (~PORTA) & 0x1F;
"116
[e = _idPlaca -> & ~ -> _PORTA `i -> 31 `i `uc ]
[; ;main_sync.c: 117: for (i = 0; i < 8; i++)
"117
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 162  ]
[e $U 163  ]
"118
[e :U 162 ]
[; ;main_sync.c: 118: {
{
[; ;main_sync.c: 119: PORTB = SelectChannel(i);
"119
[e = _PORTB -> ( _SelectChannel (1 _i `uc ]
[; ;main_sync.c: 121: for(p = 0; p < 10000; ++p);
"121
{
[e = _p -> 0 `i ]
[e $ < _p -> 10000 `i 165  ]
[e $U 166  ]
[e :U 165 ]
[e =+ _p -> 1 `i ]
[e $ < _p -> 10000 `i 165  ]
[e :U 166 ]
}
[; ;main_sync.c: 123: valorAD[i] = ad();
"123
[e = *U + &U _valorAD * -> -> _i `ui `ux -> -> # *U &U _valorAD `ui `ux -> ( _ad ..  `i ]
[; ;main_sync.c: 124: PORTB = SelectChannel(i) + 1;
"124
[e = _PORTB -> + ( _SelectChannel (1 _i -> 1 `i `uc ]
[; ;main_sync.c: 125: temp[i] = ((float)(valorAD[i]) / k) - b;
"125
[e = *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux - / -> *U + &U _valorAD * -> -> _i `ui `ux -> -> # *U &U _valorAD `ui `ux `f _k _b ]
"126
}
"117
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 162  ]
[e :U 163 ]
"126
}
[; ;main_sync.c: 126: }
[; ;main_sync.c: 128: while(1){
"128
[e :U 169 ]
{
[; ;main_sync.c: 131: if(modoLeitura == 8){
"131
[e $ ! == -> _modoLeitura `i -> 8 `i 171  ]
{
[; ;main_sync.c: 132: for (i = 0; i <= 7; ++i){
"132
{
[e = _i -> 0 `i ]
[e $ <= _i -> 7 `i 172  ]
[e $U 173  ]
[e :U 172 ]
{
[; ;main_sync.c: 135: PORTB = SelectChannel(i);
"135
[e = _PORTB -> ( _SelectChannel (1 _i `uc ]
[; ;main_sync.c: 136: for(p = 1; p < 6980; p++);
"136
{
[e = _p -> 1 `i ]
[e $ < _p -> 6980 `i 175  ]
[e $U 176  ]
[e :U 175 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 6980 `i 175  ]
[e :U 176 ]
}
[; ;main_sync.c: 137: j = ad();
"137
[e = _j -> ( _ad ..  `i ]
[; ;main_sync.c: 139: PORTB = SelectChannel(i) + 8;
"139
[e = _PORTB -> + ( _SelectChannel (1 _i -> 8 `i `uc ]
[; ;main_sync.c: 140: for(p = 1; p < 6980; p++);
"140
{
[e = _p -> 1 `i ]
[e $ < _p -> 6980 `i 178  ]
[e $U 179  ]
[e :U 178 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 6980 `i 178  ]
[e :U 179 ]
}
[; ;main_sync.c: 142: valorAD[i] = j - ad();
"142
[e = *U + &U _valorAD * -> -> _i `ui `ux -> -> # *U &U _valorAD `ui `ux -> - -> _j `ui ( _ad ..  `i ]
[; ;main_sync.c: 144: t = ((float)(valorAD[i])/ k) - b;
"144
[e = _t - / -> *U + &U _valorAD * -> -> _i `ui `ux -> -> # *U &U _valorAD `ui `ux `f _k _b ]
[; ;main_sync.c: 148: if((fabs(temp[i] - t) <= difTemp) || fator == 0){
"148
[e $ ! || <= ( _fabs (1 -> - *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux _t `d -> _difTemp `d == _fator -> 0 `i 181  ]
{
[; ;main_sync.c: 149: temp[i] = ((temp[i] * (float)(fator)) + (t * (1000 - (float)(fator))))/1000.0;
"149
[e = *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux -> / -> + * *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux -> _fator `f * _t - -> -> 1000 `i `f -> _fator `f `d .1000.0 `f ]
[; ;main_sync.c: 150: erros[i] = 0;
"150
[e = *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 0 `i ]
"151
}
[; ;main_sync.c: 151: }
[e $U 182  ]
"155
[e :U 181 ]
[; ;main_sync.c: 155: else {
{
[; ;main_sync.c: 156: erros[i]++;
"156
[e ++ *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 1 `i ]
[; ;main_sync.c: 157: while(erros[i] < 4 && erros[i] != 0){
"157
[e $U 183  ]
[e :U 184 ]
{
[; ;main_sync.c: 159: PORTB = SelectChannel(i);
"159
[e = _PORTB -> ( _SelectChannel (1 _i `uc ]
[; ;main_sync.c: 160: for(p = 1; p < 6980; p++);
"160
{
[e = _p -> 1 `i ]
[e $ < _p -> 6980 `i 186  ]
[e $U 187  ]
[e :U 186 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 6980 `i 186  ]
[e :U 187 ]
}
[; ;main_sync.c: 161: j = ad();
"161
[e = _j -> ( _ad ..  `i ]
[; ;main_sync.c: 163: PORTB = SelectChannel(i) + 8;
"163
[e = _PORTB -> + ( _SelectChannel (1 _i -> 8 `i `uc ]
[; ;main_sync.c: 164: for(p = 1; p < 6980; p++);
"164
{
[e = _p -> 1 `i ]
[e $ < _p -> 6980 `i 189  ]
[e $U 190  ]
[e :U 189 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 6980 `i 189  ]
[e :U 190 ]
}
[; ;main_sync.c: 165: valorAD[i] = j - ad();
"165
[e = *U + &U _valorAD * -> -> _i `ui `ux -> -> # *U &U _valorAD `ui `ux -> - -> _j `ui ( _ad ..  `i ]
[; ;main_sync.c: 167: t = ((float)(valorAD[i])/ k) - b;
"167
[e = _t - / -> *U + &U _valorAD * -> -> _i `ui `ux -> -> # *U &U _valorAD `ui `ux `f _k _b ]
[; ;main_sync.c: 169: if(fabs(temp[i] - t) <= difTemp){
"169
[e $ ! <= ( _fabs (1 -> - *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux _t `d -> _difTemp `d 192  ]
{
[; ;main_sync.c: 170: temp[i] = ((temp[i] * (float)(fator)) + (t * (1000 - (float)(fator))))/1000.0;
"170
[e = *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux -> / -> + * *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux -> _fator `f * _t - -> -> 1000 `i `f -> _fator `f `d .1000.0 `f ]
[; ;main_sync.c: 171: erros[i] = 0;
"171
[e = *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 0 `i ]
"172
}
[; ;main_sync.c: 172: }
[e $U 193  ]
"173
[e :U 192 ]
[; ;main_sync.c: 173: else{
{
[; ;main_sync.c: 174: erros[i]++;
"174
[e ++ *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 1 `i ]
[; ;main_sync.c: 175: if(erros[i] == 4){
"175
[e $ ! == *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 4 `i 194  ]
{
[; ;main_sync.c: 176: temp[i] = t;
"176
[e = *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux _t ]
[; ;main_sync.c: 177: erros[i] = 0;
"177
[e = *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 0 `i ]
"178
}
[e :U 194 ]
"179
}
[e :U 193 ]
"180
}
[e :U 183 ]
"157
[e $ && < *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 4 `i != *U + &U _erros * -> -> _i `ui `ux -> -> # *U &U _erros `ui `ux -> 0 `i 184  ]
[e :U 185 ]
"181
}
[e :U 182 ]
"182
}
"132
[e =+ _i -> 1 `i ]
[e $ <= _i -> 7 `i 172  ]
[e :U 173 ]
"182
}
"183
}
[; ;main_sync.c: 178: }
[; ;main_sync.c: 179: }
[; ;main_sync.c: 180: }
[; ;main_sync.c: 181: }
[; ;main_sync.c: 182: }
[; ;main_sync.c: 183: }
[e $U 195  ]
"186
[e :U 171 ]
[; ;main_sync.c: 186: else{
{
[; ;main_sync.c: 187: if(channel != modoLeitura){
"187
[e $ ! != _channel -> _modoLeitura `i 196  ]
{
[; ;main_sync.c: 188: channel = modoLeitura;
"188
[e = _channel -> _modoLeitura `i ]
[; ;main_sync.c: 189: PORTB = SelectChannel(modoLeitura);
"189
[e = _PORTB -> ( _SelectChannel (1 -> _modoLeitura `i `uc ]
[; ;main_sync.c: 190: for (p = 1; p < 10000; p++);
"190
{
[e = _p -> 1 `i ]
[e $ < _p -> 10000 `i 197  ]
[e $U 198  ]
[e :U 197 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 10000 `i 197  ]
[e :U 198 ]
}
[; ;main_sync.c: 191: for (i = 0; i < 2; i++)
"191
{
[e = _i -> 0 `i ]
[e $ < _i -> 2 `i 200  ]
[e $U 201  ]
"192
[e :U 200 ]
[; ;main_sync.c: 192: media2[i] = 0;
[e = *U + &U _media2 * -> -> _i `ui `ux -> -> # *U &U _media2 `ui `ux -> 0 `i ]
"191
[e ++ _i -> 1 `i ]
[e $ < _i -> 2 `i 200  ]
[e :U 201 ]
"192
}
[; ;main_sync.c: 193: valorAD[modoLeitura] = 0;
"193
[e = *U + &U _valorAD * -> _modoLeitura `ux -> -> # *U &U _valorAD `ui `ux -> 0 `i ]
"194
}
[e :U 196 ]
[; ;main_sync.c: 194: }
[; ;main_sync.c: 199: if (lerADpuro == 1) {
"199
[e $ ! == -> _lerADpuro `i -> 1 `i 203  ]
{
[; ;main_sync.c: 200: while (1) {
"200
[e :U 205 ]
{
[; ;main_sync.c: 201: PORTB = SelectChannel(modoLeitura);
"201
[e = _PORTB -> ( _SelectChannel (1 -> _modoLeitura `i `uc ]
[; ;main_sync.c: 203: for (p = 1; p < 6980; p++);
"203
{
[e = _p -> 1 `i ]
[e $ < _p -> 6980 `i 207  ]
[e $U 208  ]
[e :U 207 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 6980 `i 207  ]
[e :U 208 ]
}
[; ;main_sync.c: 204: j = ad();
"204
[e = _j -> ( _ad ..  `i ]
[; ;main_sync.c: 206: PORTB = SelectChannel(modoLeitura) + 8;
"206
[e = _PORTB -> + ( _SelectChannel (1 -> _modoLeitura `i -> 8 `i `uc ]
[; ;main_sync.c: 207: for (p = 1; p < 6980; p++);
"207
{
[e = _p -> 1 `i ]
[e $ < _p -> 6980 `i 210  ]
[e $U 211  ]
[e :U 210 ]
[e ++ _p -> 1 `i ]
[e $ < _p -> 6980 `i 210  ]
[e :U 211 ]
}
[; ;main_sync.c: 208: valorAD[modoLeitura] = j - ad();
"208
[e = *U + &U _valorAD * -> _modoLeitura `ux -> -> # *U &U _valorAD `ui `ux -> - -> _j `ui ( _ad ..  `i ]
"209
}
[e :U 204 ]
"200
[e $U 205  ]
[e :U 206 ]
"210
}
[; ;main_sync.c: 209: }
[; ;main_sync.c: 210: }
[e $U 213  ]
"212
[e :U 203 ]
[; ;main_sync.c: 212: else{
{
[; ;main_sync.c: 213: sum = 0;
"213
[e = _sum -> -> -> 0 `i `l `ul ]
[; ;main_sync.c: 214: for(j=0; j<1; j++){
"214
{
[e = _j -> 0 `i ]
[e $ < _j -> 1 `i 214  ]
[e $U 215  ]
[e :U 214 ]
{
[; ;main_sync.c: 215: media2[j] = media2[j+1];
"215
[e = *U + &U _media2 * -> -> _j `ui `ux -> -> # *U &U _media2 `ui `ux *U + &U _media2 * -> -> + _j -> 1 `i `ui `ux -> -> # *U &U _media2 `ui `ux ]
[; ;main_sync.c: 216: sum += media2[j];
"216
[e =+ _sum -> -> *U + &U _media2 * -> -> _j `ui `ux -> -> # *U &U _media2 `ui `ux `l `ul ]
"217
}
"214
[e ++ _j -> 1 `i ]
[e $ < _j -> 1 `i 214  ]
[e :U 215 ]
"217
}
[; ;main_sync.c: 217: }
[; ;main_sync.c: 218: media2[1] = ad();
"218
[e = *U + &U _media2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _media2 `ui `ux -> ( _ad ..  `i ]
[; ;main_sync.c: 219: sum = (sum + media2[1])/2;
"219
[e = _sum / + _sum -> -> *U + &U _media2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _media2 `ui `ux `l `ul -> -> -> 2 `i `l `ul ]
[; ;main_sync.c: 220: valorAD[modoLeitura] = sum & 0xFFFF;
"220
[e = *U + &U _valorAD * -> _modoLeitura `ux -> -> # *U &U _valorAD `ui `ux -> & _sum -> -> 65535 `ui `ul `i ]
"227
}
[e :U 213 ]
"229
}
[e :U 195 ]
"230
}
[e :U 168 ]
"128
[e $U 169  ]
[e :U 170 ]
[; ;main_sync.c: 227: }
[; ;main_sync.c: 229: }
[; ;main_sync.c: 230: }
[; ;main_sync.c: 231: }
"231
[e :UE 161 ]
}
"233
[v _SelectChannel `(i ~T0 @X0 1 ef1`i ]
{
[; ;main_sync.c: 233: int SelectChannel(int ch) {
[e :U _SelectChannel ]
[v _ch `i ~T0 @X0 1 r1 ]
[f ]
[; ;main_sync.c: 234: switch (ch) {
"234
[e $U 219  ]
{
[; ;main_sync.c: 235: case 0:
"235
[e :U 220 ]
"236
[e :U 221 ]
[; ;main_sync.c: 236: case 1:
[; ;main_sync.c: 237: return ch + 6;
"237
[e ) + _ch -> 6 `i ]
[e $UE 217  ]
[; ;main_sync.c: 238: case 2:
"238
[e :U 222 ]
"239
[e :U 223 ]
[; ;main_sync.c: 239: case 3:
[; ;main_sync.c: 240: return ch - 2;
"240
[e ) - _ch -> 2 `i ]
[e $UE 217  ]
[; ;main_sync.c: 241: case 4:
"241
[e :U 224 ]
"242
[e :U 225 ]
[; ;main_sync.c: 242: case 5:
[; ;main_sync.c: 243: return ch;
"243
[e ) _ch ]
[e $UE 217  ]
[; ;main_sync.c: 244: case 6:
"244
[e :U 226 ]
"245
[e :U 227 ]
[; ;main_sync.c: 245: case 7:
[; ;main_sync.c: 246: return ch - 4;
"246
[e ) - _ch -> 4 `i ]
[e $UE 217  ]
"247
}
[; ;main_sync.c: 247: }
[e $U 218  ]
"234
[e :U 219 ]
[e [\ _ch , $ -> 0 `i 220
 , $ -> 1 `i 221
 , $ -> 2 `i 222
 , $ -> 3 `i 223
 , $ -> 4 `i 224
 , $ -> 5 `i 225
 , $ -> 6 `i 226
 , $ -> 7 `i 227
 218 ]
"247
[e :U 218 ]
[; ;main_sync.c: 248: return 0;
"248
[e ) -> 0 `i ]
[e $UE 217  ]
[; ;main_sync.c: 249: }
"249
[e :UE 217 ]
}
"251
[v _inicializar `(v ~T0 @X0 1 ef ]
{
[; ;main_sync.c: 251: void inicializar (void){
[e :U _inicializar ]
[f ]
[; ;main_sync.c: 252: ANSEL = 0;
"252
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main_sync.c: 253: ANSELH = 0;
"253
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main_sync.c: 254: TRISA = 0xFF;
"254
[e = _TRISA -> -> 255 `i `uc ]
[; ;main_sync.c: 255: TRISB = 0;
"255
[e = _TRISB -> -> 0 `i `uc ]
[; ;main_sync.c: 256: TRISC = 0xD5;
"256
[e = _TRISC -> -> 213 `i `uc ]
[; ;main_sync.c: 257: TRISD = 0;
"257
[e = _TRISD -> -> 0 `i `uc ]
[; ;main_sync.c: 258: TRISE = 0x07;
"258
[e = _TRISE -> -> 7 `i `uc ]
[; ;main_sync.c: 260: PORTA = 0xFF;
"260
[e = _PORTA -> -> 255 `i `uc ]
[; ;main_sync.c: 261: PORTB = 0;
"261
[e = _PORTB -> -> 0 `i `uc ]
[; ;main_sync.c: 262: PORTC = 0;
"262
[e = _PORTC -> -> 0 `i `uc ]
[; ;main_sync.c: 263: PORTD = 0;
"263
[e = _PORTD -> -> 0 `i `uc ]
[; ;main_sync.c: 264: PORTE = 0;
"264
[e = _PORTE -> -> 0 `i `uc ]
[; ;main_sync.c: 265: RD3 = 0;
"265
[e = _RD3 -> -> 0 `i `b ]
[; ;main_sync.c: 266: PORTDbits.RD5 = 1;
"266
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 267: PORTDbits.RD4 = 1;
"267
[e = . . _PORTDbits 0 4 -> -> 1 `i `uc ]
[; ;main_sync.c: 270: SSPCONbits.SSPEN = 0;
"270
[e = . . _SSPCONbits 0 2 -> -> 0 `i `uc ]
[; ;main_sync.c: 271: SSPSTAT = 0xC0;
"271
[e = _SSPSTAT -> -> 192 `i `uc ]
[; ;main_sync.c: 272: SSPCON = 0x20;
"272
[e = _SSPCON -> -> 32 `i `uc ]
[; ;main_sync.c: 274: SPBRGH = 0;
"274
[e = _SPBRGH -> -> 0 `i `uc ]
[; ;main_sync.c: 275: SPBRG = 8;
"275
[e = _SPBRG -> -> 8 `i `uc ]
[; ;main_sync.c: 276: BAUDCTL = 0x00;
"276
[e = _BAUDCTL -> -> 0 `i `uc ]
[; ;main_sync.c: 277: RCSTA = 0x90;
"277
[e = _RCSTA -> -> 144 `i `uc ]
[; ;main_sync.c: 278: TXSTA = 0x26;
"278
[e = _TXSTA -> -> 38 `i `uc ]
[; ;main_sync.c: 280: INTCON = 0xC0;
"280
[e = _INTCON -> -> 192 `i `uc ]
[; ;main_sync.c: 281: TMR0IE = 0;
"281
[e = _TMR0IE -> -> 0 `i `b ]
[; ;main_sync.c: 282: PEIE = 1;
"282
[e = _PEIE -> -> 1 `i `b ]
[; ;main_sync.c: 283: GIE = 1;
"283
[e = _GIE -> -> 1 `i `b ]
[; ;main_sync.c: 284: PIE1 = 0x20;
"284
[e = _PIE1 -> -> 32 `i `uc ]
[; ;main_sync.c: 285: RCIE = 1;
"285
[e = _RCIE -> -> 1 `i `b ]
[; ;main_sync.c: 286: T0CS = 0;
"286
[e = _T0CS -> -> 0 `i `b ]
[; ;main_sync.c: 287: PSA = 0;
"287
[e = _PSA -> -> 0 `i `b ]
[; ;main_sync.c: 288: PS0 = 1;
"288
[e = _PS0 -> -> 1 `i `b ]
[; ;main_sync.c: 289: PS1 = 1;
"289
[e = _PS1 -> -> 1 `i `b ]
[; ;main_sync.c: 290: PS2 = 1;
"290
[e = _PS2 -> -> 1 `i `b ]
[; ;main_sync.c: 292: for(int i = 0; i < 10000; i++);
"292
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 10000 `i 229  ]
[e $U 230  ]
[e :U 229 ]
[e ++ _i -> 1 `i ]
[e $ < _i -> 10000 `i 229  ]
[e :U 230 ]
}
[; ;main_sync.c: 294: initLT();
"294
[e ( _initLT ..  ]
[; ;main_sync.c: 295: }
"295
[e :UE 228 ]
}
"297
[v _compara `(v ~T0 @X0 1 ef ]
"298
{
[; ;main_sync.c: 297: void compara (void)
[; ;main_sync.c: 298: {
[e :U _compara ]
[f ]
"299
[v _comparar `i ~T0 @X0 1 a ]
[; ;main_sync.c: 299: int comparar;
[; ;main_sync.c: 300: for(comparar = 0; comparar<5; comparar+=2)
"300
{
[e = _comparar -> 0 `i ]
[e $ < _comparar -> 5 `i 233  ]
[e $U 234  ]
"301
[e :U 233 ]
[; ;main_sync.c: 301: {
{
[; ;main_sync.c: 302: if (((getEEPROM(comparar+100) << 8) + getEEPROM(comparar+101) == (int)(65535)) && ((getEEPROM(comparar+200) << 8) + getEEPROM(comparar+201) == (int)(65535)))
"302
[e $ ! && == + << -> ( _getEEPROM (1 -> + _comparar -> 100 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comparar -> 101 `i `uc `i -> -> 65535 `l `i == + << -> ( _getEEPROM (1 -> + _comparar -> 200 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comparar -> 201 `i `uc `i -> -> 65535 `l `i 236  ]
[; ;main_sync.c: 303: {
"303
{
[; ;main_sync.c: 304: setEEPROM(comparar+100, getEEPROM(comparar));
"304
[e ( _setEEPROM (2 , -> + _comparar -> 100 `i `uc ( _getEEPROM (1 -> _comparar `uc ]
[; ;main_sync.c: 305: setEEPROM(comparar+101, getEEPROM(comparar+1));
"305
[e ( _setEEPROM (2 , -> + _comparar -> 101 `i `uc ( _getEEPROM (1 -> + _comparar -> 1 `i `uc ]
[; ;main_sync.c: 306: setEEPROM(comparar+200, getEEPROM(comparar));
"306
[e ( _setEEPROM (2 , -> + _comparar -> 200 `i `uc ( _getEEPROM (1 -> _comparar `uc ]
[; ;main_sync.c: 307: setEEPROM(comparar+201, getEEPROM(comparar+1));
"307
[e ( _setEEPROM (2 , -> + _comparar -> 201 `i `uc ( _getEEPROM (1 -> + _comparar -> 1 `i `uc ]
"308
}
[e :U 236 ]
"309
}
"300
[e =+ _comparar -> 2 `i ]
[e $ < _comparar -> 5 `i 233  ]
[e :U 234 ]
"309
}
"310
[v _comp `i ~T0 @X0 1 a ]
[; ;main_sync.c: 308: }
[; ;main_sync.c: 309: }
[; ;main_sync.c: 310: int comp;
[; ;main_sync.c: 311: for(comp=0; comp<5; comp+=2)
"311
{
[e = _comp -> 0 `i ]
[e $ < _comp -> 5 `i 237  ]
[e $U 238  ]
"312
[e :U 237 ]
[; ;main_sync.c: 312: {
{
[; ;main_sync.c: 313: if (((getEEPROM(comp) << 8) + getEEPROM(comp+1)) == ((getEEPROM(comp+100) << 8) + getEEPROM(comp + 101)))
"313
[e $ ! == + << -> ( _getEEPROM (1 -> _comp `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 1 `i `uc `i + << -> ( _getEEPROM (1 -> + _comp -> 100 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 101 `i `uc `i 240  ]
[; ;main_sync.c: 314: {
"314
{
[; ;main_sync.c: 315: if (((getEEPROM(comp) << 8) + (getEEPROM(comp+1))) == ((getEEPROM(comp+200) << 8) + (getEEPROM(comp+201))))
"315
[e $ ! == + << -> ( _getEEPROM (1 -> _comp `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 1 `i `uc `i + << -> ( _getEEPROM (1 -> + _comp -> 200 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 201 `i `uc `i 241  ]
[; ;main_sync.c: 316: {
"316
{
[; ;main_sync.c: 317: continue;
"317
[e $U 239  ]
"318
}
[; ;main_sync.c: 318: }
[e $U 242  ]
"319
[e :U 241 ]
[; ;main_sync.c: 319: else
[; ;main_sync.c: 320: {
"320
{
[; ;main_sync.c: 321: setEEPROM((comp+200), getEEPROM(comp));
"321
[e ( _setEEPROM (2 , -> + _comp -> 200 `i `uc ( _getEEPROM (1 -> _comp `uc ]
[; ;main_sync.c: 322: setEEPROM((comp+201), getEEPROM(comp+1));
"322
[e ( _setEEPROM (2 , -> + _comp -> 201 `i `uc ( _getEEPROM (1 -> + _comp -> 1 `i `uc ]
"323
}
[e :U 242 ]
[; ;main_sync.c: 323: }
[; ;main_sync.c: 324: continue;
"324
[e $U 239  ]
"325
}
[; ;main_sync.c: 325: }
[e $U 243  ]
"326
[e :U 240 ]
[; ;main_sync.c: 326: else if (((getEEPROM(comp+100) << 8) + (getEEPROM(comp+101))) == ((getEEPROM(comp+200) << 8) + (getEEPROM(comp+201))))
[e $ ! == + << -> ( _getEEPROM (1 -> + _comp -> 100 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 101 `i `uc `i + << -> ( _getEEPROM (1 -> + _comp -> 200 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 201 `i `uc `i 244  ]
[; ;main_sync.c: 327: {
"327
{
[; ;main_sync.c: 328: setEEPROM(comp, getEEPROM(comp+100));
"328
[e ( _setEEPROM (2 , -> _comp `uc ( _getEEPROM (1 -> + _comp -> 100 `i `uc ]
[; ;main_sync.c: 329: setEEPROM((comp+1), getEEPROM(comp+101));
"329
[e ( _setEEPROM (2 , -> + _comp -> 1 `i `uc ( _getEEPROM (1 -> + _comp -> 101 `i `uc ]
[; ;main_sync.c: 330: continue;
"330
[e $U 239  ]
"331
}
[; ;main_sync.c: 331: }
[e $U 245  ]
"332
[e :U 244 ]
[; ;main_sync.c: 332: else if (((getEEPROM(comp) << 8) + (getEEPROM(comp+1))) == ((getEEPROM(comp+200) << 8) + (getEEPROM(comp+201))))
[e $ ! == + << -> ( _getEEPROM (1 -> _comp `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 1 `i `uc `i + << -> ( _getEEPROM (1 -> + _comp -> 200 `i `uc `i -> 8 `i -> ( _getEEPROM (1 -> + _comp -> 201 `i `uc `i 246  ]
[; ;main_sync.c: 333: {
"333
{
[; ;main_sync.c: 334: setEEPROM(comp+100, getEEPROM(comp));
"334
[e ( _setEEPROM (2 , -> + _comp -> 100 `i `uc ( _getEEPROM (1 -> _comp `uc ]
[; ;main_sync.c: 335: setEEPROM(comp+101, getEEPROM(comp+1));
"335
[e ( _setEEPROM (2 , -> + _comp -> 101 `i `uc ( _getEEPROM (1 -> + _comp -> 1 `i `uc ]
[; ;main_sync.c: 336: continue;
"336
[e $U 239  ]
"337
}
[e :U 246 ]
"338
[e :U 245 ]
[e :U 243 ]
}
"311
[e :U 239 ]
[e =+ _comp -> 2 `i ]
[e $ < _comp -> 5 `i 237  ]
[e :U 238 ]
"338
}
[; ;main_sync.c: 337: }
[; ;main_sync.c: 338: }
[; ;main_sync.c: 339: }
"339
[e :UE 232 ]
}
[; ;main_sync.c: 342: enum bsmp_comando
[; ;main_sync.c: 343: {
[; ;main_sync.c: 345: CMD_QUERY_VERSION = 0x00,
[; ;main_sync.c: 346: CMD_VERSION,
[; ;main_sync.c: 347: CMD_VAR_QUERY_LIST,
[; ;main_sync.c: 348: CMD_VAR_LIST,
[; ;main_sync.c: 349: CMD_GROUP_QUERY_LIST,
[; ;main_sync.c: 350: CMD_GROUP_LIST,
[; ;main_sync.c: 351: CMD_GROUP_QUERY,
[; ;main_sync.c: 352: CMD_GROUP,
[; ;main_sync.c: 353: CMD_CURVE_QUERY_LIST,
[; ;main_sync.c: 354: CMD_CURVE_LIST,
[; ;main_sync.c: 355: CMD_CURVE_QUERY_CSUM,
[; ;main_sync.c: 356: CMD_CURVE_CSUM,
[; ;main_sync.c: 357: CMD_FUNC_QUERY_LIST,
[; ;main_sync.c: 358: CMD_FUNC_LIST,
[; ;main_sync.c: 361: CMD_VAR_READ = 0x10,
[; ;main_sync.c: 362: CMD_VAR_VALUE,
[; ;main_sync.c: 363: CMD_GROUP_READ,
[; ;main_sync.c: 364: CMD_GROUP_VALUES,
[; ;main_sync.c: 367: CMD_VAR_WRITE = 0x20,
[; ;main_sync.c: 368: CMD_GROUP_WRITE = 0x22,
[; ;main_sync.c: 369: CMD_VAR_BIN_OP = 0x24,
[; ;main_sync.c: 370: CMD_GROUP_BIN_OP = 0x26,
[; ;main_sync.c: 371: CMD_VAR_WRITE_READ = 0x28,
[; ;main_sync.c: 374: CMD_GROUP_CREATE = 0x30,
[; ;main_sync.c: 375: CMD_GROUP_REMOVE_ALL = 0x32,
[; ;main_sync.c: 378: CMD_CURVE_BLOCK_REQUEST = 0x40,
[; ;main_sync.c: 379: CMD_CURVE_BLOCK,
[; ;main_sync.c: 380: CMD_CURVE_RECALC_CSUM,
[; ;main_sync.c: 383: CMD_FUNC_EXECUTE = 0x50,
[; ;main_sync.c: 384: CMD_FUNC_RETURN,
[; ;main_sync.c: 385: CMD_FUNC_ERROR = 0x53,
[; ;main_sync.c: 388: CMD_OK = 0xE0,
[; ;main_sync.c: 389: CMD_ERR_MALFORMED_MESSAGE,
[; ;main_sync.c: 390: CMD_ERR_OP_NOT_SUPPORTED,
[; ;main_sync.c: 391: CMD_ERR_INVALID_ID,
[; ;main_sync.c: 392: CMD_ERR_INVALID_VALUE,
[; ;main_sync.c: 393: CMD_ERR_INVALID_PAYLOAD_SIZE,
[; ;main_sync.c: 394: CMD_ERR_READ_ONLY,
[; ;main_sync.c: 395: CMD_ERR_INSUFFICIENT_MEMORY,
[; ;main_sync.c: 397: CMD_MAX
[; ;main_sync.c: 398: };
"400
[v _erro `(v ~T0 @X0 1 ef1`E1758 ]
"401
{
[; ;main_sync.c: 400: void erro (enum bsmp_comando e)
[; ;main_sync.c: 401: {
[e :U _erro ]
"400
[v _e `E1758 ~T0 @X0 1 r1 ]
"401
[f ]
[; ;main_sync.c: 402: serial[1] = e;
"402
[e = *U + &U _serial * -> -> -> 1 `i `ui `ux -> -> # *U &U _serial `ui `ux -> _e `uc ]
[; ;main_sync.c: 403: serial[2] = 0;
"403
[e = *U + &U _serial * -> -> -> 2 `i `ui `ux -> -> # *U &U _serial `ui `ux -> -> 0 `i `uc ]
[; ;main_sync.c: 404: serial[3] = 0;
"404
[e = *U + &U _serial * -> -> -> 3 `i `ui `ux -> -> # *U &U _serial `ui `ux -> -> 0 `i `uc ]
[; ;main_sync.c: 405: }
"405
[e :UE 247 ]
}
"407
[v _ok `(v ~T0 @X0 1 ef ]
"408
{
[; ;main_sync.c: 407: void ok (void)
[; ;main_sync.c: 408: {
[e :U _ok ]
[f ]
[; ;main_sync.c: 409: erro(CMD_OK);
"409
[e ( _erro (1 . `E1758 31 ]
[; ;main_sync.c: 410: }
"410
[e :UE 248 ]
}
[v $root$_interruption `(v ~T0 @X0 0 e ]
"412
[v _interruption `(v ~T11 @X0 1 ef ]
"413
{
[; ;main_sync.c: 412: void __interrupt () interruption (void)
[; ;main_sync.c: 413: {
[e :U _interruption ]
[f ]
"414
[v _uByte `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 414: char uByte;
[; ;main_sync.c: 415: while (RCIF) {
"415
[e $U 250  ]
[e :U 251 ]
{
[; ;main_sync.c: 416: uByte = RCREG;
"416
[e = _uByte _RCREG ]
[; ;main_sync.c: 417: serial[recebidos] = uByte;
"417
[e = *U + &U _serial * -> _recebidos `ux -> -> # *U &U _serial `ui `ux _uByte ]
[; ;main_sync.c: 418: cSum += uByte;
"418
[e =+ _cSum _uByte ]
[; ;main_sync.c: 419: recebidos++;
"419
[e ++ _recebidos -> -> 1 `i `uc ]
[; ;main_sync.c: 420: TMR0 = 0x68;
"420
[e = _TMR0 -> -> 104 `i `uc ]
[; ;main_sync.c: 421: TMR0IF = 0;
"421
[e = _TMR0IF -> -> 0 `i `b ]
[; ;main_sync.c: 422: TMR0IE = 1;
"422
[e = _TMR0IE -> -> 1 `i `b ]
"423
}
[e :U 250 ]
"415
[e $ _RCIF 251  ]
[e :U 252 ]
[; ;main_sync.c: 423: }
[; ;main_sync.c: 425: if(TMR0IF){
"425
[e $ ! _TMR0IF 253  ]
{
[; ;main_sync.c: 426: RD3 = 1;
"426
[e = _RD3 -> -> 1 `i `b ]
[; ;main_sync.c: 427: TMR0IE = 0;
"427
[e = _TMR0IE -> -> 0 `i `b ]
[; ;main_sync.c: 428: if (!cSum)
"428
[e $ ! ! != -> _cSum `i -> -> -> 0 `i `uc `i 254  ]
[; ;main_sync.c: 429: {
"429
{
[; ;main_sync.c: 430: if (serial[0] == idPlaca)
"430
[e $ ! == -> *U + &U _serial * -> -> -> 0 `i `ui `ux -> -> # *U &U _serial `ui `ux `i -> _idPlaca `i 255  ]
[; ;main_sync.c: 431: {
"431
{
[; ;main_sync.c: 432: uByte = protocolo();
"432
[e = _uByte -> ( _protocolo ..  `uc ]
[; ;main_sync.c: 433: enviar(serial,uByte);
"433
[e ( _enviar (2 , &U _serial -> _uByte `i ]
"434
}
[e :U 255 ]
"435
}
[e :U 254 ]
[; ;main_sync.c: 434: }
[; ;main_sync.c: 435: }
[; ;main_sync.c: 436: recebidos = 0;
"436
[e = _recebidos -> -> 0 `i `uc ]
[; ;main_sync.c: 437: cSum = 0;
"437
[e = _cSum -> -> 0 `i `uc ]
[; ;main_sync.c: 438: RD3 = 0;
"438
[e = _RD3 -> -> 0 `i `b ]
[; ;main_sync.c: 439: TMR0IF = 0;
"439
[e = _TMR0IF -> -> 0 `i `b ]
"440
}
[e :U 253 ]
[; ;main_sync.c: 440: }
[; ;main_sync.c: 441: PIR1 = 0;
"441
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main_sync.c: 442: }
"442
[e :UE 249 ]
}
"444
[v _le_temp `(v ~T0 @X0 1 ef2`*uc`i ]
"445
{
[; ;main_sync.c: 444: void le_temp (char *p, int temp_index)
[; ;main_sync.c: 445: {
[e :U _le_temp ]
"444
[v _p `*uc ~T0 @X0 1 r1 ]
[v _temp_index `i ~T0 @X0 1 r2 ]
"445
[f ]
"446
[v _valor `i ~T0 @X0 1 a ]
[; ;main_sync.c: 446: int valor;
[; ;main_sync.c: 448: if(lerADpuro)
"448
[e $ ! != -> _lerADpuro `i -> -> -> 0 `i `uc `i 257  ]
[; ;main_sync.c: 449: valor = valorAD[temp_index];
"449
[e = _valor *U + &U _valorAD * -> -> _temp_index `ui `ux -> -> # *U &U _valorAD `ui `ux ]
[e $U 258  ]
"450
[e :U 257 ]
[; ;main_sync.c: 450: else
[; ;main_sync.c: 451: valor = (int) (temp[temp_index]*100);
"451
[e = _valor -> * *U + &U _temp * -> -> _temp_index `ui `ux -> -> # *U &U _temp `ui `ux -> -> 100 `i `f `i ]
[e :U 258 ]
[; ;main_sync.c: 453: p[0] = valor >> 8;
"453
[e = *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x -> >> _valor -> 8 `i `uc ]
[; ;main_sync.c: 454: p[1] = valor;
"454
[e = *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x -> _valor `uc ]
[; ;main_sync.c: 455: }
"455
[e :UE 256 ]
}
"457
[v _le_alpha `(v ~T0 @X0 1 ef2`*uc`i ]
"458
{
[; ;main_sync.c: 457: void le_alpha (char *p, int n)
[; ;main_sync.c: 458: {
[e :U _le_alpha ]
"457
[v _p `*uc ~T0 @X0 1 r1 ]
[v _n `i ~T0 @X0 1 r2 ]
"458
[f ]
[; ;main_sync.c: 459: if(n == 1)
"459
[e $ ! == _n -> 1 `i 260  ]
[; ;main_sync.c: 460: {
"460
{
[; ;main_sync.c: 461: p[0] = fator1;
"461
[e = *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x _fator1 ]
[; ;main_sync.c: 462: p[1] = fator2;
"462
[e = *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x _fator2 ]
[; ;main_sync.c: 463: return;
"463
[e $UE 259  ]
"464
}
[; ;main_sync.c: 464: }
[e $U 261  ]
"465
[e :U 260 ]
[; ;main_sync.c: 465: else{
{
[; ;main_sync.c: 466: p[0] = getEEPROM(4+(n-1)*100);
"466
[e = *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x ( _getEEPROM (1 -> + -> 4 `i * - _n -> 1 `i -> 100 `i `uc ]
[; ;main_sync.c: 467: p[1] = getEEPROM(5+(n-1)*100);
"467
[e = *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x ( _getEEPROM (1 -> + -> 5 `i * - _n -> 1 `i -> 100 `i `uc ]
"468
}
[e :U 261 ]
[; ;main_sync.c: 468: }
[; ;main_sync.c: 469: }
"469
[e :UE 259 ]
}
"472
[v _escreve_alpha `(v ~T0 @X0 1 ef1`*uc ]
"473
{
[; ;main_sync.c: 472: void escreve_alpha (char *p)
[; ;main_sync.c: 473: {
[e :U _escreve_alpha ]
"472
[v _p `*uc ~T0 @X0 1 r1 ]
"473
[f ]
"474
[v _w_alpha `i ~T0 @X0 1 a ]
[; ;main_sync.c: 474: int w_alpha;
[; ;main_sync.c: 476: fator1 = p[0];
"476
[e = _fator1 *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x ]
[; ;main_sync.c: 477: fator2 = p[1];
"477
[e = _fator2 *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
"479
[v _novo_fator `i ~T0 @X0 1 a ]
[; ;main_sync.c: 479: int novo_fator = (fator1 << 8) + fator2;
[e = _novo_fator + << -> _fator1 `i -> 8 `i -> _fator2 `i ]
[; ;main_sync.c: 480: if(novo_fator < 1000)
"480
[e $ ! < _novo_fator -> 1000 `i 263  ]
[; ;main_sync.c: 481: {
"481
{
[; ;main_sync.c: 482: fator = novo_fator;
"482
[e = _fator _novo_fator ]
"483
}
[e :U 263 ]
[; ;main_sync.c: 483: }
[; ;main_sync.c: 485: for (w_alpha=0; w_alpha<3; w_alpha+=1)
"485
{
[e = _w_alpha -> 0 `i ]
[e $ < _w_alpha -> 3 `i 264  ]
[e $U 265  ]
"486
[e :U 264 ]
[; ;main_sync.c: 486: {
{
[; ;main_sync.c: 487: setEEPROM(4+(w_alpha)*100, fator1);
"487
[e ( _setEEPROM (2 , -> + -> 4 `i * _w_alpha -> 100 `i `uc _fator1 ]
[; ;main_sync.c: 488: setEEPROM(5+(w_alpha)*100, fator2);
"488
[e ( _setEEPROM (2 , -> + -> 5 `i * _w_alpha -> 100 `i `uc _fator2 ]
"489
}
"485
[e =+ _w_alpha -> 1 `i ]
[e $ < _w_alpha -> 3 `i 264  ]
[e :U 265 ]
"489
}
[; ;main_sync.c: 489: }
[; ;main_sync.c: 490: }
"490
[e :UE 262 ]
}
"492
[v _le_k `(v ~T0 @X0 1 ef2`*uc`i ]
"493
{
[; ;main_sync.c: 492: void le_k (char *p, int n)
[; ;main_sync.c: 493: {
[e :U _le_k ]
"492
[v _p `*uc ~T0 @X0 1 r1 ]
[v _n `i ~T0 @X0 1 r2 ]
"493
[f ]
[; ;main_sync.c: 494: p[0] = getEEPROM(0+(n-1)*100);
"494
[e = *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x ( _getEEPROM (1 -> + -> 0 `i * - _n -> 1 `i -> 100 `i `uc ]
[; ;main_sync.c: 495: p[1] = getEEPROM(1+(n-1)*100);
"495
[e = *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x ( _getEEPROM (1 -> + -> 1 `i * - _n -> 1 `i -> 100 `i `uc ]
[; ;main_sync.c: 496: }
"496
[e :UE 267 ]
}
"498
[v _escreve_k `(v ~T0 @X0 1 ef1`*uc ]
"499
{
[; ;main_sync.c: 498: void escreve_k (char *p)
[; ;main_sync.c: 499: {
[e :U _escreve_k ]
"498
[v _p `*uc ~T0 @X0 1 r1 ]
"499
[f ]
"500
[v _write_k `i ~T0 @X0 1 a ]
[; ;main_sync.c: 500: int write_k;
[; ;main_sync.c: 502: k1 = p[0];
"502
[e = _k1 *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x ]
[; ;main_sync.c: 503: k2 = p[1];
"503
[e = _k2 *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[; ;main_sync.c: 505: for (write_k=0; write_k<3; write_k+=1){
"505
{
[e = _write_k -> 0 `i ]
[e $ < _write_k -> 3 `i 269  ]
[e $U 270  ]
[e :U 269 ]
{
[; ;main_sync.c: 506: setEEPROM(0+(write_k)*100, k1);
"506
[e ( _setEEPROM (2 , -> + -> 0 `i * _write_k -> 100 `i `uc _k1 ]
[; ;main_sync.c: 507: setEEPROM(1+(write_k)*100, k2);
"507
[e ( _setEEPROM (2 , -> + -> 1 `i * _write_k -> 100 `i `uc _k2 ]
"508
}
"505
[e =+ _write_k -> 1 `i ]
[e $ < _write_k -> 3 `i 269  ]
[e :U 270 ]
"508
}
[; ;main_sync.c: 508: }
[; ;main_sync.c: 509: k = ((float)((k1 << 8) + k2))/100;
"509
[e = _k / -> + << -> _k1 `i -> 8 `i -> _k2 `i `f -> -> 100 `i `f ]
[; ;main_sync.c: 510: }
"510
[e :UE 268 ]
}
"512
[v _le_b `(v ~T0 @X0 1 ef2`*uc`i ]
"513
{
[; ;main_sync.c: 512: void le_b (char *p, int n)
[; ;main_sync.c: 513: {
[e :U _le_b ]
"512
[v _p `*uc ~T0 @X0 1 r1 ]
[v _n `i ~T0 @X0 1 r2 ]
"513
[f ]
[; ;main_sync.c: 514: p[0] = getEEPROM(2+(n-1)*100);
"514
[e = *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x ( _getEEPROM (1 -> + -> 2 `i * - _n -> 1 `i -> 100 `i `uc ]
[; ;main_sync.c: 515: p[1] = getEEPROM(3+(n-1)*100);
"515
[e = *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x ( _getEEPROM (1 -> + -> 3 `i * - _n -> 1 `i -> 100 `i `uc ]
[; ;main_sync.c: 516: }
"516
[e :UE 272 ]
}
"518
[v _escreve_b `(v ~T0 @X0 1 ef1`*uc ]
"519
{
[; ;main_sync.c: 518: void escreve_b (char *p)
[; ;main_sync.c: 519: {
[e :U _escreve_b ]
"518
[v _p `*uc ~T0 @X0 1 r1 ]
"519
[f ]
"520
[v _write_b `i ~T0 @X0 1 a ]
[; ;main_sync.c: 520: int write_b;
[; ;main_sync.c: 521: b1 = p[0];
"521
[e = _b1 *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x ]
[; ;main_sync.c: 522: b2 = p[1];
"522
[e = _b2 *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[; ;main_sync.c: 524: for (write_b=0; write_b<3; write_b+=1){
"524
{
[e = _write_b -> 0 `i ]
[e $ < _write_b -> 3 `i 274  ]
[e $U 275  ]
[e :U 274 ]
{
[; ;main_sync.c: 525: setEEPROM(2+(write_b)*100, b1);
"525
[e ( _setEEPROM (2 , -> + -> 2 `i * _write_b -> 100 `i `uc _b1 ]
[; ;main_sync.c: 526: setEEPROM(3+(write_b)*100, b2);
"526
[e ( _setEEPROM (2 , -> + -> 3 `i * _write_b -> 100 `i `uc _b2 ]
"527
}
"524
[e =+ _write_b -> 1 `i ]
[e $ < _write_b -> 3 `i 274  ]
[e :U 275 ]
"527
}
[; ;main_sync.c: 527: }
[; ;main_sync.c: 528: b = ((float)((b1 << 8) + b2))/100;
"528
[e = _b / -> + << -> _b1 `i -> 8 `i -> _b2 `i `f -> -> 100 `i `f ]
[; ;main_sync.c: 529: }
"529
[e :UE 273 ]
}
"531
[v _protocolo `(i ~T0 @X0 1 ef ]
"532
{
[; ;main_sync.c: 531: int protocolo (void)
[; ;main_sync.c: 532: {
[e :U _protocolo ]
[f ]
"533
[v _comando `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 533: uint8_t comando = serial[1];
[e = _comando *U + &U _serial * -> -> -> 1 `i `ui `ux -> -> # *U &U _serial `ui `ux ]
"534
[v _tamanho `ui ~T0 @X0 1 a ]
[; ;main_sync.c: 534: uint16_t tamanho = (serial[2] << 8) | serial[3];
[e = _tamanho -> | << -> *U + &U _serial * -> -> -> 2 `i `ui `ux -> -> # *U &U _serial `ui `ux `i -> 8 `i -> *U + &U _serial * -> -> -> 3 `i `ui `ux -> -> # *U &U _serial `ui `ux `i `ui ]
[; ;main_sync.c: 536: serial[0] = 0;
"536
[e = *U + &U _serial * -> -> -> 0 `i `ui `ux -> -> # *U &U _serial `ui `ux -> -> 0 `i `uc ]
[; ;main_sync.c: 537: serial[2] = 0;
"537
[e = *U + &U _serial * -> -> -> 2 `i `ui `ux -> -> # *U &U _serial `ui `ux -> -> 0 `i `uc ]
"539
[v _cmd `*uc ~T0 @X0 1 a ]
[; ;main_sync.c: 539: char *cmd = &serial[1];
[e = _cmd &U *U + &U _serial * -> -> -> 1 `i `ui `ux -> -> # *U &U _serial `ui `ux ]
"540
[v _payload `*uc ~T0 @X0 1 a ]
[; ;main_sync.c: 540: char *payload = &serial[4];
[e = _payload &U *U + &U _serial * -> -> -> 4 `i `ui `ux -> -> # *U &U _serial `ui `ux ]
"541
[v _tam `*uc ~T0 @X0 1 a ]
[; ;main_sync.c: 541: char *tam = &serial[3];
[e = _tam &U *U + &U _serial * -> -> -> 3 `i `ui `ux -> -> # *U &U _serial `ui `ux ]
[; ;main_sync.c: 543: *tam = 0;
"543
[e = *U _tam -> -> 0 `i `uc ]
[; ;main_sync.c: 545: switch (comando)
"545
[e $U 279  ]
[; ;main_sync.c: 546: {
"546
{
[; ;main_sync.c: 548: case CMD_QUERY_VERSION:
"548
[e :U 280 ]
[; ;main_sync.c: 549: {
"549
{
[; ;main_sync.c: 550: if(tamanho != 0)
"550
[e $ ! != _tamanho -> -> 0 `i `ui 281  ]
[; ;main_sync.c: 551: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"551
[e ( _erro (1 . `E1758 36 ]
[e $U 282  ]
"552
[e :U 281 ]
[; ;main_sync.c: 552: else
[; ;main_sync.c: 553: {
"553
{
"554
[v _i `ui ~T0 @X0 1 a ]
[; ;main_sync.c: 554: unsigned int i;
[; ;main_sync.c: 555: *cmd = CMD_VERSION;
"555
[e = *U _cmd -> . `E1758 1 `uc ]
[; ;main_sync.c: 556: *tam = 3;
"556
[e = *U _tam -> -> 3 `i `uc ]
[; ;main_sync.c: 558: *payload++ = 0x02;
"558
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 2 `i `uc ]
[; ;main_sync.c: 559: *payload++ = 0x0A;
"559
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 10 `i `uc ]
[; ;main_sync.c: 560: *payload++ = 0x00;
"560
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 0 `i `uc ]
"561
}
[e :U 282 ]
[; ;main_sync.c: 561: }
[; ;main_sync.c: 563: break;
"563
[e $U 278  ]
"564
}
[; ;main_sync.c: 564: }
[; ;main_sync.c: 566: case CMD_VAR_QUERY_LIST:
"566
[e :U 283 ]
[; ;main_sync.c: 567: {
"567
{
[; ;main_sync.c: 568: if(tamanho != 0)
"568
[e $ ! != _tamanho -> -> 0 `i `ui 284  ]
[; ;main_sync.c: 569: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"569
[e ( _erro (1 . `E1758 36 ]
[e $U 285  ]
"570
[e :U 284 ]
[; ;main_sync.c: 570: else
[; ;main_sync.c: 571: {
"571
{
"572
[v _i `ui ~T0 @X0 1 a ]
[; ;main_sync.c: 572: unsigned int i;
[; ;main_sync.c: 573: *cmd = CMD_VAR_LIST;
"573
[e = *U _cmd -> . `E1758 3 `uc ]
[; ;main_sync.c: 574: *tam = 13;
"574
[e = *U _tam -> -> 13 `i `uc ]
[; ;main_sync.c: 576: for(i = 0; i < 8; ++i)
"576
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 286  ]
[e $U 287  ]
"577
[e :U 286 ]
[; ;main_sync.c: 577: *payload++ = 0x02;
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 2 `i `uc ]
"576
[e =+ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 286  ]
[e :U 287 ]
"577
}
[; ;main_sync.c: 579: for(i = 0; i < 3; ++i)
"579
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 3 `i `ui 289  ]
[e $U 290  ]
"580
[e :U 289 ]
[; ;main_sync.c: 580: *payload++ = 0x82;
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 130 `i `uc ]
"579
[e =+ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 3 `i `ui 289  ]
[e :U 290 ]
"580
}
[; ;main_sync.c: 582: *payload++ = 0x81;
"582
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 129 `i `uc ]
[; ;main_sync.c: 583: *payload++ = 0x81;
"583
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 129 `i `uc ]
"584
}
[e :U 285 ]
[; ;main_sync.c: 584: }
[; ;main_sync.c: 586: break;
"586
[e $U 278  ]
"587
}
[; ;main_sync.c: 587: }
[; ;main_sync.c: 589: case CMD_GROUP_QUERY_LIST:
"589
[e :U 292 ]
[; ;main_sync.c: 590: if(tamanho != 0)
"590
[e $ ! != _tamanho -> -> 0 `i `ui 293  ]
[; ;main_sync.c: 591: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"591
[e ( _erro (1 . `E1758 36 ]
[e $U 294  ]
"592
[e :U 293 ]
[; ;main_sync.c: 592: else
[; ;main_sync.c: 593: {
"593
{
[; ;main_sync.c: 594: *cmd = CMD_GROUP_LIST;
"594
[e = *U _cmd -> . `E1758 5 `uc ]
[; ;main_sync.c: 595: *tam = 3;
"595
[e = *U _tam -> -> 3 `i `uc ]
[; ;main_sync.c: 596: *payload++ = 0x0C;
"596
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 12 `i `uc ]
[; ;main_sync.c: 597: *payload++ = 0x08;
"597
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 8 `i `uc ]
[; ;main_sync.c: 598: *payload++ = 0x85;
"598
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> -> 133 `i `uc ]
"599
}
[e :U 294 ]
[; ;main_sync.c: 599: }
[; ;main_sync.c: 600: break;
"600
[e $U 278  ]
[; ;main_sync.c: 602: case CMD_GROUP_QUERY:
"602
[e :U 295 ]
[; ;main_sync.c: 603: {
"603
{
"604
[v _id `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 604: uint8_t id = payload[0];
[e = _id *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 606: if(tamanho != 1)
"606
[e $ ! != _tamanho -> -> 1 `i `ui 296  ]
[; ;main_sync.c: 607: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"607
[e ( _erro (1 . `E1758 36 ]
[e $U 297  ]
"608
[e :U 296 ]
[; ;main_sync.c: 608: else if(id > 2)
[e $ ! > -> _id `i -> 2 `i 298  ]
[; ;main_sync.c: 609: erro(CMD_ERR_INVALID_ID);
"609
[e ( _erro (1 . `E1758 34 ]
[e $U 299  ]
"610
[e :U 298 ]
[; ;main_sync.c: 610: else
[; ;main_sync.c: 611: {
"611
{
[; ;main_sync.c: 612: *cmd = CMD_GROUP;
"612
[e = *U _cmd -> . `E1758 7 `uc ]
"613
[v _i `ui ~T0 @X0 1 a ]
[; ;main_sync.c: 613: unsigned int i = 0;
[e = _i -> -> 0 `i `ui ]
[; ;main_sync.c: 615: if(id == 0 || id == 1)
"615
[e $ ! || == -> _id `i -> 0 `i == -> _id `i -> 1 `i 300  ]
[; ;main_sync.c: 616: {
"616
{
[; ;main_sync.c: 617: *tam += 8;
"617
[e =+ *U _tam -> -> 8 `i `uc ]
[; ;main_sync.c: 618: for(i = 0; i < 8; ++i)
"618
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 301  ]
[e $U 302  ]
"619
[e :U 301 ]
[; ;main_sync.c: 619: *payload++ = i;
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> _i `uc ]
"618
[e =+ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 301  ]
[e :U 302 ]
"619
}
"620
}
[e :U 300 ]
[; ;main_sync.c: 620: }
[; ;main_sync.c: 622: if(id == 0 || id == 2)
"622
[e $ ! || == -> _id `i -> 0 `i == -> _id `i -> 2 `i 304  ]
[; ;main_sync.c: 623: {
"623
{
[; ;main_sync.c: 624: *tam += 4;
"624
[e =+ *U _tam -> -> 4 `i `uc ]
[; ;main_sync.c: 625: for(i = 8; i < 13; ++i)
"625
{
[e = _i -> -> 8 `i `ui ]
[e $ < _i -> -> 13 `i `ui 305  ]
[e $U 306  ]
"626
[e :U 305 ]
[; ;main_sync.c: 626: *payload++ = i;
[e = *U ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x -> _i `uc ]
"625
[e =+ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 13 `i `ui 305  ]
[e :U 306 ]
"626
}
"627
}
[e :U 304 ]
"628
}
[e :U 299 ]
[e :U 297 ]
[; ;main_sync.c: 627: }
[; ;main_sync.c: 628: }
[; ;main_sync.c: 629: break;
"629
[e $U 278  ]
"630
}
[; ;main_sync.c: 630: }
[; ;main_sync.c: 632: case CMD_CURVE_QUERY_LIST:
"632
[e :U 308 ]
[; ;main_sync.c: 633: *cmd = tamanho ? CMD_ERR_INVALID_PAYLOAD_SIZE : CMD_CURVE_LIST;
"633
[e = *U _cmd -> ? != _tamanho -> -> 0 `i `ui : -> . `E1758 36 `i -> . `E1758 9 `i `uc ]
[; ;main_sync.c: 634: break;
"634
[e $U 278  ]
[; ;main_sync.c: 636: case CMD_FUNC_QUERY_LIST:
"636
[e :U 309 ]
[; ;main_sync.c: 637: *cmd = tamanho ? CMD_ERR_INVALID_PAYLOAD_SIZE : CMD_FUNC_LIST;
"637
[e = *U _cmd -> ? != _tamanho -> -> 0 `i `ui : -> . `E1758 36 `i -> . `E1758 13 `i `uc ]
[; ;main_sync.c: 638: break;
"638
[e $U 278  ]
[; ;main_sync.c: 640: case CMD_VAR_READ:
"640
[e :U 310 ]
[; ;main_sync.c: 641: {
"641
{
"642
[v _id `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 642: uint8_t id = payload[0];
[e = _id *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 644: if(tamanho != 1)
"644
[e $ ! != _tamanho -> -> 1 `i `ui 311  ]
[; ;main_sync.c: 645: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"645
[e ( _erro (1 . `E1758 36 ]
[e $U 312  ]
"646
[e :U 311 ]
[; ;main_sync.c: 646: else if(id > 18)
[e $ ! > -> _id `i -> 18 `i 313  ]
[; ;main_sync.c: 647: erro(CMD_ERR_INVALID_ID);
"647
[e ( _erro (1 . `E1758 34 ]
[e $U 314  ]
"648
[e :U 313 ]
[; ;main_sync.c: 648: else
[; ;main_sync.c: 649: {
"649
{
[; ;main_sync.c: 650: *cmd = CMD_VAR_VALUE;
"650
[e = *U _cmd -> . `E1758 15 `uc ]
[; ;main_sync.c: 651: *tam = 2;
"651
[e = *U _tam -> -> 2 `i `uc ]
[; ;main_sync.c: 653: if(id <= 7) le_temp(payload, id);
"653
[e $ ! <= -> _id `i -> 7 `i 315  ]
[e ( _le_temp (2 , _payload -> _id `i ]
[e $U 316  ]
"654
[e :U 315 ]
[; ;main_sync.c: 654: else if(id == 8 || id == 13 || id == 16) le_alpha(payload, (id-1)/5);
[e $ ! || || == -> _id `i -> 8 `i == -> _id `i -> 13 `i == -> _id `i -> 16 `i 317  ]
[e ( _le_alpha (2 , _payload / - -> _id `i -> 1 `i -> 5 `i ]
[e $U 318  ]
"655
[e :U 317 ]
[; ;main_sync.c: 655: else if(id == 9 || id == 14 || id == 17) le_k(payload,(id-1)/5);
[e $ ! || || == -> _id `i -> 9 `i == -> _id `i -> 14 `i == -> _id `i -> 17 `i 319  ]
[e ( _le_k (2 , _payload / - -> _id `i -> 1 `i -> 5 `i ]
[e $U 320  ]
"656
[e :U 319 ]
[; ;main_sync.c: 656: else if(id == 10|| id == 15 || id == 18) le_b(payload,(id-1)/5);
[e $ ! || || == -> _id `i -> 10 `i == -> _id `i -> 15 `i == -> _id `i -> 18 `i 321  ]
[e ( _le_b (2 , _payload / - -> _id `i -> 1 `i -> 5 `i ]
[e $U 322  ]
"657
[e :U 321 ]
[; ;main_sync.c: 657: else
[; ;main_sync.c: 658: {
"658
{
[; ;main_sync.c: 659: *tam = 1;
"659
[e = *U _tam -> -> 1 `i `uc ]
[; ;main_sync.c: 660: if(id == 11)
"660
[e $ ! == -> _id `i -> 11 `i 323  ]
[; ;main_sync.c: 661: payload[0] = lerADpuro;
"661
[e = *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x _lerADpuro ]
[e $U 324  ]
"662
[e :U 323 ]
[; ;main_sync.c: 662: else
[; ;main_sync.c: 663: payload[0] = modoLeitura;
"663
[e = *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x _modoLeitura ]
[e :U 324 ]
"664
}
[e :U 322 ]
[e :U 320 ]
[e :U 318 ]
[e :U 316 ]
"665
}
[e :U 314 ]
[e :U 312 ]
[; ;main_sync.c: 664: }
[; ;main_sync.c: 665: }
[; ;main_sync.c: 666: break;
"666
[e $U 278  ]
"667
}
[; ;main_sync.c: 667: }
[; ;main_sync.c: 669: case CMD_GROUP_READ:
"669
[e :U 325 ]
[; ;main_sync.c: 670: {
"670
{
"671
[v _id `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 671: uint8_t id = payload[0];
[e = _id *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 673: if(tamanho != 1)
"673
[e $ ! != _tamanho -> -> 1 `i `ui 326  ]
[; ;main_sync.c: 674: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"674
[e ( _erro (1 . `E1758 36 ]
[e $U 327  ]
"675
[e :U 326 ]
[; ;main_sync.c: 675: else if(id > 2)
[e $ ! > -> _id `i -> 2 `i 328  ]
[; ;main_sync.c: 676: erro(CMD_ERR_INVALID_ID);
"676
[e ( _erro (1 . `E1758 34 ]
[e $U 329  ]
"677
[e :U 328 ]
[; ;main_sync.c: 677: else
[; ;main_sync.c: 678: {
"678
{
[; ;main_sync.c: 679: *cmd = CMD_GROUP_VALUES;
"679
[e = *U _cmd -> . `E1758 17 `uc ]
"681
[v _i `ui ~T0 @X0 1 a ]
[; ;main_sync.c: 681: unsigned int i;
[; ;main_sync.c: 683: if(id == 0 || id == 1)
"683
[e $ ! || == -> _id `i -> 0 `i == -> _id `i -> 1 `i 330  ]
[; ;main_sync.c: 684: for(i = 0; i < 8; ++i)
"684
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 331  ]
[e $U 332  ]
"685
[e :U 331 ]
[; ;main_sync.c: 685: {
{
[; ;main_sync.c: 686: le_temp(payload, i);
"686
[e ( _le_temp (2 , _payload -> _i `i ]
[; ;main_sync.c: 687: payload += 2;
"687
[e =+ _payload * -> -> 2 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 688: *tam += 2;
"688
[e =+ *U _tam -> -> 2 `i `uc ]
"689
}
"684
[e =+ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 331  ]
[e :U 332 ]
"689
}
[e :U 330 ]
[; ;main_sync.c: 689: }
[; ;main_sync.c: 691: if(id == 0 || id == 2)
"691
[e $ ! || == -> _id `i -> 0 `i == -> _id `i -> 2 `i 334  ]
[; ;main_sync.c: 692: {
"692
{
[; ;main_sync.c: 693: le_alpha(payload,1);
"693
[e ( _le_alpha (2 , _payload -> 1 `i ]
[; ;main_sync.c: 694: le_alpha(payload,2);
"694
[e ( _le_alpha (2 , _payload -> 2 `i ]
[; ;main_sync.c: 695: le_alpha(payload,3);
"695
[e ( _le_alpha (2 , _payload -> 3 `i ]
[; ;main_sync.c: 696: payload += 2;
"696
[e =+ _payload * -> -> 2 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 697: *tam += 2;
"697
[e =+ *U _tam -> -> 2 `i `uc ]
[; ;main_sync.c: 699: le_k(payload,1);
"699
[e ( _le_k (2 , _payload -> 1 `i ]
[; ;main_sync.c: 700: le_k(payload,2);
"700
[e ( _le_k (2 , _payload -> 2 `i ]
[; ;main_sync.c: 701: le_k(payload,3);
"701
[e ( _le_k (2 , _payload -> 3 `i ]
[; ;main_sync.c: 702: payload += 2;
"702
[e =+ _payload * -> -> 2 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 703: *tam += 2;
"703
[e =+ *U _tam -> -> 2 `i `uc ]
[; ;main_sync.c: 705: le_b(payload,1);
"705
[e ( _le_b (2 , _payload -> 1 `i ]
[; ;main_sync.c: 706: le_b(payload,2);
"706
[e ( _le_b (2 , _payload -> 2 `i ]
[; ;main_sync.c: 707: le_b(payload,3);
"707
[e ( _le_b (2 , _payload -> 3 `i ]
[; ;main_sync.c: 708: payload += 2;
"708
[e =+ _payload * -> -> 2 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 709: *tam += 2;
"709
[e =+ *U _tam -> -> 2 `i `uc ]
[; ;main_sync.c: 711: *payload = lerADpuro;
"711
[e = *U _payload _lerADpuro ]
[; ;main_sync.c: 712: payload++;
"712
[e ++ _payload * -> -> 1 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 713: *tam++;
"713
[e *U ++ _tam * -> -> 1 `i `x -> -> # *U _tam `i `x ]
[; ;main_sync.c: 715: *payload = modoLeitura;
"715
[e = *U _payload _modoLeitura ]
[; ;main_sync.c: 716: *tam++;
"716
[e *U ++ _tam * -> -> 1 `i `x -> -> # *U _tam `i `x ]
"717
}
[e :U 334 ]
"718
}
[e :U 329 ]
[e :U 327 ]
[; ;main_sync.c: 717: }
[; ;main_sync.c: 718: }
[; ;main_sync.c: 719: break;
"719
[e $U 278  ]
"720
}
[; ;main_sync.c: 720: }
[; ;main_sync.c: 722: case CMD_VAR_WRITE:
"722
[e :U 335 ]
[; ;main_sync.c: 723: {
"723
{
[; ;main_sync.c: 724: *cmd = CMD_OK;
"724
[e = *U _cmd -> . `E1758 31 `uc ]
"725
[v _id `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 725: uint8_t id = payload[0];
[e = _id *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 727: if(id == 11 && tamanho != 2)
"727
[e $ ! && == -> _id `i -> 11 `i != _tamanho -> -> 2 `i `ui 336  ]
[; ;main_sync.c: 728: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"728
[e ( _erro (1 . `E1758 36 ]
[e $U 337  ]
"729
[e :U 336 ]
[; ;main_sync.c: 729: else if(id == 12 && tamanho != 2)
[e $ ! && == -> _id `i -> 12 `i != _tamanho -> -> 2 `i `ui 338  ]
[; ;main_sync.c: 730: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"730
[e ( _erro (1 . `E1758 36 ]
[e $U 339  ]
"731
[e :U 338 ]
[; ;main_sync.c: 731: else if(id != 11 && id != 12 && tamanho != 3)
[e $ ! && && != -> _id `i -> 11 `i != -> _id `i -> 12 `i != _tamanho -> -> 3 `i `ui 340  ]
[; ;main_sync.c: 732: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"732
[e ( _erro (1 . `E1758 36 ]
[e $U 341  ]
"733
[e :U 340 ]
[; ;main_sync.c: 733: else if(id > 18)
[e $ ! > -> _id `i -> 18 `i 342  ]
[; ;main_sync.c: 734: erro(CMD_ERR_INVALID_ID);
"734
[e ( _erro (1 . `E1758 34 ]
[e $U 343  ]
"735
[e :U 342 ]
[; ;main_sync.c: 735: else if(id < 8)
[e $ ! < -> _id `i -> 8 `i 344  ]
[; ;main_sync.c: 736: erro(CMD_ERR_READ_ONLY);
"736
[e ( _erro (1 . `E1758 37 ]
[e $U 345  ]
"737
[e :U 344 ]
[; ;main_sync.c: 737: else
[; ;main_sync.c: 738: {
"738
{
[; ;main_sync.c: 739: if(id == 8|| id == 13 || id == 16) escreve_alpha(&payload[1]);
"739
[e $ ! || || == -> _id `i -> 8 `i == -> _id `i -> 13 `i == -> _id `i -> 16 `i 346  ]
[e ( _escreve_alpha (1 &U *U + _payload * -> -> 1 `i `x -> -> # *U _payload `i `x ]
[e $U 347  ]
"740
[e :U 346 ]
[; ;main_sync.c: 740: else if(id == 9|| id == 14 || id == 17) escreve_k(&payload[1]);
[e $ ! || || == -> _id `i -> 9 `i == -> _id `i -> 14 `i == -> _id `i -> 17 `i 348  ]
[e ( _escreve_k (1 &U *U + _payload * -> -> 1 `i `x -> -> # *U _payload `i `x ]
[e $U 349  ]
"741
[e :U 348 ]
[; ;main_sync.c: 741: else if(id == 10|| id == 15 || id == 18) escreve_b(&payload[1]);
[e $ ! || || == -> _id `i -> 10 `i == -> _id `i -> 15 `i == -> _id `i -> 18 `i 350  ]
[e ( _escreve_b (1 &U *U + _payload * -> -> 1 `i `x -> -> # *U _payload `i `x ]
[e $U 351  ]
"742
[e :U 350 ]
[; ;main_sync.c: 742: else if(id == 11) lerADpuro = payload[1] & 0x03;
[e $ ! == -> _id `i -> 11 `i 352  ]
[e = _lerADpuro -> & -> *U + _payload * -> -> 1 `i `x -> -> # *U _payload `i `x `i -> 3 `i `uc ]
[e $U 353  ]
"743
[e :U 352 ]
[; ;main_sync.c: 743: else modoLeitura = payload[1] & 0x0F;
[e = _modoLeitura -> & -> *U + _payload * -> -> 1 `i `x -> -> # *U _payload `i `x `i -> 15 `i `uc ]
[e :U 353 ]
[e :U 351 ]
[e :U 349 ]
[e :U 347 ]
"744
}
[e :U 345 ]
[e :U 343 ]
[e :U 341 ]
[e :U 339 ]
[e :U 337 ]
[; ;main_sync.c: 744: }
[; ;main_sync.c: 745: break;
"745
[e $U 278  ]
"746
}
[; ;main_sync.c: 746: }
[; ;main_sync.c: 747: case CMD_GROUP_WRITE:
"747
[e :U 354 ]
[; ;main_sync.c: 748: {
"748
{
"749
[v _id `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 749: uint8_t id = payload[0];
[e = _id *U + _payload * -> -> 0 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 751: if(tamanho < 1)
"751
[e $ ! < _tamanho -> -> 1 `i `ui 355  ]
[; ;main_sync.c: 752: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"752
[e ( _erro (1 . `E1758 36 ]
[e $U 356  ]
"753
[e :U 355 ]
[; ;main_sync.c: 753: else if(id > 2)
[e $ ! > -> _id `i -> 2 `i 357  ]
[; ;main_sync.c: 754: erro(CMD_ERR_INVALID_ID);
"754
[e ( _erro (1 . `E1758 34 ]
[e $U 358  ]
"755
[e :U 357 ]
[; ;main_sync.c: 755: else if(id < 2)
[e $ ! < -> _id `i -> 2 `i 359  ]
[; ;main_sync.c: 756: erro(CMD_ERR_READ_ONLY);
"756
[e ( _erro (1 . `E1758 37 ]
[e $U 360  ]
"757
[e :U 359 ]
[; ;main_sync.c: 757: else if(tamanho != 9)
[e $ ! != _tamanho -> -> 9 `i `ui 361  ]
[; ;main_sync.c: 758: erro(CMD_ERR_INVALID_PAYLOAD_SIZE);
"758
[e ( _erro (1 . `E1758 36 ]
[e $U 362  ]
"759
[e :U 361 ]
[; ;main_sync.c: 759: else
[; ;main_sync.c: 760: {
"760
{
[; ;main_sync.c: 761: escreve_alpha(&payload[1]);
"761
[e ( _escreve_alpha (1 &U *U + _payload * -> -> 1 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 762: escreve_k(&payload[3]);
"762
[e ( _escreve_k (1 &U *U + _payload * -> -> 3 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 763: escreve_b(&payload[5]);
"763
[e ( _escreve_b (1 &U *U + _payload * -> -> 5 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 764: lerADpuro = payload[7];
"764
[e = _lerADpuro *U + _payload * -> -> 7 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 765: modoLeitura = payload[8];
"765
[e = _modoLeitura *U + _payload * -> -> 8 `i `x -> -> # *U _payload `i `x ]
[; ;main_sync.c: 766: ok();
"766
[e ( _ok ..  ]
"767
}
[e :U 362 ]
[e :U 360 ]
[e :U 358 ]
[e :U 356 ]
[; ;main_sync.c: 767: }
[; ;main_sync.c: 768: break;
"768
[e $U 278  ]
"769
}
[; ;main_sync.c: 769: }
[; ;main_sync.c: 771: default:
"771
[e :U 363 ]
[; ;main_sync.c: 772: erro(CMD_ERR_OP_NOT_SUPPORTED);
"772
[e ( _erro (1 . `E1758 33 ]
[; ;main_sync.c: 773: break;
"773
[e $U 278  ]
"774
}
[; ;main_sync.c: 774: }
[e $U 278  ]
"545
[e :U 279 ]
[e [\ _comando , $ -> . `E1758 0 `uc 280
 , $ -> . `E1758 2 `uc 283
 , $ -> . `E1758 4 `uc 292
 , $ -> . `E1758 6 `uc 295
 , $ -> . `E1758 8 `uc 308
 , $ -> . `E1758 12 `uc 309
 , $ -> . `E1758 14 `uc 310
 , $ -> . `E1758 16 `uc 325
 , $ -> . `E1758 18 `uc 335
 , $ -> . `E1758 19 `uc 354
 363 ]
"774
[e :U 278 ]
[; ;main_sync.c: 776: return 4+*tam;
"776
[e ) + -> 4 `i -> *U _tam `i ]
[e $UE 277  ]
[; ;main_sync.c: 777: }
"777
[e :UE 277 ]
}
"779
[v _enviar `(v ~T0 @X0 1 ef2`*uc`i ]
"780
{
[; ;main_sync.c: 779: void enviar(char *envia, int n)
[; ;main_sync.c: 780: {
[e :U _enviar ]
"779
[v _envia `*uc ~T0 @X0 1 r1 ]
[v _n `i ~T0 @X0 1 r2 ]
"780
[f ]
"781
[v _i `i ~T0 @X0 1 a ]
"782
[v _cs `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 781: int i;
[; ;main_sync.c: 782: char cs = 0;
[e = _cs -> -> 0 `i `uc ]
[; ;main_sync.c: 783: for (i = 0; i < n; ++i){
"783
{
[e = _i -> 0 `i ]
[e $U 368  ]
[e :U 365 ]
{
[; ;main_sync.c: 784: cs += envia[i];
"784
[e =+ _cs *U + _envia * -> _i `x -> -> # *U _envia `i `x ]
[; ;main_sync.c: 785: TXREG = envia[i];
"785
[e = _TXREG *U + _envia * -> _i `x -> -> # *U _envia `i `x ]
[; ;main_sync.c: 786: while (!TRMT);
"786
[e $U 369  ]
[e :U 370 ]
[e :U 369 ]
[e $ ! _TRMT 370  ]
[e :U 371 ]
"787
}
"783
[e =+ _i -> 1 `i ]
[e :U 368 ]
[e $ < _i _n 365  ]
[e :U 366 ]
"787
}
[; ;main_sync.c: 787: }
[; ;main_sync.c: 788: cs = 0x100 - cs;
"788
[e = _cs -> - -> 256 `i -> _cs `i `uc ]
[; ;main_sync.c: 789: TXREG = cs;
"789
[e = _TXREG _cs ]
[; ;main_sync.c: 790: while (!TRMT);
"790
[e $U 372  ]
[e :U 373 ]
[e :U 372 ]
[e $ ! _TRMT 373  ]
[e :U 374 ]
[; ;main_sync.c: 791: }
"791
[e :UE 364 ]
}
"793
[v _ad `(ui ~T0 @X0 1 ef ]
"794
{
[; ;main_sync.c: 793: uint16_t ad (void)
[; ;main_sync.c: 794: {
[e :U _ad ]
[f ]
"795
[v __AD `ui ~T0 @X0 1 a ]
[v __AD0 `ui ~T0 @X0 1 a ]
[v __AD1 `ui ~T0 @X0 1 a ]
[v _aux `ui ~T0 @X0 1 a ]
[; ;main_sync.c: 795: uint16_t _AD, _AD0, _AD1, aux;
[; ;main_sync.c: 797: PORTDbits.RD0 = 1;
"797
[e = . . _PORTDbits 0 0 -> -> 1 `i `uc ]
[; ;main_sync.c: 798: asm("NOP");
"798
[; <" NOP ;# ">
[; ;main_sync.c: 799: asm("NOP");
"799
[; <" NOP ;# ">
[; ;main_sync.c: 800: asm("NOP");
"800
[; <" NOP ;# ">
[; ;main_sync.c: 801: asm("NOP");
"801
[; <" NOP ;# ">
[; ;main_sync.c: 802: PORTDbits.RD0 = 0;
"802
[e = . . _PORTDbits 0 0 -> -> 0 `i `uc ]
[; ;main_sync.c: 803: SSPBUF = 0;
"803
[e = _SSPBUF -> -> 0 `i `uc ]
[; ;main_sync.c: 804: aux = SSPBUF;
"804
[e = _aux -> _SSPBUF `ui ]
[; ;main_sync.c: 805: while (!BF);
"805
[e $U 376  ]
[e :U 377 ]
[e :U 376 ]
[e $ ! _BF 377  ]
[e :U 378 ]
[; ;main_sync.c: 806: _AD0 = SSPBUF;
"806
[e = __AD0 -> _SSPBUF `ui ]
[; ;main_sync.c: 807: SSPBUF = 0;
"807
[e = _SSPBUF -> -> 0 `i `uc ]
[; ;main_sync.c: 808: aux = SSPBUF;
"808
[e = _aux -> _SSPBUF `ui ]
[; ;main_sync.c: 809: while (!BF);
"809
[e $U 379  ]
[e :U 380 ]
[e :U 379 ]
[e $ ! _BF 380  ]
[e :U 381 ]
[; ;main_sync.c: 810: _AD1 = SSPBUF;
"810
[e = __AD1 -> _SSPBUF `ui ]
[; ;main_sync.c: 811: _AD = (_AD0 << 8) + _AD1;
"811
[e = __AD + << __AD0 -> 8 `i __AD1 ]
[; ;main_sync.c: 812: return _AD;
"812
[e ) __AD ]
[e $UE 375  ]
[; ;main_sync.c: 813: }
"813
[e :UE 375 ]
}
"815
[v _getEEPROM `(uc ~T0 @X0 1 ef1`uc ]
"816
{
[; ;main_sync.c: 815: uint8_t getEEPROM (uint8_t c)
[; ;main_sync.c: 816: {
[e :U _getEEPROM ]
"815
[v _c `uc ~T0 @X0 1 r1 ]
"816
[f ]
"817
[v _aux `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 817: uint8_t aux;
[; ;main_sync.c: 819: RP0 = 0;
"819
[e = _RP0 -> -> 0 `i `b ]
[; ;main_sync.c: 820: RP1 = 0;
"820
[e = _RP1 -> -> 0 `i `b ]
[; ;main_sync.c: 821: EEADR = c;
"821
[e = _EEADR _c ]
[; ;main_sync.c: 822: EEPGD = 0;
"822
[e = _EEPGD -> -> 0 `i `b ]
[; ;main_sync.c: 823: RD = 1;
"823
[e = _RD -> -> 1 `i `b ]
[; ;main_sync.c: 824: while(RD);
"824
[e $U 383  ]
[e :U 384 ]
[e :U 383 ]
[e $ _RD 384  ]
[e :U 385 ]
[; ;main_sync.c: 825: aux = EEDAT;
"825
[e = _aux _EEDAT ]
[; ;main_sync.c: 826: return aux;
"826
[e ) _aux ]
[e $UE 382  ]
[; ;main_sync.c: 827: }
"827
[e :UE 382 ]
}
"829
[v _setEEPROM `(v ~T0 @X0 1 ef2`uc`uc ]
"830
{
[; ;main_sync.c: 829: void setEEPROM (uint8_t addr, uint8_t valor)
[; ;main_sync.c: 830: {
[e :U _setEEPROM ]
"829
[v _addr `uc ~T0 @X0 1 r1 ]
[v _valor `uc ~T0 @X0 1 r2 ]
"830
[f ]
[; ;main_sync.c: 831: RP0 = 0;
"831
[e = _RP0 -> -> 0 `i `b ]
[; ;main_sync.c: 832: RP1 = 0;
"832
[e = _RP1 -> -> 0 `i `b ]
[; ;main_sync.c: 833: EEADR = addr;
"833
[e = _EEADR _addr ]
[; ;main_sync.c: 834: EEDAT = valor;
"834
[e = _EEDAT _valor ]
[; ;main_sync.c: 835: EEPGD = 0;
"835
[e = _EEPGD -> -> 0 `i `b ]
[; ;main_sync.c: 836: WREN = 1;
"836
[e = _WREN -> -> 1 `i `b ]
[; ;main_sync.c: 837: INTCONbits.GIE = 0;
"837
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;main_sync.c: 838: EECON2 = 0x55;
"838
[e = _EECON2 -> -> 85 `i `uc ]
[; ;main_sync.c: 839: EECON2 = 0xAA;
"839
[e = _EECON2 -> -> 170 `i `uc ]
[; ;main_sync.c: 840: WR = 1;
"840
[e = _WR -> -> 1 `i `b ]
[; ;main_sync.c: 842: while(WR);
"842
[e $U 387  ]
[e :U 388 ]
[e :U 387 ]
[e $ _WR 388  ]
[e :U 389 ]
[; ;main_sync.c: 844: INTCONbits.GIE = 1;
"844
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;main_sync.c: 845: WREN = 0;
"845
[e = _WREN -> -> 0 `i `b ]
[; ;main_sync.c: 846: }
"846
[e :UE 386 ]
}
"848
[v _initLT `(v ~T0 @X0 1 ef ]
"849
{
[; ;main_sync.c: 848: void initLT (void)
[; ;main_sync.c: 849: {
[e :U _initLT ]
[f ]
[; ;main_sync.c: 850: escreveLT(0x00, 0x38);
"850
[e ( _escreveLT (2 , -> -> 0 `i `uc -> -> 56 `i `uc ]
[; ;main_sync.c: 851: escreveLT(0x01, 0x4B);
"851
[e ( _escreveLT (2 , -> -> 1 `i `uc -> -> 75 `i `uc ]
[; ;main_sync.c: 852: escreveLT(0x02, 0x03);
"852
[e ( _escreveLT (2 , -> -> 2 `i `uc -> -> 3 `i `uc ]
[; ;main_sync.c: 853: escreveLT(0x04, 0x07);
"853
[e ( _escreveLT (2 , -> -> 4 `i `uc -> -> 7 `i `uc ]
[; ;main_sync.c: 854: }
"854
[e :UE 390 ]
}
"856
[v _escreveLT `(v ~T0 @X0 1 ef2`uc`uc ]
"857
{
[; ;main_sync.c: 856: void escreveLT (uint8_t regAddr, uint8_t data)
[; ;main_sync.c: 857: {
[e :U _escreveLT ]
"856
[v _regAddr `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
"857
[f ]
"858
[v _chipAddr `uc ~T0 @X0 1 a ]
[; ;main_sync.c: 858: uint8_t chipAddr = 0x8A;
[e = _chipAddr -> -> 138 `i `uc ]
"859
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
[; ;main_sync.c: 859: int i, j;
[; ;main_sync.c: 860: PORTDbits.RD4 = 0;
"860
[e = . . _PORTDbits 0 4 -> -> 0 `i `uc ]
[; ;main_sync.c: 861: for(j = 0; j < 10; j++);
"861
{
[e = _j -> 0 `i ]
[e $ < _j -> 10 `i 392  ]
[e $U 393  ]
[e :U 392 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 10 `i 392  ]
[e :U 393 ]
}
[; ;main_sync.c: 862: PORTDbits.RD5 = 0;
"862
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 864: for (i = 0; i < 8; i++){
"864
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 395  ]
[e $U 396  ]
[e :U 395 ]
{
[; ;main_sync.c: 865: PORTDbits.RD4 = (chipAddr >> (7 - i));
"865
[e = . . _PORTDbits 0 4 -> >> -> _chipAddr `i - -> 7 `i _i `uc ]
[; ;main_sync.c: 866: for(j = 0; j < 3; j++);
"866
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 398  ]
[e $U 399  ]
[e :U 398 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 398  ]
[e :U 399 ]
}
[; ;main_sync.c: 867: PORTDbits.RD5 = 1;
"867
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 868: for(j = 0; j < 3; j++);
"868
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 401  ]
[e $U 402  ]
[e :U 401 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 401  ]
[e :U 402 ]
}
[; ;main_sync.c: 869: PORTDbits.RD5 = 0;
"869
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 870: if(i == 7)
"870
[e $ ! == _i -> 7 `i 404  ]
[; ;main_sync.c: 871: TRISDbits.TRISD4 = 1;
"871
[e = . . _TRISDbits 0 4 -> -> 1 `i `uc ]
[e :U 404 ]
"872
}
"864
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 395  ]
[e :U 396 ]
"872
}
[; ;main_sync.c: 872: }
[; ;main_sync.c: 874: TRISDbits.TRISD4 = 0;
"874
[e = . . _TRISDbits 0 4 -> -> 0 `i `uc ]
[; ;main_sync.c: 875: for(j = 0; j < 3; j++);
"875
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 405  ]
[e $U 406  ]
[e :U 405 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 405  ]
[e :U 406 ]
}
[; ;main_sync.c: 876: PORTDbits.RD5 = 1;
"876
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 877: for(j = 0; j < 2; j++);
"877
{
[e = _j -> 0 `i ]
[e $ < _j -> 2 `i 408  ]
[e $U 409  ]
[e :U 408 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 2 `i 408  ]
[e :U 409 ]
}
[; ;main_sync.c: 878: PORTDbits.RD5 = 0;
"878
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 879: for(j = 0; j < 3; j++);
"879
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 411  ]
[e $U 412  ]
[e :U 411 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 411  ]
[e :U 412 ]
}
[; ;main_sync.c: 881: PORTDbits.RD4 = 1;
"881
[e = . . _PORTDbits 0 4 -> -> 1 `i `uc ]
[; ;main_sync.c: 882: for(j = 0; j < 15; j++);
"882
{
[e = _j -> 0 `i ]
[e $ < _j -> 15 `i 414  ]
[e $U 415  ]
[e :U 414 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 15 `i 414  ]
[e :U 415 ]
}
[; ;main_sync.c: 884: for (i = 0; i < 8; i++){
"884
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 417  ]
[e $U 418  ]
[e :U 417 ]
{
[; ;main_sync.c: 885: PORTDbits.RD4 = (regAddr >> (7 - i));
"885
[e = . . _PORTDbits 0 4 -> >> -> _regAddr `i - -> 7 `i _i `uc ]
[; ;main_sync.c: 886: for(j = 0; j < 3; j++);
"886
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 420  ]
[e $U 421  ]
[e :U 420 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 420  ]
[e :U 421 ]
}
[; ;main_sync.c: 887: PORTDbits.RD5 = 1;
"887
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 888: for(j = 0; j < 3; j++);
"888
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 423  ]
[e $U 424  ]
[e :U 423 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 423  ]
[e :U 424 ]
}
[; ;main_sync.c: 889: PORTDbits.RD5 = 0;
"889
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 890: if(i == 7)
"890
[e $ ! == _i -> 7 `i 426  ]
[; ;main_sync.c: 891: TRISDbits.TRISD4 = 1;
"891
[e = . . _TRISDbits 0 4 -> -> 1 `i `uc ]
[e :U 426 ]
"892
}
"884
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 417  ]
[e :U 418 ]
"892
}
[; ;main_sync.c: 892: }
[; ;main_sync.c: 894: TRISDbits.TRISD4 = 0;
"894
[e = . . _TRISDbits 0 4 -> -> 0 `i `uc ]
[; ;main_sync.c: 895: for(j = 0; j < 3; j++);
"895
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 427  ]
[e $U 428  ]
[e :U 427 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 427  ]
[e :U 428 ]
}
[; ;main_sync.c: 896: PORTDbits.RD5 = 1;
"896
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 897: for(j = 0; j < 2; j++);
"897
{
[e = _j -> 0 `i ]
[e $ < _j -> 2 `i 430  ]
[e $U 431  ]
[e :U 430 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 2 `i 430  ]
[e :U 431 ]
}
[; ;main_sync.c: 898: PORTDbits.RD5 = 0;
"898
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 899: for(j = 0; j < 3; j++);
"899
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 433  ]
[e $U 434  ]
[e :U 433 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 433  ]
[e :U 434 ]
}
[; ;main_sync.c: 901: PORTDbits.RD4 = 1;
"901
[e = . . _PORTDbits 0 4 -> -> 1 `i `uc ]
[; ;main_sync.c: 902: for(j = 0; j < 15; j++);
"902
{
[e = _j -> 0 `i ]
[e $ < _j -> 15 `i 436  ]
[e $U 437  ]
[e :U 436 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 15 `i 436  ]
[e :U 437 ]
}
[; ;main_sync.c: 904: for (i = 0; i < 8; i++){
"904
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 439  ]
[e $U 440  ]
[e :U 439 ]
{
[; ;main_sync.c: 905: PORTDbits.RD4 = (data >> (7 - i));
"905
[e = . . _PORTDbits 0 4 -> >> -> _data `i - -> 7 `i _i `uc ]
[; ;main_sync.c: 906: for(j = 0; j < 3; j++);
"906
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 442  ]
[e $U 443  ]
[e :U 442 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 442  ]
[e :U 443 ]
}
[; ;main_sync.c: 907: PORTDbits.RD5 = 1;
"907
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 908: for(j = 0; j < 3; j++);
"908
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 445  ]
[e $U 446  ]
[e :U 445 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 445  ]
[e :U 446 ]
}
[; ;main_sync.c: 909: PORTDbits.RD5 = 0;
"909
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 910: if(i == 7)
"910
[e $ ! == _i -> 7 `i 448  ]
[; ;main_sync.c: 911: TRISDbits.TRISD4 = 1;
"911
[e = . . _TRISDbits 0 4 -> -> 1 `i `uc ]
[e :U 448 ]
"912
}
"904
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 439  ]
[e :U 440 ]
"912
}
[; ;main_sync.c: 912: }
[; ;main_sync.c: 914: TRISDbits.TRISD4 = 0;
"914
[e = . . _TRISDbits 0 4 -> -> 0 `i `uc ]
[; ;main_sync.c: 915: for(j = 0; j < 3; j++);
"915
{
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 449  ]
[e $U 450  ]
[e :U 449 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 449  ]
[e :U 450 ]
}
[; ;main_sync.c: 916: PORTDbits.RD5 = 1;
"916
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 917: for(j = 0; j < 2; j++);
"917
{
[e = _j -> 0 `i ]
[e $ < _j -> 2 `i 452  ]
[e $U 453  ]
[e :U 452 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 2 `i 452  ]
[e :U 453 ]
}
[; ;main_sync.c: 918: PORTDbits.RD5 = 0;
"918
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
[; ;main_sync.c: 919: for(j = 0; j < 5; j++);
"919
{
[e = _j -> 0 `i ]
[e $ < _j -> 5 `i 455  ]
[e $U 456  ]
[e :U 455 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 5 `i 455  ]
[e :U 456 ]
}
[; ;main_sync.c: 921: PORTDbits.RD5 = 1;
"921
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
[; ;main_sync.c: 922: for(j = 0; j < 10; j++);
"922
{
[e = _j -> 0 `i ]
[e $ < _j -> 10 `i 458  ]
[e $U 459  ]
[e :U 458 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 10 `i 458  ]
[e :U 459 ]
}
[; ;main_sync.c: 923: PORTDbits.RD4 = 1;
"923
[e = . . _PORTDbits 0 4 -> -> 1 `i `uc ]
[; ;main_sync.c: 925: for(j = 0; j < 25; j++);
"925
{
[e = _j -> 0 `i ]
[e $ < _j -> 25 `i 461  ]
[e $U 462  ]
[e :U 461 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 25 `i 461  ]
[e :U 462 ]
}
[; ;main_sync.c: 926: }
"926
[e :UE 391 ]
}
